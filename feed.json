{
    "version" : "https://jsonfeed.org/version/1",
    "title" : "Kaushik Gopal's Site",
    "description": "Recent content on Kaushik Gopal's Site",
    "home_page_url" : "https://kau.sh",
    "feed_url" : "https://kau.sh/index.json",
    "author" : {
        "name" : "Kaushik Gopal"
    },
    "items" : [

    {
        "title" : "Own your online presence - Step 1 ☝️",
        "date_published" : "2023-02-02T19:13:13-08:00",
        "id" : "https://kau.sh/blog/own-your-online-presence/",
        "file_path" : "blog/2023-02-02-own-your-online-presence/index.md",
        "url" : "https://kau.sh/blog/own-your-online-presence/",
        "content_html" : "\u003cp\u003eOwning your content and where you put it is crucial in the online world. The first step to establishing your corner on the internet is to choose a domain name\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003cp\u003eAfter obtaining a domain name, many people only set up a website. However, I recommend taking the next step of creating subdomain redirects for your social media handles.\u003c/p\u003e\n\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"https://media.hachyderm.io/cache/media_attachments/files/109/783/948/617/706/208/original/e708f6634f54df88.png\"\n                \n                \n                    alt=\"mammoth elephant being attacked\"\n                \n                \n                \n            /\u003e\n\n            \n            \u003cfigcaption\u003e\n                \n\n                \n                        \n\n                        \n                            \n                            \n                            \u003ca class=\"center\" href=\"https://mstdn.party/@UnFitz/109783948559350360\"\u003e\n                            \n                        \n\n                                Mastodon post by UnFitz\n\n                            \u003c/a\u003e\n                \n\n            \u003c/figcaption\u003e\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eFor example, when mastodon.social suffered a \u003ca href=\"https://mastodon.social/@Gargron/109781490892884305\"\u003eDDoS\u003c/a\u003e attack, I moved to \u003ca href=\"https://hachyderm.io\"\u003ehachyderm.io\u003c/a\u003e\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e, but the mastodon link I hand out to folks remained unchanged.\u003c/p\u003e\n\u003cp\u003eHow you ask? It\u0026rsquo;s \u003ca href=\"https://mastodon.kau.sh\"\u003emastodon.kau.sh\u003c/a\u003e and I control the redirect. I just switched it intenally from \u003ccode\u003emastodon.social/@kaushikgopal\u003c/code\u003e →  \u003ccode\u003ehachyderm.io/@kaush\u003c/code\u003e\u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003cp\u003eThis is also why I am not terribly worried about changing my handles on Github, Twitter, LinkedIn, or YouTube, as I have redirects for all of these:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.kau.sh\"\u003egithub.kau.sh\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://twitter.kau.sh\"\u003etwitter.kau.sh\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://linkedin.kau.sh\"\u003elinkedin.kau.sh\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://youtube.kau.sh\"\u003eyoutube.kau.sh\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eTo take control of your online presence, buy your own domain, adjust your DNS settings\u003csup id=\"fnref:4\"\u003e\u003ca href=\"#fn:4\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e4\u003c/a\u003e\u003c/sup\u003e, and start using your own URLs. It\u0026rsquo;s a simple first step with a big impact.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eAfter \u003ca href=\"https://kaushikgopal.com\"\u003emany\u003c/a\u003e \u003ca href=\"https://kaush.co\"\u003emany\u003c/a\u003e \u003ca href=\"https://jkl.gg\"\u003eattempts\u003c/a\u003e, I landed on \u003ca href=\"https://kau.sh\"\u003eone\u003c/a\u003e that I liked. I use \u003ca href=\"https://namecheap.pxf.io/EaL5yX\"\u003enamecheap\u003c/a\u003e (referral code)\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eIt was already on my mind to be honest and I guess this was the push I\nneeded.\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003eThe added benefit is that I don\u0026rsquo;t have to remember or type Mastodon\u0026rsquo;s unattractive URLs.\u0026#160;\u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:4\"\u003e\n\u003cp\u003e\u003ca href=\"https://developers.cloudflare.com/fundamentals/get-started/basic-tasks/manage-domains/redirect-domain/\"\u003eCloudflare makes these trivially\neasy\u003c/a\u003e.\u0026#160;\u003ca href=\"#fnref:4\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "How to output audio to multiple Airpods or headphones",
        "date_published" : "2023-01-28T21:27:58-08:00",
        "id" : "https://kau.sh/blog/stream-audio-multiple-headphones-mac/",
        "file_path" : "blog/2023-01-28-stream-audio-multiple-headphones-mac/index.md",
        "url" : "https://kau.sh/blog/stream-audio-multiple-headphones-mac/",
        "content_html" : "\u003cp\u003eWhen I travel on airplanes, I prefer to download content onto my 14\u0026quot; Macbook\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e so I can watch it offline during the flight. When my wife travels with me, we like catching up on some of the shows that we like to watch together.\u003c/p\u003e\n\u003cp\u003eBut we both have our own pair of Airpods that we\u0026rsquo;d like to use to listen to the audio together. In the wired headphones days, I\u0026rsquo;d carry a headphone splitter that we\u0026rsquo;d plug both of our wired headphones into.\u003c/p\u003e\n\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/78/Headphone_mic_splitter_adapter.jpg/320px-Headphone_mic_splitter_adapter.jpg\"\n                \n                \n                    alt=\"Headphone splitter\"\n                \n                \n                \n            /\u003e\n\n            \n            \u003cfigcaption\u003e\n                \n\n                \n                        \n\n                        \n                            \n                            \n                            \u003ca class=\"center\" href=\"https://commons.wikimedia.org/wiki/File:Headphone_mic_splitter_adapter.jpg\"\u003e\n                            \n                        \n\n                                Courtesy: Wikimedia\n\n                            \u003c/a\u003e\n                \n\n            \u003c/figcaption\u003e\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eThis blog post provides instructions for the equivalent solution in our wireless/bluetooth headphones world.\u003c/p\u003e\n\u003ch1 id=\"software\"\u003eSoftware\u003c/h1\u003e\n\u003cp\u003eI\u0026rsquo;m going to use Rogue Amoeba\u0026rsquo;s excellent solution \u003ca href=\"https://rogueamoeba.com/loopback/\"\u003eLoopback\u003c/a\u003e in the below instructions. I\u0026rsquo;m pretty sure you can also use \u003ca href=\"https://github.com/mattingalls/Soundflower\"\u003eSoundflower\u003c/a\u003e, the native \u0026ldquo;Audio MIDI setup\u0026rdquo; app or other solutions. But Loopback makes this ludicrously easy.\u003c/p\u003e\n\u003ch2 id=\"step-1-pair-headphones-to-the-mac\"\u003eStep 1: Pair headphones to the Mac\u003c/h2\u003e\n\u003cp\u003ePair each of the headphones individually to the Mac (as you typically would).\u003c/p\u003e\n\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"stream-audio.1.webp\"\n                \n                \n                width=\"35%\"\n                \n            /\u003e\n\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eAfter pairing the first set, you might have to disconnect them (temporarily) and proceed to pair the second set individually.\u003c/p\u003e\n\u003ch2 id=\"step-2-create-a-virtual-multi-output-device\"\u003eStep 2: Create a Virtual multi-output device\u003c/h2\u003e\n\u003cp\u003eCreate a new virtual device in Loopback \u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\u003cvideo  controls \n        width=\"100%\"\n        autoplay \n        muted \n        loop \n        playsinline\u003e\n    \u003csource src=\"stream-audio.2.mp4\" type=\"video/mp4\"\u003e\n  \u003cspan\u003e\u003c/span\u003e\n\u003c/video\u003e\n\u003ch2 id=\"step-3-add-both-headphones-to-the-output-channel\"\u003eStep 3: Add both headphones to the output channel\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003eGen2-2023\u003c/code\u003e is the bluetooth headphones I use in the below instructions. Add both headphones to the Output channels.\u003c/p\u003e\n\u003cvideo  controls \n        width=\"100%\"\n        autoplay \n        muted \n        loop \n        playsinline\u003e\n    \u003csource src=\"stream-audio.3a.mp4\" type=\"video/mp4\"\u003e\n  \u003cspan\u003e\u003c/span\u003e\n\u003c/video\u003e\n\u003cp\u003eIf you\u0026rsquo;re wondering how both headphones connect directly, chalk it to the wonders of the Mac. While the first headphones is connected, connect your second pair (without disconnecting the first) and they both should be connected.\u003c/p\u003e\n\u003cvideo  controls \n        width=\"50%\"\n        autoplay \n        muted \n        loop \n        playsinline\u003e\n    \u003csource src=\"stream-audio.3b.mp4\" type=\"video/mp4\"\u003e\n  \u003cspan\u003e\u003c/span\u003e\n\u003c/video\u003e\n\u003cp\u003eYou probably will still only hear the output from one of the headphones, but we\u0026rsquo;re almost there.\u003c/p\u003e\n\u003ch2 id=\"step-4-switch-mac-audio-to-new-virtual-device\"\u003eStep 4: Switch Mac audio to new virtual device\u003c/h2\u003e\n\u003cfigure class=\"borderless\"\u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"stream-audio.4.webp\"\n                class=\"borderless\"\n                \n                width=\"60%\"\n                \n            /\u003e\n\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cp\u003e\u003cem\u003eIf you\u0026rsquo;re all aboard the Rogue Amoeba wagon,  \u003ca href=\"https://rogueamoeba.com/soundsource/\"\u003eSoundsource\u003c/a\u003e is another app they maintain, that makes it trivially easy to switch audio sources. For someone who keeps switching workstations, podcasts etc. this is delightful software.\u003c/em\u003e\u003c/p\u003e\n\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"stream-audio.5.gif\"\n                \n                \n                \n                \n            /\u003e\n\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003ch2 id=\"step-5-play--enjoy\"\u003eStep 5: Play \u0026amp; Enjoy\u003c/h2\u003e\n\u003cvideo  controls \n        width=\"100%\"\n        autoplay \n        muted \n        loop \n        playsinline\u003e\n    \u003csource src=\"stream-audio.6.mp4\" type=\"video/mp4\"\u003e\n  \u003cspan\u003e\u003c/span\u003e\n\u003c/video\u003e\n\u003cp\u003eLoopback also allows you to control volumes separately which is a godsend when you have two picky people.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eAn iPad would probably be better but I remain a iPhone + Macboook only kind of guy.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eThis would be a \u0026ldquo;Multi-Output device\u0026rdquo; in the Audio MIDI app but Loopback simplifies these distinctions.\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "A few Kotlin constructs",
        "date_published" : "2022-11-27T17:42:29+05:30",
        "id" : "https://kau.sh/blog/important-kotlin-constructs/",
        "file_path" : "blog/2022-11-11-important-kotlin-concepts/index.md",
        "url" : "https://kau.sh/blog/important-kotlin-constructs/",
        "content_html" : "\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eA few Kotlin constructs have been introduced into the language over time. I wrote this post as a personal/public service advisory to remind us of their significance.\u003c/p\u003e\n\u003cfigure class=\"full-bleed\"\u003e\n\n    \n        \n            \u003cimg src=\"/images/content/uploads/2022/kotlin-header.webp\"\n                class=\"full-bleed\"\n                \n                    alt=\"Kotlin header image\"\n                \n                \n                \n            /\u003e\n\n            \n            \u003cfigcaption\u003e\n                \n\n                \n                        Would love to credit img owner\n\n                        \n\n                                \n\n                            \n                \n\n            \u003c/figcaption\u003e\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#1-fun-interface-sam\"\u003e1. fun interface (SAM)\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#11-vs-function-types\"\u003e1.1. (vs) function types\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#2-type-alias\"\u003e2. type alias\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#3-import-alias\"\u003e3. import alias\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#4-value-class\"\u003e4. value class\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#5-data-object\"\u003e5. data object\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#revisions\"\u003eRevisions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"1-fun-interface-sam\"\u003e1. fun interface (SAM)\u003c/h1\u003e\n\u003cp\u003eMany languages (like Java) did not initially treat functions as \u003ca href=\"https://en.wikipedia.org/wiki/First-class_citizen\"\u003efirst-class citizens\u003c/a\u003e. They would emulate this functionality by using an interface with exactly one abstract method (a.k.a Single Abstract Method or SAM) interfaces.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003einterface\u003c/span\u003e OnClickListener {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// single abstract function\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonClick\u003c/span\u003e(view: View)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eButton\u003c/span\u003e.setOnClickListenerXXX(listener: OnClickListener) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// listener then invoked at some point\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    listener.onClick(\u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWhen \u003ccode\u003efun interface\u003c/code\u003e is used like the above, we typically must pass an instance of an object that implements this SAM interface.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e clickListener = \u003cspan style=\"color:#66d9ef\"\u003eobject\u003c/span\u003e: OnClick {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eoverride\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonClick\u003c/span\u003e(view: Button) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eToast\u003c/span\u003e.makeText(context, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Button 1 Clicked\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eToast\u003c/span\u003e.LENGTH_SHORT).show()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// You can now \u0026#34;pass this function\u0026#34; around\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003emyButton.setOnClickListenerXXX(clickListener)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn practice, modern JVMs allow a far less verbose version of the above via lambdas:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emyButton.setOnClickListenerXXX { view \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eToast\u003c/span\u003e.makeText(view.context, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;testing 1\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eToast\u003c/span\u003e.LENGTH_SHORT).show()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eintroduced in Kotlin 1.4\u003c/li\u003e\n\u003cli\u003eofficial \u003ca href=\"https://kotlinlang.org/docs/fun-interfaces.html\"\u003edocs\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003epurpose is to achieve \u003ca href=\"https://en.wikipedia.org/wiki/First-class_function\"\u003efirst-class functions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"11-vs-function-types\"\u003e1.1. (vs) function types\u003c/h2\u003e\n\u003cp\u003eKotlin treats functions as first-class citizens and bakes the concept of \u0026ldquo;function types\u0026rdquo; right into the language.\u003c/p\u003e\n\u003cp\u003eFunction types and interfaces \u003ca href=\"https://www.reddit.com/r/Kotlin/comments/s35x3t/comment/htlpmv9/\"\u003eare not the same thing\u003c/a\u003e but serve a similar purpose (treat functions as first-class citizens). The book Effective Kotlin does good justice in pointing out the \u003ca href=\"https://kt.academy/article/ek-function-types\"\u003enuance between these two concepts\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAt a time when lambdas were not properly supported with most modern JVMs, function types were the elegant alternative. This makes it confusing today (the existence of two similar concepts) because they can appear very similar in usage. Let\u0026rsquo;s compare the two:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// -------------------------\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// definition via fun interface\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// -------------------------\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003einterface\u003c/span\u003e OnClickListener {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonClick\u003c/span\u003e(view: View)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eButton\u003c/span\u003e.setOnClickListenerXXX(listener: OnClickListener) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    listener.onClick(\u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// -------------------------\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// definition via fun type\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// -------------------------\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eButton\u003c/span\u003e.setOnClickListenerYYY(listener: (View) \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e Unit) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    listener.invoke(\u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe snippet \u003ccode\u003e(View): Unit\u003c/code\u003e is Kotlin allowing you to natively define a function as a type (function type? 🤯).\u003c/p\u003e\n\u003cp\u003eIn practice, you\u0026rsquo;ll find no difference in how the above two snippets are used\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emyButton.setOnClickListenerXXX { view \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// do something with the view...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a6e22e\"\u003eToast\u003c/span\u003e.makeText(view.context, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;testing 1\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eToast\u003c/span\u003e.LENGTH_SHORT).show()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emyButton.setOnClickListenerYYY { view \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// do something with the view...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a6e22e\"\u003eToast\u003c/span\u003e.makeText(view.context, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;testing 2\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eToast\u003c/span\u003e.LENGTH_SHORT).show()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eMy 2 cents: \u003cstrong\u003ejust use function types when possible.\u003c/strong\u003e\u003c/p\u003e\n\u003ch1 id=\"2-type-alias\"\u003e2. type alias\u003c/h1\u003e\n\u003cp\u003e\u003ca href=\"https://kotlinlang.org/docs/type-aliases.html\"\u003eType aliases\u003c/a\u003e provide alternative names for existing types. It\u0026rsquo;s conceptually straightforward and particularly useful when used with longer function type definitions.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003etypealias\u003c/span\u003e MyHandler = (Int, String) \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e Unit\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// now just use MyHandler as your type definition\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e//  instead of tediously typing (Int, String) -\u0026gt; Unit every time\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e myHandler: MyHandler = { intValue, stringValue \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// do something\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eintroduced in Kotlin 1.1\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"3-import-alias\"\u003e3. import alias\u003c/h1\u003e\n\u003cp\u003eThe interesting thing with \u003ccode\u003etype alias\u003c/code\u003e is that you aren\u0026rsquo;t limited to using it just for function types. You can use it to \u0026ldquo;redefine\u0026rdquo; \u003cem\u003eany\u003c/em\u003e type (or even shorten awkward long class names):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003etypealias\u003c/span\u003e DropdownView = Spinner        \u003cspan style=\"color:#75715e\"\u003e// 🙄\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003etypealias\u003c/span\u003e AVD = AnimatedVectorDrawable\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBut this is not the way 🙅. Kotlin has a nicer way to do this called \u0026ldquo;import alias\u0026rdquo;:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eimport\u003c/span\u003e android.widget.Spinner \u003cspan style=\"color:#66d9ef\"\u003eas\u003c/span\u003e DropdownView\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eimport\u003c/span\u003e android.graphics.drawable.AnimatedVectorDrawable \u003cspan style=\"color:#66d9ef\"\u003eas\u003c/span\u003e AVD\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003elateinit\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e myDropDown: DropdownView\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003elateinit\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e myAVD: AVD\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnother important use of \u003ccode\u003eimport alias\u003c/code\u003e is when you\u0026rsquo;re trying to disambiguate between multiple types with the same name. Say you have a type defined with a generic name but you also have a protobuf library autogenerating a different class with the exact same name. It\u0026rsquo;s possible to use both types within the same class by disambiguating them using \u003ccode\u003eimport alias\u003c/code\u003e \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eimport\u003c/span\u003e java.sql.Date \u003cspan style=\"color:#66d9ef\"\u003eas\u003c/span\u003e SqlDate\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eimport\u003c/span\u003e java.util.Date \u003cspan style=\"color:#66d9ef\"\u003eas\u003c/span\u003e JavaDate\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e date1: SqlDate = SqlDate(\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e date2: JavaDate = JavaDate()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"4-value-class\"\u003e4. value class\u003c/h1\u003e\n\u003cp\u003e\u003ca href=\"https://quickbirdstudios.com/blog/kotlin-value-classes/\"\u003eThis article\u003c/a\u003e explains why we need value classes (and why we should stop using \u003ccode\u003etype alias\u003c/code\u003e or \u003ccode\u003edata class\u003c/code\u003e in these situations).\u003c/p\u003e\n\u003cp\u003eThis is the gist:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eauth1\u003c/span\u003e(userId: Int, pin: Int): Boolean\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e u: Int = \u003cspan style=\"color:#ae81ff\"\u003e909\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e p: Int = \u003cspan style=\"color:#ae81ff\"\u003e1234\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eauth1(u, p)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eauth1(p, u) \u003cspan style=\"color:#75715e\"\u003e// ⚠️ no compilation error\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSee the problem here? Both userid and pin are of type \u003ccode\u003eInt\u003c/code\u003e but serve different intents. Wouldn\u0026rsquo;t it be nice if the compiler told us that we were passing the wrong fields? You can solve this with some good engineering and \u003ccode\u003edata class\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edata\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eUserId\u003c/span\u003e(\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e field: Int)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edata\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePincode\u003c/span\u003e(\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e field: Int)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eauth2\u003c/span\u003e(userId: UserId, pin: Pincode): Boolean\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e u = UserId(\u003cspan style=\"color:#ae81ff\"\u003e909\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e p = Pincode(\u003cspan style=\"color:#ae81ff\"\u003e1234\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eauth2(u, p)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eauth2(p, u) \u003cspan style=\"color:#75715e\"\u003e// 🛑 error (✅)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis \u0026ldquo;works\u0026rdquo; but has one big problem: \u003cstrong\u003edata class allocations are expensive\u003c/strong\u003e. With the \u003ccode\u003eInt\u003c/code\u003e primitive usage we\u0026rsquo;re dealing with the stack whereas with data class objects we enter heap territory\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003cp\u003eWe could use \u003ccode\u003etype alias\u003c/code\u003e and avoid the allocation cost. But we run into the original issue viz. no compilation error:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003etypealias\u003c/span\u003e UserId = Int\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003etypealias\u003c/span\u003e Pincode = Int\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eauth3\u003c/span\u003e(userId: Int, pin: Int): Boolean\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e u = UserId(\u003cspan style=\"color:#ae81ff\"\u003e909\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e p = Pincode(\u003cspan style=\"color:#ae81ff\"\u003e1234\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eauth3(u3, p3)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eauth3(p3, u3)  \u003cspan style=\"color:#75715e\"\u003e// ⚠️ no compilation error\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo solve this issue, Kotlin introduced the concept of \u0026ldquo;value classes\u0026rdquo; in version 1.5:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@JvmInline\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evalue\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eUserId\u003c/span\u003e(\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e field: Int)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@JvmInline\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evalue\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePincode\u003c/span\u003e(\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e field: Int)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eauth4\u003c/span\u003e(userId: UserId, pin: Pincode): Boolean\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e u = UserId(\u003cspan style=\"color:#ae81ff\"\u003e909\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e p = Pincode(\u003cspan style=\"color:#ae81ff\"\u003e1234\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eauth4(u, p)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eauth4(p, u) \u003cspan style=\"color:#75715e\"\u003e// 🛑 error (✅)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis is similar to \u003ccode\u003edata class\u003c/code\u003e but the difference is that underneath the hood, there\u0026rsquo;s no allocation costs 💪. So why not just use \u003ccode\u003evalue class\u003c/code\u003e always instead of \u003ccode\u003edata class\u003c/code\u003e? Not so fast Scott, \u003ccode\u003evalue class\u003c/code\u003e can only take in a single primitive \u003ccode\u003efield\u003c/code\u003e so there\u0026rsquo;s very legitimate reasons when you should be using a \u003ccode\u003edata class\u003c/code\u003e instead.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eintroduced in Kotlin 1.5\u003c/li\u003e\n\u003cli\u003epreviously called “inline class”\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e@JvmInline\u003c/code\u003e is temporary and will be removed with Project Valhalla (\u003ca href=\"https://github.com/Kotlin/KEEP/blob/master/notes/value-classes.md#project-valhalla\"\u003eseriously\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"5-data-object\"\u003e5. data object\u003c/h1\u003e\n\u003cp\u003eHave you ever tried to print the singleton \u003ccode\u003eobject\u003c/code\u003e during debugging?\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eobject\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eBruceLee\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eprintln(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Object Bruce Lee is \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${BruceLee}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Object Bruce Lee is BruceLee@37f8bb67\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eyuck!\u003c/p\u003e\n\u003cp\u003eExperimental since 1.7.20 and stable since 1.8.0 Kotlin introduces the concept of \u0026ldquo;data object\u0026rdquo;. Think of it as tacking on a nicer \u003ccode\u003e.toString()\u003c/code\u003e to your Singleton.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edata\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eobject\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eBruceLee\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eprintln(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Object Bruce Lee is \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${BruceLee}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Object Bruce Lee is BruceLee\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFor the gory details, you can read the \u003ca href=\"https://github.com/Kotlin/KEEP/pull/316/files\"\u003eKEEP\u003c/a\u003e or \u003ca href=\"https://github.com/Kotlin/KEEP/issues/317\"\u003eproposal discussion\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eMy thanks to \u003ca href=\"https://www.donnfelker.com/\"\u003eDonn\u003c/a\u003e for reviewing this post.\u003c/em\u003e\u003c/p\u003e\n\u003ch3 id=\"revisions\"\u003eRevisions\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e/u/Boza_s6 \u003ca href=\"https://www.reddit.com/r/androiddev/comments/z6bxti/comment/iy2nk1t/\"\u003epointed out\u003c/a\u003e an error in my implication that \u003ccode\u003eString\u003c/code\u003e would be allocated in the stack. Strings are \u003ca href=\"https://stackoverflow.com/a/2099311\"\u003enot primitives\u003c/a\u003e so I switched the example to \u003ccode\u003eInt\u003c/code\u003e for accuracy.\u003c/li\u003e\n\u003cli\u003e/u/smieszne \u003ca href=\"https://www.reddit.com/r/Kotlin/comments/z69lnr/comment/iy2nqf9/\"\u003epointed out\u003c/a\u003e that my original example using ImprovedBruceLee as the data object would not output \u0026ldquo;BruceLee\u0026rdquo; but rather \u0026ldquo;ImprovedBruceLee\u0026rdquo;. As clever as my original example was 🙄, I resorted to just using the class name BruceLee for clarity.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003ewithout having to type the full package name over and over\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eTo learn more about stack vs heap memory allocation and why stack allocation is less expensive read \u003ca href=\"https://www.baeldung.com/java-stack-heap\"\u003ehttps://www.baeldung.com/java-stack-heap\u003c/a\u003e\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "What does $0=$2 in awk do? learn awk",
        "date_published" : "2022-09-24T00:22:16-07:00",
        "id" : "https://kau.sh/blog/awk-1-oneliner-dollar-explanation/",
        "file_path" : "blog/2022-09-24-awk-1-oneliner-dollar-explanation/index.md",
        "url" : "https://kau.sh/blog/awk-1-oneliner-dollar-explanation/",
        "content_html" : "\u003cp\u003eThe trick to understanding awk in all its terse glory is to understand its defaults. I made a \u003ca href=\"/blog/screencast-1-build-awk-jekyll-permalink-migration/\"\u003escreencast\u003c/a\u003e explaining how \u003ca href=\"https://www.gnu.org/software/gawk/manual/gawk.html\"\u003eawk\u003c/a\u003e works by deconstructing a script I\u0026rsquo;d previously written for this blog \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. In this post we\u0026rsquo;ll look at deconstructing awk\u0026rsquo;s defaults so we can understand all those one-liner scripts stack overflow solutions throw your way.\u003c/p\u003e\n\u003ch1 id=\"the-example\"\u003eThe example\u003c/h1\u003e\n\u003cp\u003eI have a file that contains the version info for my apps and I\u0026rsquo;d like to extract the first version number in there:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-gradle\" data-lang=\"gradle\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// appVersion.gradle\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e baseCode \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e30001\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e appVersion \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    product\u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        name: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;21.091.420\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        code: baseCode\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    product\u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        name: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;20.090.300\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        code: baseCode\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e//...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// I want to pluck 21.091.420 from this file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"the-first-solution-meh\"\u003eThe first solution (meh)\u003c/h1\u003e\n\u003cp\u003eSome quick googling revealed this \u003ca href=\"https://unix.stackexchange.com/a/148289\"\u003estack overflow solution\u003c/a\u003e which gets us close:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-awk\" data-lang=\"awk\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eF\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;$0=$2\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eappVersion\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003egradle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# -- output --\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 21.091.420\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 20.090.300\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eI only require the first number though so a quick way\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e to do this would just be:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-awk\" data-lang=\"awk\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eF\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;$0=$2\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eappVersion\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003egradle\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ehead\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003en\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# -- output --\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 21.091.420\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"the-problem-with-solution-1\"\u003eThe problem with solution 1\u003c/h1\u003e\n\u003col\u003e\n\u003cli\u003eawk is powerful and to reach out to \u003ccode\u003ehead\u003c/code\u003e for that last teeny tiny mile seemed sacrilegious. I want this solution to be pure awk.\u003c/li\u003e\n\u003cli\u003eWhat the heck does that incantation \u003ccode\u003egawk '$0=$2'\u003c/code\u003e do? \u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch1 id=\"the-basics\"\u003eThe basics\u003c/h1\u003e\n\u003cp\u003eLet\u0026rsquo;s try to take that script apart piece by piece:\u003c/p\u003e\n\u003ch2 id=\"default-input-field-delimiter\"\u003edefault input field delimiter\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-awk\" data-lang=\"awk\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e  \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eF\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;$0=$2\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eappVersion\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003egradle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#     ↑\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#    input field delimiter\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf you don\u0026rsquo;t specify the input field delimiter, awk sensibly defaults to the space character. Let\u0026rsquo;s try some examples:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-awk\" data-lang=\"awk\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello kind world\u0026#34;\u003c/span\u003e  \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e       \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;{print $2}\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello kind world\u0026#34;\u003c/span\u003e  \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eF\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;{print $2}\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# -- output --\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# kind\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello kind world\u0026#34;\u003c/span\u003e  \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eF\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;,\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;{print $2}\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# -- no output --\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNotice how the line is split into numbered \u0026ldquo;segments\u0026rdquo; where \u003ccode\u003e$1\u003c/code\u003e, \u003ccode\u003e$2\u003c/code\u003e, \u003ccode\u003e$3\u003c/code\u003e hold the first three words in our example respectively. \u003cstrong\u003e\u003ccode\u003e$0\u003c/code\u003e represent the entire line\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"default-syntax\"\u003edefault syntax\u003c/h2\u003e\n\u003cp\u003eIf you watched my \u003ca href=\"/blog/screencast-1-build-awk-jekyll-permalink-migration/\"\u003escreencast\u003c/a\u003e you\u0026rsquo;ll remember that awk\u0026rsquo;s general syntax is as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-awk\" data-lang=\"awk\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eawk\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e    BEGIN { a1; a2; a3; }      ← optional\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e    \u0026lt;pattern\u0026gt; { a1; a2; a3; }  ← action block (mandatory)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e    END { a4; a6; }            ← optional\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003efilename\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eMost awk one-liners typically don\u0026rsquo;t use the begin \u0026amp; end blocks.\u003c/p\u003e\n\u003cp\u003eSo looking back at my simple one-liner:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-awk\" data-lang=\"awk\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello kind world\u0026#34;\u003c/span\u003e  \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\\\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39; { print $2 }\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#            ↓\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#            action block ✅\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e🛑 ✋ but wait, what\u0026rsquo;s going on with the original one-liner 👇?\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-awk\" data-lang=\"awk\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eF\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;$0=$2\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eappVersion\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003egradle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#           ↑\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#           🤔\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#         is this a \u0026lt;pattern\u0026gt;?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#         is this an action block?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFor this, we need to understand how the awk pattern recognition works:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-awk\" data-lang=\"awk\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# general syntax\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026lt;pattern\u0026gt; { a1; a2; a3; }\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello kind world\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\\\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;0 { print $2 }\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#         ↑\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#         forcing result of \u0026lt;pattern\u0026gt; match as 0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# -- output --\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# no output\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello kind world\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\\\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;1 { print $2 }\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello kind world\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\\\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;2 { print $2 }\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello kind world\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\\\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;3 { print $2 }\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#           ↑\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#           forcing result of \u0026lt;pattern\u0026gt; match as 3 / non-0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# -- output for all the above --\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# kind\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo the way that \u003ccode\u003e\u0026lt;pattern\u0026gt;\u003c/code\u003e condition matching works is if awk sees 0 \u003csup id=\"fnref:4\"\u003e\u003ca href=\"#fn:4\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e4\u003c/a\u003e\u003c/sup\u003e the pattern match condition is \u0026ldquo;false\u0026rdquo; and awk ignores the action block. Anything \u0026gt; 0 and awk treats the condition as \u0026ldquo;true\u0026rdquo; and executes the action block. Ok back to the one-liner:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-awk\" data-lang=\"awk\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eF\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;$0=$2\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eappVersion\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003egradle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#           ↑\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#         is this a valid pattern?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#               ✅ we\u0026#39;re getting some non-0 value\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#                  cause things are being printed\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#         is this an action block? 🤔\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo \u003ccode\u003e$0=$2\u003c/code\u003e is coming back with a result of \u0026gt; 0 and some invisible default is being executed. Progress\u0026hellip; but still many questions.\u003c/p\u003e\n\u003ch2 id=\"default-action\"\u003edefault action\u003c/h2\u003e\n\u003cp\u003eLet\u0026rsquo;s try some commands. Notice the output for each of them:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-awk\" data-lang=\"awk\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello kind world\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;0 {print $0}\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello kind world\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;0 {print}\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello kind world\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;0\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello kind world\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# -- output --\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# no output\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello kind world\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;1 {print $0}\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello kind world\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;1 {print}\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello kind world\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;1\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# -- output --\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Hello kind world\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo when the \u003ccode\u003e\u0026lt;pattern\u0026gt;\u003c/code\u003e match is false (0) nothing is printed and when it is 1 then the default is to just print the entire line (\u003ccode\u003e$0\u003c/code\u003e). In fact you don\u0026rsquo;t have to specify anything and awk assumes you want to \u003ccode\u003eprint $0\u003c/code\u003e by default.\u003c/p\u003e\n\u003ch2 id=\"variable-reassignment\"\u003evariable reassignment\u003c/h2\u003e\n\u003cp\u003eYou know how we glorify immutability with most programming? \u003ccode\u003eawk\u003c/code\u003e ain\u0026rsquo;t having any of that.\u003c/p\u003e\n\u003cp\u003eYou can mutate the heck out of anything. You can mutate the current line before you even run an action on it. Check this piece of code out:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-awk\" data-lang=\"awk\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello kind world\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;{print $0\u0026#34; \u0026lt;-\u0026gt; \u0026#34;$1\u0026#34; \u0026lt;-\u0026gt; \u0026#34;$2\u0026#34; \u0026lt;-\u0026gt; \u0026#34;$3}\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# -- output --\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Hello kind world \u0026lt;-\u0026gt; Hello \u0026lt;-\u0026gt; kind \u0026lt;-\u0026gt; world\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#        ↑              ↑          ↑        ↑\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#        $0             $1         $2       $3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eecho\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello kind world\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;1 {$0=\u0026#34;hijack\u0026#34;; print $0\u0026#34; \u0026lt;-\u0026gt; \u0026#34;$1\u0026#34; \u0026lt;-\u0026gt; \u0026#34;$2\u0026#34; \u0026lt;-\u0026gt; \u0026#34;$3}\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# -- output --\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# hijack \u0026lt;-\u0026gt; hijack \u0026lt;-\u0026gt;  \u0026lt;-\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#    ↑         ↑       ↑     ↑\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#    $0        $1      🙅    🙅\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cem\u003eEven before the action block is executed you can reassign the entire line\u003c/em\u003e.\u003c/p\u003e\n\u003ch2 id=\"number-of-fields\"\u003enumber of fields\u003c/h2\u003e\n\u003cp\u003eHere\u0026rsquo;s the last piece that should help bring this all together. Given this file again:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-gradle\" data-lang=\"gradle\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// appVersion.gradle\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e baseCode \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e30001\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e appVersion \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    product\u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        name: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;21.091.420\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        code: baseCode\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    product\u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        name: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;20.090.300\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        code: baseCode\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e//...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-awk\" data-lang=\"awk\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;{print NF \u0026#34;: \u0026#34;$0}\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eappVersion\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003egradle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# -- output --\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 0:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 4: def baseCode = 30001\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 0:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 4: def appVersion = [\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 3:     product-1 : [\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 2:         name: \u0026#34;21.091.420\u0026#34;,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 2:         code: baseCode\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 1:     ],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 0:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 2:     product-2: [\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 2:         name: \u0026#34;20.090.300\u0026#34;,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 2:         code: baseCode\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 1:     ],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eNF\u003c/code\u003e in awk stands for number of fields.\u003c/li\u003e\n\u003cli\u003eawk takes the \u003ca href=\"#default-input-field-delimiter\"\u003einput field separator\u003c/a\u003e and stores the \u0026ldquo;number of fields\u0026rdquo; discovered in that variable.\u003c/li\u003e\n\u003cli\u003eNotice above that when there\u0026rsquo;s an empty line NF is 0 since there\u0026rsquo;s no separator (or content) in that line.\u003c/li\u003e\n\u003cli\u003eOn the second line there\u0026rsquo;s 4 tokens (each separated by space)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"the-first-solution-again\"\u003eThe first solution (again)\u003c/h1\u003e\n\u003cp\u003eAll right, let\u0026rsquo;s do this one last time.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-awk\" data-lang=\"awk\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eF\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;$0=$2\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eappVersion\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003egradle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# -- output --\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 21.091.420\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 20.090.300\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWhat\u0026rsquo;s happening here is a beautiful symphony of awk defaults stacking on top of each other.\u003c/p\u003e\n\u003cp\u003eWe first reassign the variable holding the entire line ($0) to $2. Remember that $2 holds the second word/token after splitting the original content in $0 with the input field separator \u003ccode\u003e\u0026quot;\u003c/code\u003e. This should help point out the resulting fields with the new field separator:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e gawk -F\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;{print NF \u0026#34;: \u0026#34;$0}\u0026#39;\u003c/span\u003e appVersion.gradle\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 0:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 1: def baseCode = 30001\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 0:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 1: def appVersion = [\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 1:     product-1 : [\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 3:         name: \u0026#34;21.091.420\u0026#34;,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 1:         code: baseCode\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 1:     ],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 0:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 1:     product-2: [\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 3:         name: \u0026#34;20.090.300\u0026#34;,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 1:         code: baseCode\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 1:     ],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eFirst line of this file is empty, so $2 is 0 and $0 is assigned to 0.\u003c/li\u003e\n\u003cli\u003eSecond line of this file has only one segment (since there\u0026rsquo;s no \u003ccode\u003e\u0026quot;\u003c/code\u003e) and is stored in $1. $2 is again 0 and $0 is assigned to 0.\u003c/li\u003e\n\u003cli\u003eSixth line has 3 tokens, $2 is \u003ccode\u003e21.091.420\u003c/code\u003e and is assigned to $0.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe original command should make sense now:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-awk\" data-lang=\"awk\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e \u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eF\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;$0=$2\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eappVersion\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003egradle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# -- output --\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 21.091.420\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 20.090.300\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eThe \u003ccode\u003e\u0026lt;pattern\u0026gt;\u003c/code\u003e match condition provided to awk is the output value of \u003ccode\u003e$0=$2\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003eFrom the previous command output we noticed that for the first, second lines up until the sixth line, was all 0.\u003c/li\u003e\n\u003cli\u003ewhen awk sees 0 it ignores the action and there\u0026rsquo;s no print\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eThe sixth line is the first time we encounter a  non-0 value, so the action block is executed.\n\u003cul\u003e\n\u003cli\u003ewhat is the default action? print $0\u003c/li\u003e\n\u003cli\u003ewhat is $0?\n\u003cul\u003e\n\u003cli\u003ethe second token or segment $2 (after field separator \u003ccode\u003e\u0026quot;\u003c/code\u003e) which is \u003ccode\u003e21.091.420\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e💥\u003c/p\u003e\n\u003cp\u003eThis is really such a gorgeous piece of code. Clever and poetic.\u003c/p\u003e\n\u003ch1 id=\"the-final-solution\"\u003eThe final solution\u003c/h1\u003e\n\u003cp\u003eIf you\u0026rsquo;re curious how I came up with my own solution, I made it a little less clever, more verbose and hopefully now simpler to understand:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-awk\" data-lang=\"awk\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003egawk\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eF\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;NF==3 {print $2; exit}\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eappVersion\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003egradle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# -- output --\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 21.091.420\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eGo forth and awk.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eIf you want to understand the fundamentals of awk first, I recommend that screencast.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003ea.k.a \u003cem\u003epractical\u003c/em\u003e and the one I\u0026rsquo;d recommend to others on a time crunch.\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003edown the 🐰 hole we go\u0026#160;\u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:4\"\u003e\n\u003cp\u003eIn awk land 0 = false, anything \u0026gt; 0 is true\u0026#160;\u003ca href=\"#fnref:4\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "Operating efficiently at scale",
        "date_published" : "2022-08-22T23:23:32-07:00",
        "id" : "https://kau.sh/blog/operating-efficiently-scale-coinbase/",
        "file_path" : "blog/2022-08-22-operating-efficiently-scale-coinbase/index.md",
        "url" : "https://kau.sh/blog/operating-efficiently-scale-coinbase/",
        "content_html" : "\u003cblockquote\u003e\n\u003cp\u003eGreat companies maintain their insurgent mindset, for fear of becoming complacent and irrelevant over time.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003ePush decision making down to single-threaded DRIs\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eSingle-threaded is tech jargon that simply means solely focused on a single area. The single threaded DRI is the most senior person whose only job is to run a given product or initiative, this will typically be a product management or engineering leader.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eLeverage shared services to minimize duplication\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eDone wrong, shared services can slow down and frustrate product teams. But when they work well, they can create amazing synergies between products, and deeper product integration.\nProduct teams should not be required to use a half baked shared service. But once a shared service is mature, all products may be required to use it.\u003c/p\u003e\n\u003cp\u003e\u0026hellip; When it becomes clear that we are duplicating effort or creating an inconsistent user experience across our products, services need to graduate into clearly decoupled services that any product can leverage.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eOrganize teams into small pods\u003c/strong\u003e\nSmall teams are more efficient.\n\u0026hellip; We’re beginning to deploy a new concept that we call “pods” to create more structure around the appropriate size of a team.\u003c/p\u003e\n\u003cp\u003ePods also need to have a focus, and a north star metric that ties into the overall company metrics.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eShip products not slide decks\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eMaintain an insurgent mindset\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eUltimately, a lot of this comes down to retaining the founder mentality inside the company and acting like owners.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
    },
    {
        "title" : "What a Mac mini \u0026 Tailscale enables",
        "date_published" : "2022-08-20T13:55:35-07:00",
        "id" : "https://kau.sh/blog/mac-mini-tailscale-benefits-tips-vpn-vps/",
        "file_path" : "blog/2022-08-20-mac-mini-tailscale-benefits-tips-vpn-vps/index.md",
        "url" : "https://kau.sh/blog/mac-mini-tailscale-benefits-tips-vpn-vps/",
        "content_html" : "\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/4/4d/Tailscale-Logo-Black.svg\"\n                \n                \n                    alt=\"Tailscale logo\"\n                \n                \n                \n            /\u003e\n\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eI\u0026rsquo;d like to show you how I use Tailscale and a Mac mini in my office to achieve some nifty things.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://tailscale.com/\"\u003eTailscale\u003c/a\u003e is marketed as a zero-config VPN built on top of WireGuard that securely connects devices and manages firewall rules etc. While all of that might be true, think of it this way: Tailscale allows you to securely connect to a machine at home from anywhere on the internet. This includes your mobile phone, tablet, or laptop.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eTailscale allows you to connect to a machine at home from anywhere on the internet (securely) from your phone/tablet/laptop.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"basic-idea\"\u003eBasic idea\u003c/h2\u003e\n\u003cp\u003eFor me, that “machine” is a souped-up Mac mini sitting on an office shelf at home that is never turned off. This Mac mini is the linchpin of my setup, really.\u003c/p\u003e\n\u003cp\u003eI install\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e Tailscale on this Mac mini and all the other devices I wish to connect from. With the magic of Tailscale ✨, all these devices are now connected like they were on the same network! If that hasn\u0026rsquo;t sunk in:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI could literally connect to the \u003ca href=\"https://homebridge.io/\"\u003eHomebridge\u003c/a\u003e server on my Mac mini in California from an Android phone while traveling in India.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eLet’s talk about some services you could run leveraging this setup.\u003c/p\u003e\n\u003ch2 id=\"private-blog-server\"\u003ePrivate blog server\u003c/h2\u003e\n\u003cp\u003eI use the static website generator  \u003ca href=\"https://gohugo.io/\"\u003eHugo\u003c/a\u003e (\u0026amp; \u003ca href=\"/blog/henry-hugo-theme/\"\u003eHenry\u003c/a\u003e) for \u003ca href=\"https://kau.sh/\"\u003ethis site\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eHugo has this  nifty feature called \u003ca href=\"https://gohugo.io/getting-started/usage/#livereload\"\u003elive reload\u003c/a\u003e when you run it on a local machine. If I change any part of my website\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e, it instantly shows me an up-to-date preview. I typically edit my \u0026ldquo;draft\u0026rdquo; blog posts like this, so I can see the changes right away. But you don\u0026rsquo;t run your real website like this\u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003cp\u003eGosh, if only I had a private server that only I could connect to on the internet.\u003c/p\u003e\n\u003cp\u003eWith Tailscale on my Mac mini, I now do.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eFor the technically curious: I edit files directly on a folder on the mini using VSCode\u003csup id=\"fnref:4\"\u003e\u003ca href=\"#fn:4\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e4\u003c/a\u003e\u003c/sup\u003e. I then run a hugo server\u003csup id=\"fnref:5\"\u003e\u003ca href=\"#fn:5\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e5\u003c/a\u003e\u003c/sup\u003e which watches  for changes in this folder. Hugo picks it up and serves a live preview on a private port on the Mac mini. And because this is just a \u0026ldquo;local\u0026rdquo; address \u0026amp; port (courtesy Tailscale), I can connect to it from any of my devices.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;m sipping coffee in hipster cafes editing my site, then clinging on to dear life in a Muni bus, reading that draft on a phone browser. Magical!\u003c/p\u003e\n\u003ch2 id=\"freshrss-rss-feed-server\"\u003eFreshRSS (RSS feed) server\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/RSS\"\u003eRSS\u003c/a\u003e is old but remarkable technology. I use it as my throttled way of consuming the internet (blog posts, youtube videos, podcasts, etc.).\u003c/p\u003e\n\u003cp\u003eI previously used \u003ca href=\"https://feedly.com/\"\u003eFeedly\u003c/a\u003e but then switched to iCloud\u003csup id=\"fnref:6\"\u003e\u003ca href=\"#fn:6\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e6\u003c/a\u003e\u003c/sup\u003e. But \u003cstrong\u003eiCloud is dog slow\u003c/strong\u003e for this. So I spent a few hours one weekend installing \u003ca href=\"https://freshrss.org/\"\u003eFreshRSS\u003c/a\u003e on my Mac mini. I now have an open source, super fast RSS service accessible (to me) from anywhere on the internet.\u003c/p\u003e\n\u003ch2 id=\"homebridge\"\u003eHomebridge\u003c/h2\u003e\n\u003cp\u003eAfter purchasing a home recently, I set out on a mission to smartify all the things. Lights, doorbells, smart locks, window shades, garages, security cameras, alarm systems, and even the washing machine!\u003c/p\u003e\n\u003cp\u003eI use a \u003ca href=\"https://homebridge.io/\"\u003eHomebridge\u003c/a\u003e server on the Mac mini to connect all these devices. One of the problems though is you can typically only access homebridge from within the same wifi network (which is usually a good thing). But occasionally, I\u0026rsquo;d love to turn off my light switches or lower the shades as I rush to the airport. Turn on Tailscale, and I can connect to the Homebridge server directly from my phone.\u003c/p\u003e\n\u003ch2 id=\"plex-media-server\"\u003ePlex media server\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://www.plex.tv/\"\u003ePlex\u003c/a\u003e is a media server that allows you to \u0026ldquo;stream\u0026rdquo; content from a local disk or hard drive to any network. This includes (massive) family photo albums, high-quality Blu-ray rips\u003csup id=\"fnref:7\"\u003e\u003ca href=\"#fn:7\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e7\u003c/a\u003e\u003c/sup\u003e of \u003ca href=\"/blog/movie-rating-system/\"\u003emy favorite movies\u003c/a\u003e, audio music that isn\u0026rsquo;t on Spotify from artists I\u0026rsquo;ve worked with, etc.\u003c/p\u003e\n\u003cp\u003ePlex, in theory, allows you to expose this media server to the internet directly (and this is how most people use it). For obvious reasons, I prefer not exposing this server to the internet, even with authentication. Instead, I now connect to this Plex server via Tailscale. I can stream it on my phone and then just Airplay/Google Cast it to a hotel TV.\u003c/p\u003e\n\u003cp\u003eTailscale is magical technology. It feels like the iPhone in a VPN world of flip-phones.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eI\u0026rsquo;ll keep updating this post as I come up with more use cases.\u003c/em\u003e\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eThe installation really is \u0026ldquo;zero-config\u0026rdquo;. I still don\u0026rsquo;t understand how easy it is to install it. I\u0026rsquo;m not even going to talk about it in this post cause you can just look at the official instructions.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003elike css styles or markdown post content\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003ethis would require a \u0026ldquo;server\u0026rdquo; that\u0026rsquo;s costly + requires more resources. The whole point of Hugo is to \u0026ldquo;statically\u0026rdquo; generate pages that are much lighter.\u0026#160;\u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:4\"\u003e\n\u003cp\u003evia ssh\u0026#160;\u003ca href=\"#fnref:4\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:5\"\u003e\n\u003cp\u003ethat runs inside a docker container\u0026#160;\u003ca href=\"#fnref:5\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:6\"\u003e\n\u003cp\u003efree \u0026amp; no ads\u0026#160;\u003ca href=\"#fnref:6\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:7\"\u003e\n\u003cp\u003ethat obviously fell out of a truck\u0026#160;\u003ca href=\"#fnref:7\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "Building my new programming font Recursive",
        "date_published" : "2022-08-19T00:00:00-07:00",
        "id" : "https://kau.sh/blog/recursive/",
        "file_path" : "blog/2022-08-19-design-build-recursive-font/index.md",
        "url" : "https://kau.sh/blog/recursive/",
        "content_html" : "\u003cp\u003eI\u0026rsquo;m always looking for legible, high-quality monospaced fonts for programming. I started with \u003ca href=\"../my-new-programming-font/\"\u003eIBM Plex Mono\u003c/a\u003e, dabbled with a few others like \u003ca href=\"https://input.djr.com/\"\u003eInput Mono\u003c/a\u003e, even built a few from source like \u003ca href=\"../build-iosevka-font-mac-os/\"\u003eIosevka\u003c/a\u003e, fell in and out of love with \u003ca href=\"https://developer.apple.com/fonts/\"\u003evarious\u003c/a\u003e \u003ca href=\"https://www.monolisa.dev/\"\u003eothers\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIn early 2020, the foundry ArrowType released \u003ca href=\"https://recursive.design\"\u003e\u003cstrong\u003eRecursive\u003c/strong\u003e\u003c/a\u003e which has now become my daily driver.\u003c/p\u003e\n\u003cvideo  controls \n        width=\"100%\"\n        autoplay \n        muted \n        loop \n        playsinline\u003e\n    \u003csource src=\"./recursive.mp4\" type=\"video/mp4\"\u003e\n  \u003cspan\u003e\u003c/span\u003e\n\u003c/video\u003e\n\u003cp\u003eWhat really got me hooked with Recursive —besides it being a gorgeous typeface— was the fact that it was \u003ca href=\"https://github.com/arrowtype/recursive\"\u003eopen source\u003c/a\u003e and you could \u003ca href=\"https://github.com/arrowtype/recursive\"\u003ebuild it from source yourself\u003c/a\u003e (like \u003ca href=\"../build-iosevka-font-mac-os/\"\u003eIosevka\u003c/a\u003e).\u003c/p\u003e\n\u003cp\u003eHere are the customizations I\u0026rsquo;ve made for myself:\u003c/p\u003e\n\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"./recursive-cutsomizations.png\"\n                \n                \n                    alt=\"Recursive custom settings\"\n                \n                \n                \n            /\u003e\n\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003ch2 id=\"download-recursive\"\u003eDownload Recursive\u003c/h2\u003e\n\u003cp\u003eI could keep extolling the virtues of this font but if you\u0026rsquo;re curious to just download and try it, here\u0026rsquo;s a couple of ways:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eGo to the \u003ca href=\"https://www.recursive.design/\"\u003emain website\u003c/a\u003e and hit the big blue \u0026ldquo;Get\u0026rdquo; button.\u003c/li\u003e\n\u003cli\u003eIf you prefer my variant and are on MacOS:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew tap kaushikgopal/tools\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew install --cask recursive\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr just \u003ca href=\"https://github.com/kaushikgopal/recursive-code-config/releases/tag/v5.1.085\"\u003edownload it here\u003c/a\u003e.\u003c/p\u003e\n"
    },
    {
        "title" : "Yearn for the vast and endless sea",
        "date_published" : "2022-08-14T00:00:00-07:00",
        "id" : "https://kau.sh/blog/build-a-ship/",
        "file_path" : "blog/2022-08-14-build-a-ship.md",
        "url" : "https://kau.sh/blog/build-a-ship/",
        "content_html" : "\u003cblockquote\u003e\n\u003cp\u003eIf you want to build a ship, don’t drum up the men to gather wood, divide the work, and give orders. Instead, teach them to yearn for the vast and endless sea.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003ca href=\"http://en.wikipedia.org/wiki/Carl_Sagan\"\u003eAntoine de Saint-Exupéry\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eLessons for Engineering Managers in Software.\u003c/p\u003e\n"
    },
    {
        "title" : "High quality vector icons from Yoolk Ninja",
        "date_published" : "2022-07-28T19:56:42-07:00",
        "id" : "https://kau.sh/blog/free-vector-app-icons-yoolk-ninja/",
        "file_path" : "blog/2022-07-28-yoolk-nina-iconset/index.md",
        "url" : "https://kau.sh/blog/free-vector-app-icons-yoolk-ninja/",
        "content_html" : "\u003cfigure class=\"rounded\"\u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"yoolk-icons.webp\"\n                class=\"rounded\"\n                \n                    alt=\"Sample icons from Yoolk\"\n                \n                \n                \n            /\u003e\n\n            \n            \u003cfigcaption\u003e\n                \n\n                \n                        \n\n                        \n\n                                Icons by Yoolk\n\n                            \n                \n\n            \u003c/figcaption\u003e\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eStumbled upon Yoolk\u0026rsquo;s website the other day. What a treasure trove of high quality icons. There\u0026rsquo;s even a \u003ca href=\"https://github.com/lucky-yoolk/icons-flat-osx\"\u003egithub repo\u003c/a\u003e for some of these.\u003c/p\u003e\n"
    },
    {
        "title" : "Keyboard Maestro as a Text Expander replacement",
        "date_published" : "2022-07-27T00:00:00-07:00",
        "id" : "https://kau.sh/blog/keyboard-maestro-replace-text-expander/",
        "file_path" : "blog/2022-07-27-tip-keyboard-maestro-replace-text-expander/index.md",
        "url" : "https://kau.sh/blog/keyboard-maestro-replace-text-expander/",
        "content_html" : "\u003cfigure class=\"borderless\"\u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"/images/content/keyboard-maestro.webp\"\n                class=\"borderless\"\n                \n                    alt=\"keyboard maestro icon\"\n                \n                width=\"300\"\n                \n            /\u003e\n\n            \n            \u003cfigcaption\u003e\n                \n\n                \n                        \n\n                        \n                            \n                            \n                            \u003ca class=\"center\" href=\"https://yoolk.ninja/\"\u003e\n                            \n                        \n\n                                icon by Yoolk\n\n                            \u003c/a\u003e\n                \n\n            \u003c/figcaption\u003e\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eIf you\u0026rsquo;ve \u003ca href=\"https://daringfireball.net/linked/2022/07/25/textexpander-raises-41-million\"\u003erecently\u003c/a\u003e needed a text expander utility, might I suggest the trusty \u003ca href=\"http://www.stairways.com/action/kmdiscount?REF6J\"\u003eKeyboard Maestro\u003c/a\u003e\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003cp\u003eI switched from TextExpander → Alfred quite some time back. Somewhat recently, I again switched from Alfred → KM for a couple of reasons:\u003c/p\u003e\n\u003ch2 id=\"1-one-tool-to-rule-them-all\"\u003e1. One tool to rule them all\u003c/h2\u003e\n\u003cp\u003eBetween work \u0026amp; home, I use multiple computers these days. Having to sync + maintain each of these different utilities across multiple computers is becoming tedious.\u003c/p\u003e\n\u003cp\u003eKeyboard Maestro is a mainstay in my productivity toolbelt and isn\u0026rsquo;t going anywhere. Might as well double down on it for the things it does well.\u003c/p\u003e\n\u003ch2 id=\"2-fixing-app-quirks\"\u003e2. Fixing app quirks\u003c/h2\u003e\n\u003cp\u003eOne of the big problems I found with utilities like Alfred is that the text expansion would activate too quickly. Consequently, the expansion wouldn\u0026rsquo;t work in certain apps (like VSCode).\u003c/p\u003e\n\u003cp\u003eWith Keyboard Maestro though, you can add a micro delay\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e, ensuring the snippets work flawlessly everywhere.\u003c/p\u003e\n\u003cfigure \u003e\n\n    \n        \n            \u003cimg src=\"km-textexpand-emoji.webp\"\n                \n                \n                    alt=\"keyboard maestro macro for an emoji text expansion\"\n                \n                \n                \n            /\u003e\n\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003cp\u003e\u003cem\u003eYou can also limit the scope to just a few apps if you\u0026rsquo;re worried this delay will slow you down in non-problematic apps.\u003c/em\u003e\u003c/p\u003e\n\u003ch2 id=\"3-mix-text-expansion-with-other-macros\"\u003e3. Mix text expansion with other macros\u003c/h2\u003e\n\u003cp\u003eBuilding on that, with Keyboard Maestro, you\u0026rsquo;re not limited to just text replacement.\u003c/p\u003e\n\u003cp\u003eYou can execute full-fledged macros with your text expansion. Here\u0026rsquo;s an example of how I add checklists in Google Docs\u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003cfigure \u003e\n\n    \n        \n            \u003cimg src=\"/images/content/km-gdoc-checklist.webp\"\n                \n                \n                    alt=\"keyboard maestro macro for inserting checklist in google docs\"\n                \n                \n                \n            /\u003e\n\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003cp\u003e\u003ca href=\"http://www.stairways.com/action/kmdiscount?REF6J\"\u003eKeyboard Maestro\u003c/a\u003e remains one of the most powerful utilities for the Mac.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eReferral link\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eI use 0.5s\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003eIt puzzles me that they haven\u0026rsquo;t assigned a default keyboard shortcut for this already.\u0026#160;\u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "Magic enter command for (fish/zsh) shell",
        "date_published" : "2022-07-23T12:50:31-07:00",
        "id" : "https://kau.sh/blog/magic-enter-shell/",
        "file_path" : "blog/2022-07-23-tip-fish-shell-magic-enter/index.md",
        "url" : "https://kau.sh/blog/magic-enter-shell/",
        "content_html" : "\u003cp\u003eTwo of the most common commands I run when I \u003ccode\u003ecd\u003c/code\u003e into a directory are:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ccode\u003egit status\u003c/code\u003e (which i do through \u003ca href=\"/blog/git-number\"\u003egit-number\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003els -lh\u003c/code\u003e (aliased automatically as \u003ccode\u003ell\u003c/code\u003e through fish)\u003c/li\u003e\n\u003c/ol\u003e\n\u003cul\u003e\n\u003cli\u003eIf this directory is not a git repo, then I usually am thinking of command 2.\u003c/li\u003e\n\u003cli\u003eIf however it is a git repository then\n\u003cul\u003e\n\u003cli\u003eI\u0026rsquo;d like to know if any files have been changed in this directory and\u003c/li\u003e\n\u003cli\u003ewhich ones specifically (which is command 1).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWouldn\u0026rsquo;t it be nice if I could just hit the ↩ (enter key) and have this automatically happen?\u003c/p\u003e\n\u003cvideo  controls \n        width=\"100%\"\n        autoplay \n        muted \n        loop \n        playsinline\u003e\n    \u003csource src=\"demo-magic-enter.mp4\" type=\"video/mp4\"\u003e\n  \u003cspan\u003e\u003c/span\u003e\n\u003c/video\u003e\n\u003ch2 id=\"solution-for-fish-users\"\u003eSolution for fish users\u003c/h2\u003e\n\u003cp\u003eIf you\u0026rsquo;re using \u003ca href=\"https://fishshell.com/\"\u003efish\u003c/a\u003e, I got you covered:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# filename: fish/conf.d/magic-enter.fish\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e magic-enter-cmd --description \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Issue git status or ls on hitting enter in a dir\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    set -l cmd ll\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    set -l is_git_repository \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003efish -c \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;git rev-parse --is-inside-work-tree \u0026gt;\u0026amp;2\u0026#34;\u003c/span\u003e 2\u0026gt;| grep true\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e# Special variable indicating git.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    set -l in_root_folder \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003efish -c \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;git rev-parse --show-toplevel \u0026gt;\u0026amp;2\u0026#34;\u003c/span\u003e 2\u0026gt;| grep \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003epwd\u003cspan style=\"color:#f92672\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    set -l repo_has_changes \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003egit status -s --ignore-submodules\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003edirty\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e test -n \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$is_git_repository\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e test -n \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$in_root_folder\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e test -n \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$repo_has_changes\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                set cmd git-number\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            end\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        end\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    end\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    echo $cmd\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e magic-enter\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    set -l cmd \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003ecommandline\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e test -z \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$cmd\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        commandline -r \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003emagic-enter-cmd\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        commandline -f suppress-autosuggestion\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    end\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    commandline -f execute\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebind \u003cspan style=\"color:#ae81ff\"\u003e\\r\u003c/span\u003e magic-enter\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"solution-for-zsh-users\"\u003eSolution for zsh users\u003c/h2\u003e\n\u003cp\u003eIf you\u0026rsquo;re using \u003ca href=\"https://zsh.sourceforge.io\"\u003ezsh\u003c/a\u003e, I adapted the \u003ca href=\"https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/magic-enter\"\u003enative solution\u003c/a\u003e like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# filename: magic-enter.plugin.zsh\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Default commands\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e: \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eMAGIC_ENTER_GIT_COMMAND:=\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;git-number\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e  \u003cspan style=\"color:#75715e\"\u003e# run when in a git repository\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e: \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eMAGIC_ENTER_OTHER_COMMAND:=\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;ll\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e        \u003cspan style=\"color:#75715e\"\u003e# run anywhere else\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emagic-enter\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e# Only run MAGIC_ENTER commands when in PS1 and command line is empty\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e# http://zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor.html#User_002dDefined-Widgets\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[[\u003c/span\u003e -n \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$BUFFER\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e||\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$CONTEXT\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e !\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e start \u003cspan style=\"color:#f92672\"\u003e]]\u003c/span\u003e; \u003cspan style=\"color:#66d9ef\"\u003ethen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003efi\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  is_git_repository\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003egit rev-parse --is-inside-work-tree\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  in_repo_root_folder\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003egit rev-parse --show-toplevel\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  repo_has_changes\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003egit status -s --ignore-submodules\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003edirty\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$is_git_repository\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e true \u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$in_repo_root_folder\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e $PWD \u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e ! -z \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$repo_has_changes\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e; \u003cspan style=\"color:#66d9ef\"\u003ethen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    BUFFER\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$MAGIC_ENTER_GIT_COMMAND\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    BUFFER\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$MAGIC_ENTER_OTHER_COMMAND\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003efi\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Wrapper for the accept-line zle widget (run when pressing Enter)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# If the wrapper already exists don\u0026#39;t redefine it\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e((\u003c/span\u003e ! \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003e+functions[_magic-enter_accept-line]\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e))\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e||\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$widgets\u003cspan style=\"color:#e6db74\"\u003e[accept-line]\u0026#34;\u003c/span\u003e in\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e# Override the current accept-line widget, calling the old one\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  user:*\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e zle -N _magic-enter_orig_accept-line \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003ewidgets[accept-line]#user:\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e _magic-enter_accept-line\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      magic-enter\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      zle _magic-enter_orig_accept-line -- \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$@\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e ;;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e# If no user widget defined, call the original accept-line widget\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  builtin\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e _magic-enter_accept-line\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      magic-enter\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      zle .accept-line\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e ;;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eesac\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ezle -N accept-line _magic-enter_accept-line\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRemember to source this in your \u003ccode\u003e.zshrc\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esource magic-enter.plugin.zsh\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"revisions\"\u003eRevisions\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eMake a change to only check git status in a root folder.\u003c/li\u003e\n\u003cli\u003eReddit \u003ccode\u003e/u/colemaker360\u003c/code\u003e \u003ca href=\"https://www.reddit.com/r/commandline/comments/w75msb/comment/ihiub1s/\"\u003ereminded me\u003c/a\u003e that the \u003ccode\u003e^/dev/null\u003c/code\u003e redirect strategy is now \u003ca href=\"https://github.com/fish-shell/fish-shell/issues/4394#issuecomment-366098782\"\u003edeprecated\u003c/a\u003e with fish 3.\u003c/li\u003e\n\u003cli\u003eRedditor \u003ccode\u003e/u/jblondreddit\u003c/code\u003e \u003ca href=\"https://www.reddit.com/r/fishshell/comments/w75nwt/comment/ihjpicp/\"\u003epointed out\u003c/a\u003e that porcelain can be a slow.\u003c/li\u003e\n\u003cli\u003eAdd solution for zsh users\u003c/li\u003e\n\u003c/ul\u003e\n"
    },
    {
        "title" : "Manipulating images \u0026 PDFs using CLI commands",
        "date_published" : "2022-07-21T20:40:45-07:00",
        "id" : "https://kau.sh/blog/terminal-cli-image-pdf-conversion/",
        "file_path" : "blog/2022-07-21-tip-cli-terminal-image-pdf-tips-tricks/index.md",
        "url" : "https://kau.sh/blog/terminal-cli-image-pdf-conversion/",
        "content_html" : "\u003cp\u003eWhenever I need to convert, merge, or combine images or PDF files, I pull out my Terminal and attempt doing it first with CLI (command line interface) commands. Over time I\u0026rsquo;ve built an arsenal of CLI commands that 9/10 times does the trick faster than any other program.\u003c/p\u003e\n\u003ch4 id=\"prerequisites\"\u003ePrerequisites\u003c/h4\u003e\n\u003cp\u003eMost of the image manipulation commands require \u003ca href=\"https://imagemagick.org/index.php\"\u003eimagemagick\u003c/a\u003e and the PDF ones require \u003ca href=\"https://poppler.freedesktop.org/\"\u003epoppler\u003c/a\u003e. Both of which are just a homebrew install away for macOS:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# image utilities\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew install \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;imagemagick\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# pdf utilities\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew install \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;poppler\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"merging\"\u003eMerging\u003c/h2\u003e\n\u003ch3 id=\"merge-images-horizontallyvertically\"\u003eMerge images horizontally/vertically\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# convert ships with imagemagick\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e## horizontal\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econvert +append image_1.png image_2.png merged\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e## vertical\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econvert -append image_1.png image_2.png merged // vertical\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# using montage\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# slightly better as it maintains transparency within images\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e## horizontal\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emontage 0_index.png 1_post.png -background none -tile 2x1 -geometry +0+0 PNG32:out.png\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e## vertical\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emontage 0_index.png 1_post.png -background none -tile 1x2 -geometry +0+0 PNG32:out.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"merge-images-and-pdfs\"\u003eMerge images and PDFs\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# convert ships with imagemagick\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econvert 1.png 2.pdf merged.pdf\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"merge-pdfs\"\u003eMerge PDFs\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# pdfunite ships with poppler\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epdfunite output-1.pdf output-2.pdf output-3.pdf merged-1-3.pdf\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epdfunite output-4.pdf output-5.pdf merged-4-5.pdf\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# using native tools that comes with the macOS\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/System/Library/Automator/Combine PDF Pages.action/Contents/Resources/join.py\u0026#34;\u003c/span\u003e -o merged.pdf source1.pdf source2.pdf\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# using ghostscript [also works with encrypted PDFs]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egs -q -dNOPAUSE -dBATCH -sDEVICE\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003epdfwrite -sOutputFile\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003emerged.pdf source1.pdf source2.pdf source3.pdf\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"splitting\"\u003eSplitting\u003c/h2\u003e\n\u003ch3 id=\"split-multi-page-pdf-into-single-page-pdfs\"\u003eSplit multi-page PDF into single page PDFs\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# pdfseparate \u0026amp; pdfunite ship with poppler\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# split input.pdf into output-1.pdf output-2.pdf ... etc.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epdfseparate input.pdf output-%d.pdf\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# split input.pdf from page 2 till the end\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epdfseparate -f \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e input.pdf output-%d.pdf\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"replacing-single-pages-in-pdf\"\u003eReplacing single pages in PDF\u003c/h2\u003e\n\u003cp\u003eA common usecase is to swap out a single page in a pdf. \u003ccode\u003epoppler\u003c/code\u003e doesn\u0026rsquo;t have a\nreadymade command for this, instead i just use \u003ccode\u003epdfseparate\u003c/code\u003e + \u003ccode\u003epdfunite\u003c/code\u003e for\nthis:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-fish\" data-lang=\"fish\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# input has 10 pages; special has 3 pages\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# replace pages 5,6,7 in input with special pages\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003epdfseparate\u003c/span\u003e input.pdf input-%d.pdf\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003epdfseparate\u003c/span\u003e special.pdf special-%d.pdf\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# using fish shell\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e i \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eseq\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e4\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003epdfunite\u003c/span\u003e input-$i\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eend\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"resizing\"\u003eResizing\u003c/h2\u003e\n\u003ch3 id=\"by--or-boundary\"\u003eBy % or boundary\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# convert ships with imagemagick\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econvert -resize 60%     src_img.png src_img_reduced.png\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econvert -resize 128x128 src_img.gif src_img_reduced.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eDoesn\u0026rsquo;t overwrite\u003c/li\u003e\n\u003cli\u003e60% is good for documents\u003c/li\u003e\n\u003cli\u003e75% is acceptable image quality (though you probably want higher)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"by-keeping-aspect-ratio--max-dimension\"\u003eBy keeping aspect ratio \u0026amp; max dimension\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esips -Z \u003cspan style=\"color:#ae81ff\"\u003e800\u003c/span\u003e input.png --out output.png\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Z     maintain aspect ratio\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 800   max height and width to be used\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"in-directory\"\u003eIn directory\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# resize all images in directory\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e f in *.jpeg\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   convert -resize 60% \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$f\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e dest/src_img_reduced.png\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"converting\"\u003eConverting\u003c/h2\u003e\n\u003ch3 id=\"dng--jpg\"\u003eDNG → JPG\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# sips ships natively with macOS\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esips -Z \u003cspan style=\"color:#ae81ff\"\u003e3072\u003c/span\u003e -s format jpeg input.dng --out output.jpg\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Z     maintain aspect ratio\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# -s    format jpeg\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eOverwrites\u003c/li\u003e\n\u003cli\u003eAggressively reduces\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"png--jpg\"\u003ePNG → JPG\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# sips ships natively with macOS\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esips -s format png input.jpg --out output.jpeg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"heic--jpg\"\u003eHEIC → JPG\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# sips ships natively with macOS\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esips -s format jpeg input.heic --out output.jpeg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"pdf--jpg\"\u003ePDF → JPG\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# convert ships with imagemagick\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econvert -density \u003cspan style=\"color:#ae81ff\"\u003e150\u003c/span\u003e -quality \u003cspan style=\"color:#ae81ff\"\u003e100\u003c/span\u003e -flatten -sharpen 0x1.0 -trim input.pdf output.jpg\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 3rd page of pdf\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econvert input.pdf\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e2\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e output.jpg\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# convert all pages (2 means 2 digits will show on page count)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econvert input.pdf output-%02d.jpg\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# pdftoppm ships with poppler\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# output is a prefix\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 150 is DPI\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epdftoppm -jpeg -r \u003cspan style=\"color:#ae81ff\"\u003e150\u003c/span\u003e input.pdf output\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"jpg--pdf\"\u003eJPG → PDF\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# convert ships with imagemagick\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econvert 1.jpg 2.jpg merged.pdf\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"jpg--a4-paper-size-pdf\"\u003eJPG → (A4 paper size) PDF\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econvert -density \u003cspan style=\"color:#ae81ff\"\u003e80\u003c/span\u003e input.jpeg -background white \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e        -page a4  \u003cspan style=\"color:#75715e\"\u003e# -page Letter\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        output.pdf\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"jpg--png\"\u003eJPG → PNG\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# sips ships natively with macOS\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esips -s format png input.jpg --out output.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"png--webp\"\u003ePNG → WEBP\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# install webp utility\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew install webp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecwebp input.png -o output.webp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecwebp -q \u003cspan style=\"color:#ae81ff\"\u003e75\u003c/span\u003e input.png -o output.webp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# -q 75 refers to the compression rate.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"svg--webp\"\u003eSVG → WEBP\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# convert ships with imagemagick\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econvert -background none -density \u003cspan style=\"color:#ae81ff\"\u003e200\u003c/span\u003e input.svg output.webp\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"svg--png\"\u003eSVG → PNG\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# convert ships with imagemagick\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econvert -background none -density \u003cspan style=\"color:#ae81ff\"\u003e1000\u003c/span\u003e -resize 48x is_logo_location.svg is_logo_location.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"png--gif\"\u003ePNG → GIF\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# convert ships with imagemagick\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econvert -delay \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e -loop \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e *.png output.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"movmp4--gif\"\u003eMOV/MP4 → GIF\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# convert ships with imagemagick\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emkdir frames\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# mov or m4v\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# ffmpeg -i input.mov -vf scale=320:-1,format=rgb8,format=rgb24 -r 10 frames/ffout%3d.png\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003effmpeg -i input.mov -vf scale\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e320:-1 -r \u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e frames/ffout%3d.png\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003econvert -delay \u003cspan style=\"color:#ae81ff\"\u003e8\u003c/span\u003e -loop \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e frames/ffout*.png frames/output.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# scale   [width in px]:-1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# r       framerate\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"manipulating\"\u003eManipulating\u003c/h2\u003e\n\u003ch3 id=\"remove-transparency\"\u003eRemove transparency\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# flattens png to a solid color\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# mogrify ships with imagemagick\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emogrify -background white -flatten input*.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"get-information-from-image\"\u003eGet information from image\u003c/h2\u003e\n\u003ch3 id=\"is-image-transparent\"\u003eIs image transparent?\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# identify ships with imagemagick\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eidentify -format \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;%[channels]\u0026#39;\u003c/span\u003e foo.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"list-image-dimensions\"\u003eList image dimensions\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eidentify -format \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#34;%w %h\u0026#39;\u003c/span\u003e foo.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cem\u003eI\u0026rsquo;ll keep adding more as I discover new use cases.\u003c/em\u003e\u003c/p\u003e\n"
    },
    {
        "title" : "Saving the world from code",
        "date_published" : "2022-06-18T00:00:00-07:00",
        "id" : "https://kau.sh/blog/saving-the-world-from-code/",
        "file_path" : "blog/2022-06-18-saving-the-world-from-code.md",
        "url" : "https://kau.sh/blog/saving-the-world-from-code/",
        "content_html" : "\u003cp\u003eA good friend of mine who\u0026rsquo;s worked on some pretty pivotal hardware/software integrations for our time told me: \u0026ldquo;it feels like a miracle when I see the code I wrote drive physical bits. I almost can\u0026rsquo;t believe it. No seriously… how does this even work?\u0026rdquo;.\u003c/p\u003e\n\u003cp\u003eIf this sentiment resonates with you to some level, you will love reading this article:\u003c/p\u003e\n\u003ch2 id=\"the-coming-software-apocalypsehttpswwwtheatlanticcomtechnologyarchive201709saving-the-world-from-code540393\"\u003e\u003ca href=\"https://www.theatlantic.com/technology/archive/2017/09/saving-the-world-from-code/540393/\"\u003eThe coming software apocalypse\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis entire article is fascinating. It took a lot of restraint not to just pull-quote every paragraph from this article.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe software did exactly what it was told to do. In fact it did it perfectly. The reason it failed is that it was told to do the wrong thing. Software failures are failures of understanding, and of imagination.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis is the trouble with making things out of code, as opposed to something physical. “The complexity,” as Leveson puts it, “is invisible to the eye.” \u0026hellip;“Computing is fundamentally invisible,” Gerard Berry said in his talk. “When your tires are flat, you look at your tires, they are flat. When your software is broken, you look at your software, you see nothing.”\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe National Highway Traffic Safety Administration enlisted software experts from NASA to perform an intensive review of Toyota’s code. After nearly 10 months, the NASA team hadn’t found evidence that software was the cause—but said they couldn’t prove it wasn’t. \u0026hellip; They showed that as little as a single bit flip—a one in the computer’s memory becoming a zero or vice versa—could make a car run out of control.”\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e“Visual Studio is one of the single largest pieces of software in the world,” he said. “It’s over 55 million lines of code. And one of the things that I found out in this study is more than 98 percent of it is completely irrelevant. All this work had been put into this thing, but it missed the fundamental problems that people faced. And the biggest one that I took away from it was that basically people are playing computer inside their head. \u0026hellip; So the students who did well—in fact the only ones who survived at all—were those who could step through that text one instruction at a time in their head, thinking the way a computer would, trying to keep track of every intermediate calculation”\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe programmer, staring at a page of text, was abstracted from whatever it was they were actually making. \u0026hellip; “Our current conception of what a computer program is,” he said, is “derived straight from Fortran and ALGOL in the late ’50s. Those languages were designed for punch cards. That code now takes the form of letters on a screen in a language like C or Java (derivatives of Fortran and ALGOL), instead of a stack of cards with holes in it, doesn’t make it any less dead, any less indirect. \u0026hellip; the idea that people were doing important work, like designing adaptive cruise-control systems or trying to understand cancer, by staring at a text editor, was appalling\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAn alternative way of writing code:\u003c/p\u003e\n\u003cvideo  controls \n        width=\"100%\"\n        autoplay \n        muted \n        loop \n        playsinline\u003e\n    \u003csource src=\"https://cdn.theatlantic.com/assets/media/files/videos/bret-victor-inventing-on-principle.mp4\" type=\"video/mp4\"\u003e\n  \u003cspan\u003e\u003c/span\u003e\n\u003c/video\u003e\n\u003cp\u003eThis article has forced me to revisit my disdain for WYSIWYG like editors\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eOne programmer who saw the talk wrote later: “Suddenly all of my tools feel obsolete.”\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWhen John Resig saw the “Inventing on Principle” talk, he scrapped his plans for the Khan Academy programming curriculum. He wanted the site’s programming exercises to work just like Victor’s demos.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e“I’m not sure that programming has to exist at all,” he told me. “Or at least software developers.” In his mind, a software developer’s proper role was to create tools that removed the need for software developers.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eProgrammers, as a species, are relentlessly pragmatic. Tools like TLA+ reek of the ivory tower. When programmers encounter “formal methods” (so called because they involve mathematical, “formally” precise descriptions of programs), their deep-seated instinct is to recoil.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003ehello layout inspector\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "My productivity system",
        "date_published" : "2022-05-31T00:00:00-07:00",
        "id" : "https://kau.sh/blog/productivity/",
        "file_path" : "blog/2022-05-31-life-productivity.md",
        "url" : "https://kau.sh/blog/productivity/",
        "content_html" : "\u003cp\u003eRecently, I killed an entire week moving from \u003ca href=\"https://culturedcode.com/things/\"\u003eThings (3)\u003c/a\u003e → \u003ca href=\"https://app.asana.com/\"\u003eAsana\u003c/a\u003e → \u003ca href=\"https://todoist.com/\"\u003eTodoist\u003c/a\u003e → Things. I won\u0026rsquo;t go into the details but I had a realization: I need to jot down how I think about my current system of productivity.\u003c/p\u003e\n\u003cp\u003eHaving this clearly laid out will convince future me that moving to another tool is unnecessary if I follow the existing one I have diligently. I also think it necessary to lay down tactical instructions, so that in my moments of weakness I have something easy to follow and prevent me from going on a futile productivity sojourn.\u003c/p\u003e\n\u003ch1 id=\"challenges\"\u003eChallenges\u003c/h1\u003e\n\u003cp\u003eThis system works for me because it addresses specific challenges that I face in getting things done. It\u0026rsquo;s worth pointing out what my challenges are:\u003c/p\u003e\n\u003ch2 id=\"trapped-in-burndown-continuum\"\u003eTrapped in burndown continuum\u003c/h2\u003e\n\u003cp\u003eThere are days I\u0026rsquo;m able to knock out tasks one after the other. I go weeks like a programmed robot knocking out tasks one after another as they percolate into my \u0026ldquo;Today\u0026rdquo; list. But I quickly burn out and am unable to go any further in this mode  because I feel trapped in a continuum.\u003c/p\u003e\n\u003cp\u003eI need to see the bird\u0026rsquo;s eye-view. I need to know why I\u0026rsquo;m doing what I\u0026rsquo;m doing. What are the daily tasks in service of? Am I reaching the goals I set out for myself this month or year?\u003c/p\u003e\n\u003ch2 id=\"single-task-hang-up\"\u003eSingle task hang up\u003c/h2\u003e\n\u003cp\u003eThere are days I start with 3 tasks to get done. I start working on one of the tasks but get absorbed into it that I forget about the other ones due for the same day. I barely finish the first task; and the others get pushed to tomorrow. Tomorrow comes and the story repeats.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWork expands to fill the time allotted for its completion.\u003c/p\u003e\n\u003cp\u003e-  Cyril Northcote Parkinson\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eA sense of urgency and being conscious of time spent on a task is important.\u003c/p\u003e\n\u003ch2 id=\"overwhelmed-with-tasks\"\u003eOverwhelmed with tasks\u003c/h2\u003e\n\u003cp\u003eThere are days I open up my Today view and find 20 tasks to do – all moderately important and valuable to get done. I didn\u0026rsquo;t choose to do these tasks. The tasks chose me, engulfed me, invaded my Today view! So I abandon it all and do none of it 🙈.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI didn\u0026rsquo;t choose to do these tasks. The tasks chose me, engulfed me\u0026hellip;\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThere are other days when I wake up and see the same set of tasks over and over again. Monday, Tuesday, Wednesday … Thursday rolls over, still 20 tasks left. Little progress made and it knocks the wind out of me.\u003c/p\u003e\n\u003ch2 id=\"what-should-i-do-next\"\u003eWhat should I do next?\u003c/h2\u003e\n\u003cp\u003eThere are days I open up my todo app and I just don\u0026rsquo;t know what to do next. I had ideas for getting things done this year, this month, this week\u0026hellip; but where do i start? Have I progressed on my goals at all or am I taking on tasks as they come rushing towards me again?\u003c/p\u003e\n\u003ch1 id=\"strategy\"\u003eStrategy\u003c/h1\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWe always overestimate the change that will occur in the next two years and underestimate the change that will occur in the next ten. Don\u0026rsquo;t let yourself be lulled into inaction.\u003c/p\u003e\n\u003cp\u003e- Bill Gates\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis quote summarizes well the challenge I face with my productivity system and why it doesn’t work for me consistently: I focus on optimizing the daily/weekly but lose sight of the monthly/yearly.\u003c/p\u003e\n\u003ch2 id=\"judicious-use-of-due-dates\"\u003eJudicious use of due-dates\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eYou should pick your tasks for the day. They should not come for you.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eTo achieve this, I need to be judicious when picking a due-date/deadline for a task. Picking a date in the future means my todo app will automatically throw that task into my \u0026ldquo;Today\u0026rdquo; list in the future. I tend to get zealous and pick dates for when I think I can get the task done but when that ordained day comes around, I’m usually not ready to take on that task.\u003c/p\u003e\n\u003cp\u003eFew tasks are so important so as to take up valuable future calendar real estate. Here\u0026rsquo;s a helpful heuristic:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWill you lose money if this task isn’t done?\u003c/li\u003e\n\u003cli\u003eWill it affect your health?\u003c/li\u003e\n\u003cli\u003eWill you be backing out of a commitment?\u003c/li\u003e\n\u003cli\u003eWill it affect somebody else’s health?\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eUnless the answer to any of the above is a yes, \u003cstrong\u003eremove that  due date\u003c/strong\u003e. Tuck it gently back into the backlog. If it’s important enough, it’ll crop back up again.\u003c/p\u003e\n\u003ch2 id=\"monthly-logs\"\u003eMonthly logs\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://culturedcode.com/things/\"\u003eThings\u003c/a\u003e captures my daily and weekly views. This works.\u003c/p\u003e\n\u003cp\u003eI track yearly progress with my \u003ca href=\"/categories/#new-year\"\u003e#new-year\u003c/a\u003e posts. This doesn’t work too well. The format itself is ok but compiling it all at the end of the year means I miss a whole bunch of intermediate progress.\u003c/p\u003e\n\u003cp\u003eThe missing piece was tracking monthly progress. Having the monthly check ins along with the daily + yearly ones will help me get a better view into the bigger picture with the visibility to course correct when needed.\u003c/p\u003e\n\u003cp\u003eI’m planning to use my blog here to track my monthly progress. I even tweaked my theme to accommodate these special kind of posts\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003ch1 id=\"tactical-instructions\"\u003eTactical Instructions\u003c/h1\u003e\n\u003cp\u003eWhat does this system look like:\u003c/p\u003e\n\u003ch2 id=\"new-year-retrospective-posts\"\u003e#new-year retrospective posts\u003c/h2\u003e\n\u003cp\u003eAt the start of the year:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTrack my progress against previous year’s goals.\n\u003cul\u003e\n\u003cli\u003eGo through my monthly logs and track the highlights.\u003c/li\u003e\n\u003cli\u003eEvaluate the lowlights and what I can do better.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eList my goals for the next year.\n\u003cul\u003e\n\u003cli\u003eCreate projects (or tasks) in Things for each of these.\u003c/li\u003e\n\u003cli\u003eI should see these on my sidebar every time I open Things.\u003c/li\u003e\n\u003cli\u003eIt is ok to not achieve all of them.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"monthly-retrospective-posts\"\u003e#monthly retrospective posts\u003c/h2\u003e\n\u003cp\u003eAt the end of every month:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJot down thoughts on how the month went.\n\u003cul\u003e\n\u003cli\u003eEspecially the unplanned highlights/lowlights.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e✅ monthly goals that got done.\u003c/li\u003e\n\u003cli\u003e🙅 monthly goals that couldn\u0026rsquo;t get done.\u003c/li\u003e\n\u003cli\u003ePick goals for the next month.\n\u003cul\u003e\n\u003cli\u003eCarry over previous month’s goals?\n\u003cul\u003e\n\u003cli\u003eIt\u0026rsquo;s ok to throw them into a \u0026ldquo;someday\u0026rdquo; bucket.\u003c/li\u003e\n\u003cli\u003eCarrying over a goal or task for a few months now? Think harder about throwing it to the “someday\u0026quot; list.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eNeed to make more progress on the yearly goals?\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"things\"\u003eThings\u003c/h2\u003e\n\u003cp\u003eIt’s a gorgeous app with top shelf UX. Stick with it. Sure Todoist has better integrations, Asana allows multiple sub-projects but not valuable enough to shift tools.\u003c/p\u003e\n\u003cp\u003eIf you think of an idea, put all the context in the task and toss it into the Inbox view immediately. Don\u0026rsquo;t waste time categorizing the task in the right project list or worrying how it fits in your monthly/yearly goals. Mind dump and move on.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe most effective todo system:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eEvery morning, write a list of the things that need to be done that day.\u003c/li\u003e\n\u003cli\u003eDo them.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAt the start of the day:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eClean your inbox\n\u003cul\u003e\n\u003cli\u003eIf you need to clarify, add more context and details to the task.\u003c/li\u003e\n\u003cli\u003eDon\u0026rsquo;t be tempted to get them done Today.\u003c/li\u003e\n\u003cli\u003eFind a proper home in a corresponding project.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ePick the 3 things you need to get done today.\n\u003cul\u003e\n\u003cli\u003eWhy couldn\u0026rsquo;t you finish yesterday\u0026rsquo;s tasks?\u003c/li\u003e\n\u003cli\u003eDo they need to go to the Someday list?\u003c/li\u003e\n\u003cli\u003eDon\u0026rsquo;t add more tasks if you can\u0026rsquo;t finish the day with Today 0.\u003c/li\u003e\n\u003cli\u003eAre any tasks coming up that are due?\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"25mt-timers\"\u003e25mt timers\u003c/h2\u003e\n\u003cp\u003eI wear an Apple watch and every time I embark on a task, I start a 25mt timer. This helps me timebox things. More importantly it gives me a sense of the time I\u0026rsquo;ve spent on a task. If i\u0026rsquo;ve completed four 25mt cycles, I need to start thinking about the other tasks.\u003c/p\u003e\n\u003cp\u003eI’ll let you know how this all turns out.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003e\u003cem\u003eI\u0026rsquo;ll update this post with screenshots once I have this system up and going for a few months\u003c/em\u003e.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eThey’re private for now. I might make these public in the future 🤷‍♂️.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "Remove Terminal.app from Alfred \u0026 Spotlight",
        "date_published" : "2022-05-29T00:00:00-07:00",
        "id" : "https://kau.sh/blog/remove-terminal-alfred-spotlight/",
        "file_path" : "blog/2022-05-29-tip-remove-terminal-alfred-spotlight-results/index.md",
        "url" : "https://kau.sh/blog/remove-terminal-alfred-spotlight/",
        "content_html" : "\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"./remove-terminal-alfred.png\"\n                \n                \n                    alt=\"Spotlight Alfred show Terminal.app and iTerm\"\n                \n                \n                \n            /\u003e\n\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eI use \u003ca href=\"https://iterm2.com/\"\u003eiTerm\u003c/a\u003e as my terminal of choice\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. It constantly annoys me when I use \u003ca href=\"https://www.alfredapp.com/\"\u003eAlfred\u003c/a\u003e or Spotlight that the Terminal.app (native macOS) app also shows up in the search results.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eThis is especially annoying on new computers when Alfred hasn\u0026rsquo;t learnt my preferences as Terminal.app would show up first in the results.\u003c/em\u003e\u003c/p\u003e\n\u003ch2 id=\"options\"\u003eOptions\u003c/h2\u003e\n\u003cp\u003eQuick googling shows two options:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eAdd a Spotlight comment \u003ccode\u003ealfred:ignore\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eAdd the app to your Spotlight \u0026ldquo;privacy\u0026rdquo;\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eOption 1 is made a little complicated owing to the fact that you can\u0026rsquo;t add spotlight comments to native \u0026ldquo;Utilities\u0026rdquo; app on the Mac. I managed to do this but this option doesn’t work.\u003c/p\u003e\n\u003cp\u003eAt first, Option 2 might also seem tricky since the file picker doesn\u0026rsquo;t allow you to pick Utilities apps again. But there\u0026rsquo;s an easy workaround:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eOpen Spotlight Preferences \u0026gt; Privacy Tab\u003c/li\u003e\n\u003cli\u003eOpen new Finder window \u0026amp; search for \u0026ldquo;Terminal.app\u0026rdquo;\u003c/li\u003e\n\u003cli\u003eDrag Terminal.app search result to Privacy Tab on Spotlight preferences\u003c/li\u003e\n\u003cli\u003etype \u0026ldquo;Reload\u0026rdquo; in Alfred\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNow, whenever I search for \u0026ldquo;Term\u0026rdquo;, I only see \u0026ldquo;iTerm\u0026rdquo; show up in my search results.\u003c/p\u003e\n\u003ch2 id=\"video\"\u003eVideo\u003c/h2\u003e\n\u003cvideo  controls \n        width=\"100%\"\n        autoplay \n        muted \n        loop \n        playsinline\u003e\n    \u003csource src=\"./remove-terminal-alfred-spotlight.mp4\" type=\"video/mp4\"\u003e\n  \u003cspan\u003e\u003c/span\u003e\n\u003c/video\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eWhy I use iTerm is for another blog post.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "Introducing Henry for Hugo",
        "date_published" : "2021-10-17T14:14:04-07:00",
        "id" : "https://kau.sh/blog/henry-hugo-theme/",
        "file_path" : "blog/2021-10-17-henry-hugo-theme/index.md",
        "url" : "https://kau.sh/blog/henry-hugo-theme/",
        "content_html" : "\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"/images/content/henry.webp\"\n                \n                \n                \n                \n            /\u003e\n\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cdiv class='callout left'\u003e\n    Henry is a theme I first open-sourced for \u003ca href=\"http://jekyllrb.com/\"\u003eJekyll\u003c/a\u003e. You can read all about it \u003ca href=\"../henry-jekyll-theme\"\u003ehere\u003c/a\u003e. I\u0026rsquo;ve now recreated \u003ca href=\"https://github.com/kaushikgopal/henry-hugo/\"\u003eHenry for Hugo\u003c/a\u003e.\n\u003c/div\u003e\n\u003ch2 id=\"why-hugo\"\u003eWhy Hugo?\u003c/h2\u003e\n\u003cp\u003eOver the last year, I\u0026rsquo;ve been learning \u003ca href=\"https://golang.org/\"\u003eGo\u003c/a\u003e and my interest in \u003ca href=\"https://gohugo.io/\"\u003eHugo\u003c/a\u003e piqued. Hugo—much like Jekyll—is a static blog engine written in Go. But it\u0026rsquo;s got more features, a more active community and is \u003cem\u003eblazingly\u003c/em\u003e fast.\u003c/p\u003e\n\u003ch1 id=\"features\"\u003eFeatures\u003c/h1\u003e\n\u003cp\u003eMany of the features I wrote as custom features for Jekyll, come built-in with Hugo. But I took the opportunity to tweak these a little further.\u003c/p\u003e\n\u003cp\u003eHere\u0026rsquo;s how they\u0026rsquo;re implemented in Hugo:\u003c/p\u003e\n\u003ch2 id=\"customizability\"\u003eCustomizability\u003c/h2\u003e\n\u003cp\u003eA blog theme is only useful if it is versatile enough to reflect your unique character and touch. Henry is \u003cem\u003eextremely\u003c/em\u003e customizable. With simple scss override files you can customize the entire look of your blog.\u003c/p\u003e\n\u003cp\u003eIf you look at the \u003ca href=\"https://github.com/kaushikgopal/henry-hugo/blob/master/assets/scss/style.scss\"\u003emain style.scss file\u003c/a\u003e in Henry, here\u0026rsquo;s how we import the different styles:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-scss\" data-lang=\"scss\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// themes/henry/assets/scss/style.scss\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003e@import\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;theme\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003e@import\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;mixins\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;code\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;base\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003e@import\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;main\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou can override\u003ca href=\"https://github.com/kaushikgopal/henry-hugo/tree/master/assets/scss\"\u003e any of the above files\u003c/a\u003e and customize your blog\u0026rsquo;s look. For example, to change the background color you can override the \u003ccode\u003etheme.scss\u003c/code\u003e file like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-scss\" data-lang=\"scss\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// my-blog/assets/scss/theme.scss\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e@import\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;../../themes/henry/assets/scss/theme\u0026#39;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Hook to override predefined variables.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e$background-color\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e      \u003cspan style=\"color:#ae81ff\"\u003e#3E4244\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$color-header-index\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e    \u003cspan style=\"color:#a6e22e\"\u003elighten\u003c/span\u003e($background-color\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e%\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$color-header\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e          \u003cspan style=\"color:#a6e22e\"\u003elighten\u003c/span\u003e($background-color\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e60\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e%\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo see a demo of the difference compare \u003ca href=\"https://kau.sh/blog\"\u003ethis blog\u003c/a\u003e with my \u003ca href=\"https://karthickg.com/blog\"\u003ebrother\u0026rsquo;s\u003c/a\u003e. Both use Henry but look pretty different.\u003c/p\u003e\n\u003ch2 id=\"footsidenotes\"\u003e\u003cdel\u003eFoot\u003c/del\u003eSidenotes\u003c/h2\u003e\n\u003cp\u003eI picked this feature up from Tufte CSS\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e - inspired by the \u003ca href=\"https://en.wikipedia.org/wiki/Edward_Tufte\"\u003elegendary Edward Tufte\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re reading this post on a wide screen you should notice the tips to the side of this post. Go ahead and hover your cursor over to see the sidenote highlighted. On narrower screens (like  phones) the sidenotes show up as traditional footnotes. You can use  the quick jump links to navigate back and forth.\u003c/p\u003e\n\u003cp\u003eYou can read more about this feature and its implementation in this separate \u003ca href=\"../jekyll-footnote-tufte-sidenote/\"\u003eblog post\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"image-display\"\u003eImage display\u003c/h2\u003e\n\u003cp\u003eHenry comes with all kinds of powerful and convenient image display options. We leverage Hugo \u003ca href=\"https://gohugo.io/content-management/shortcodes/\"\u003eshortcode\u003c/a\u003es for this.\u003c/p\u003e\n\u003cp\u003eThese are all the options that Henry\u0026rsquo;s \u003ccode\u003eimg\u003c/code\u003e shortcode has:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-md\" data-lang=\"md\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u0026lt;!--\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e    Other than src everything is optional\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e    VSCode users - look for a handy snippet later in this post\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e--\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{\u0026lt; \u003cspan style=\"color:#f92672\"\u003eimg\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esrc\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/assets/img/henry.jpg\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e         \u003cspan style=\"color:#a6e22e\"\u003eclass\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;full-bleed\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e         \u003cspan style=\"color:#a6e22e\"\u003ealign\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;center\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e         \u003cspan style=\"color:#a6e22e\"\u003ealt\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Henry for Hugo\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e         \u003cspan style=\"color:#a6e22e\"\u003ecaption\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;caption for image w/o link\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e         \u003cspan style=\"color:#a6e22e\"\u003eattrlink\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;https://wiki/images\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e         \u003cspan style=\"color:#a6e22e\"\u003eattr\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Courtesy: Wikipedia\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026gt;}}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere is the simplest way to embed an image in your blog post:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-md\" data-lang=\"md\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{\u0026lt; \u003cspan style=\"color:#f92672\"\u003eimg\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esrc\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;./henry_image_lawsofux.webp\u0026#34;\u003c/span\u003e \u0026gt;}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e# or using the native markdown syntax\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e![](/assets/img/lawsofux.webp)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cfigure \u003e\n\n    \n        \n            \u003cimg src=\"/images/content/henry_image_lawsofux.webp\"\n                \n                \n                \n                \n            /\u003e\n\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eIf you want to align your image to the center, just use the \u0026ldquo;align\u0026rdquo; option:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-md\" data-lang=\"md\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{\u0026lt; \u003cspan style=\"color:#f92672\"\u003eimg\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esrc\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;./henry_image_lawsofux.webp\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ealign\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;center\u0026#34;\u003c/span\u003e \u0026gt;}}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"/images/content/henry_image_lawsofux.webp\"\n                \n                \n                \n                \n            /\u003e\n\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-md\" data-lang=\"md\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{\u0026lt; \u003cspan style=\"color:#f92672\"\u003eimg\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esrc\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;./henry_image_lawsofux.webp\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ealign\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;left\u0026#34;\u003c/span\u003e \u0026gt;}}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cfigure \u003e\n\n    \u003cdiv align=\"left\"\u003e\n        \n            \u003cimg src=\"/images/content/henry_image_lawsofux.webp\"\n                \n                \n                \n                \n            /\u003e\n\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-md\" data-lang=\"md\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{\u0026lt; \u003cspan style=\"color:#f92672\"\u003eimg\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esrc\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;./henry_image_lawsofux.webp\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ealign\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;right\u0026#34;\u003c/span\u003e \u0026gt;}}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cfigure \u003e\n\n    \u003cdiv align=\"right\"\u003e\n        \n            \u003cimg src=\"/images/content/henry_image_lawsofux.webp\"\n                \n                \n                \n                \n            /\u003e\n\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eHenry allows you to attribute your images to the right source:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-md\" data-lang=\"md\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{\u0026lt; \u003cspan style=\"color:#f92672\"\u003eimg\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esrc\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;./henry_image_lawsofux.webp\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eattrlink\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;https://lawsofux.com/von-restorff-effect/\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eattr\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Courtesy: lawsofux\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026gt;}}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"/images/content/henry_image_lawsofux.webp\"\n                \n                \n                \n                \n            /\u003e\n\n            \n            \u003cfigcaption\u003e\n                \n\n                \n                        \n\n                        \n                            \n                            \n                            \u003ca class=\"center\" href=\"https://lawsofux.com/von-restorff-effect/\"\u003e\n                            \n                        \n\n                                Courtesy: lawsofux\n\n                            \u003c/a\u003e\n                \n\n            \u003c/figcaption\u003e\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eYou can also caption your images:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-md\" data-lang=\"md\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{\u0026lt; \u003cspan style=\"color:#f92672\"\u003eimg\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esrc\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;./henry_image_lawsofux.webp\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t   \u003cspan style=\"color:#a6e22e\"\u003ecaption\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Von Restroff Effect\u0026#34;\u003c/span\u003e \u0026gt;}}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cfigure \u003e\n\n    \n        \n            \u003cimg src=\"/images/content/henry_image_lawsofux.webp\"\n                \n                \n                    alt=\"Von Restroff Effect\"\n                \n                \n                \n            /\u003e\n\n            \n            \u003cfigcaption\u003e\n                \n\n                \n                        Von Restroff Effect\n\n                        \n\n                                \n\n                            \n                \n\n            \u003c/figcaption\u003e\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eIf you want to add custom classes you can pass them through the shortcode. For example, Henry defines a \u0026ldquo;callout\u0026rdquo; style class. Let\u0026rsquo;s add that to our image like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-scss\" data-lang=\"scss\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// my-blog/assets/scss/main_override.scss\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003e.callout\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eborder\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003epx\u003c/span\u003e solid \u003cspan style=\"color:#66d9ef\"\u003egray\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003epadding\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eem\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003emargin-bottom\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e30\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003epx\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-md\" data-lang=\"md\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{\u0026lt; \u003cspan style=\"color:#f92672\"\u003eimg\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esrc\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;./henry_image_lawsofux.webp\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eclass\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;callout\u0026#34;\u003c/span\u003e \u0026gt;}}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cfigure class=\"callout\"\u003e\n\n    \n        \n            \u003cimg src=\"/images/content/henry_image_lawsofux.webp\"\n                class=\"callout\"\n                \n                \n                \n            /\u003e\n\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eI also added a special \u0026ldquo;full-bleed\u0026rdquo; class that displays your images beautifully with some css-trickery:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-md\" data-lang=\"md\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{\u0026lt; \u003cspan style=\"color:#f92672\"\u003eimg\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esrc\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;https://assets.atlasobscura.com/image.jpg\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eclass\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;full-bleed\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eattrlink\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;https://www.atlasobscura.com/articles/manhole\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eattr\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Atlas Obscura\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026gt;}}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cfigure class=\"full-bleed\"\u003e\n\n    \n        \n            \u003cimg src=\"https://assets.atlasobscura.com/article_images/lg/63698/image.jpg\"\n                class=\"full-bleed\"\n                \n                    alt=\"Japanese Manhole Art\"\n                \n                \n                \n            /\u003e\n\n            \n            \u003cfigcaption\u003e\n                \n\n                \n                        \n\n                        \n                            \n                            \u003ca href=\"https://www.atlasobscura.com/articles/japanese-manhole-covers\"\u003e\n                            \n                        \n\n                                Atlas Obscura\n\n                            \u003c/a\u003e\n                \n\n            \u003c/figcaption\u003e\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003ch3 id=\"vscode-snippet\"\u003eVSCode Snippet\u003c/h3\u003e\n\u003cp\u003eIf you are a VSCode user and would like a \u003ca href=\"https://code.visualstudio.com/docs/editor/userdefinedsnippets\"\u003esnippet\u003c/a\u003e to autocomplete the img shortcode, here you go:\u003c/p\u003e\n\u003cscript type=\"application/javascript\" src=\"https://gist.github.com/kaushikgopal/f4b19ea942551811055c712d8fe529f5.js\"\u003e\u003c/script\u003e\n\n\u003ch2 id=\"related-posts\"\u003eRelated posts\u003c/h2\u003e\n\u003cp\u003eAll the way at the bottom of this post, you’ll notice a \u0026ldquo;related posts\u0026rdquo; section. In there, I’d like to show you more blog posts on the same topic that you might find interesting.\u003c/p\u003e\n\u003cp\u003eHugo has related posts built in as a feature. It\u0026rsquo;s also far more customizable than the one I built with the Jekyll version of Henry. Hugo\u0026rsquo;s documentation on configuring this feature can be a little tricky though, so here\u0026rsquo;s how you configure it the \u0026ldquo;Henry\u0026rdquo; way:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-toml\" data-lang=\"toml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e[\u003cspan style=\"color:#a6e22e\"\u003erelated\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003eincludeNewer\u003c/span\u003e = \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003ethreshold\u003c/span\u003e = \u003cspan style=\"color:#ae81ff\"\u003e80\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003etoLower\u003c/span\u003e = \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  [[\u003cspan style=\"color:#a6e22e\"\u003erelated\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eindices\u003c/span\u003e]]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003ename\u003c/span\u003e = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;tags\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eweight\u003c/span\u003e = \u003cspan style=\"color:#ae81ff\"\u003e80\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  [[\u003cspan style=\"color:#a6e22e\"\u003erelated\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eindices\u003c/span\u003e]]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003ename\u003c/span\u003e = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;categories\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eweight\u003c/span\u003e = \u003cspan style=\"color:#ae81ff\"\u003e20\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  [[\u003cspan style=\"color:#a6e22e\"\u003erelated\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eindices\u003c/span\u003e]]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003ename\u003c/span\u003e = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;title\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eweight\u003c/span\u003e = \u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSay your blog \u003ccode\u003eyaml\u003c/code\u003e header looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003elayout\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003epost\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003etitle\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Introducing Henry - a Jekyll theme\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003etags\u003c/span\u003e: [\u003cspan style=\"color:#ae81ff\"\u003ejekyll, blogging]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHenry will search for similar posts that have the tag \u0026ldquo;jekyll\u0026rdquo; or \u0026ldquo;blogging\u0026rdquo; and show them in the related section at the bottom of every post. It\u0026rsquo;s that simple.\u003c/p\u003e\n\u003ch2 id=\"external-urls-daring-fireball-style\"\u003eExternal URLs (Daring Fireball style)\u003c/h2\u003e\n\u003cp\u003eJohn Gruber of \u003ca href=\"https://daringfireball.net/\"\u003eDaring Fireball\u003c/a\u003e fame pioneered a style of blogging where you share a link to another website but supplement it with commentary of your own.\u003c/p\u003e\n\u003cvideo  controls \n        width=\"100%\"\n        autoplay \n        muted \n        loop \n        playsinline\u003e\n    \u003csource src=\"./henry_dflink.mp4\" type=\"video/mp4\"\u003e\n  \u003cspan\u003e\u003c/span\u003e\n\u003c/video\u003e\n\u003cp\u003eThe \u003ccode\u003e»\u003c/code\u003e points you directly to the external website while clicking the title directly takes you to your internal version of the post containing the commentary.\u003c/p\u003e\n\u003cp\u003eAll you need is an \u003ccode\u003eexternalLink\u003c/code\u003e at the top of your post and Henry takes care of the rest:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003elayout\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003epost\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003etitle\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Fragmented Podcast - Episode #2 : Android Studio\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eexternalLink\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttp://fragmentedpodcast.com/episodes/2/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"canonical-urls\"\u003eCanonical URLs\u003c/h2\u003e\n\u003cp\u003eSometimes I write blog posts for my company\u0026rsquo;s tech blog or a Medium account. If I want to give the post additional lift and surface it to my own followers, I like to additionally post the content to my own blog here. It\u0026rsquo;s a good idea to also host content at a place that you own and control\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003cp\u003eBut you have to be a little careful about copy pasting content in more than one place on the internet. Google might ding your search engine ranking for duplicating content. The kosher way to do this is using \u0026ldquo;canonical urls\u0026rdquo;.\u003c/p\u003e\n\u003cp\u003eWith Henry, I can now copy paste the content from elsewhere, add the canonical url in my post and have it attributed correctly.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003elayout\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003epost\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003etitle\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eHackathon vote tabulation using Google Forms \u0026amp; Kotlin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003ecanonicalUrl \u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttps://tech.instacart.com/free-hackathon...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eShould my company or Medium ever decide to bring my content down, I can remove the \u003ccode\u003ecanonical_url\u003c/code\u003e reference from the top of my post and rest peacefully knowing that my content will always be available here.\u003c/p\u003e\n\u003ch2 id=\"alternate-urls-aliases\"\u003eAlternate URLs (aliases)\u003c/h2\u003e\n\u003cp\u003eWouldn\u0026rsquo;t it be nice if I could link to the same blog post with easier slugs or URLs? I find the slug or title of a blog post limiting at times. Here\u0026rsquo;s an example:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ehttps://kau.sh/blog/jekyll-footnote-tufte-sidenote/\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis works if you\u0026rsquo;re pasting a hyper link. But when i\u0026rsquo;m talking to folks, I\u0026rsquo;d like to be able to say \u0026ldquo;hey! go to my blog and add \u003ccode\u003e/sidenotes\u003c/code\u003e to check that feature out\u0026rdquo;.  Now try these URLs out:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://kau.sh/blog/sidenotes/\"\u003ehttps://kau.sh/blog/sidenotes/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://kau.sh/blog/sn/\"\u003ehttps://kau.sh/blog/sn/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI had to build this feature custom with Jekyll but Hugo again has it built in as \u0026ldquo;aliases\u0026rdquo;:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003etitle\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eJekyll footnotes as Edward Tufte inspired sidenotes\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003elayout\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003epost\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003ealiases\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#ae81ff\"\u003e/sn/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#ae81ff\"\u003e/sidenotes/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThink of this feature as a \u003ccode\u003ebitly\u003c/code\u003e or link shortener for your blog!\u003c/p\u003e\n\u003ch2 id=\"draft-badges\"\u003eDraft badges\u003c/h2\u003e\n\u003cp\u003eHugo natively supports the draft feature pretty well.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-md\" data-lang=\"md\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etitle: Jekyll footnotes as Edward Tufte inspired sidenotes\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elayout: post\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edraft: true\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis draft post will only show up when you run the local server.\u003c/p\u003e\n\u003cp\u003eThis is great but my brother mentioned that when you start to accumulate a lot of drafts locally, it becomes confusing to differentiate between the published posts and local drafts. Wouldn’t it be nice if you had a “draft” badge of sorts to make the drafts jump out?\u003c/p\u003e\n\u003cp\u003eHenry at your service:\u003c/p\u003e\n\u003cfigure \u003e\n\n    \n        \n            \u003cimg src=\"/images/content/henry_drafts.webp\"\n                \n                \n                \n                \n            /\u003e\n\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003ch2 id=\"rss-feeds\"\u003eRSS feeds\u003c/h2\u003e\n\u003cp\u003eThis is one of the places where I feel Jekyll had an edge over Hugo. Jekyll generated well strucured atom feeds by default. Hugo\u0026rsquo;s RSS 2.0 feed was a tad bit limiting.\u003c/p\u003e\n\u003cp\u003eI spent a lot of time tweaking the RSS feeds to play nice so you should be covered with Henry in Hugo as well.\u003c/p\u003e\n\u003ch2 id=\"resources\"\u003eResources\u003c/h2\u003e\n\u003ch3 id=\"installation-instructions\"\u003eInstallation instructions\u003c/h3\u003e\n\u003cp\u003eYou can find \u003ca href=\"https://github.com/kaushikgopal/henry-hugo#getting-started\"\u003einstallation instructions on Github\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"reporting-bugsfeature-requestsquestions\"\u003eReporting bugs/Feature requests/questions\u003c/h3\u003e\n\u003cp\u003eIf you have noticed something off, want to ask questions or have bugs to file, please file them over in the \u003ca href=\"https://github.com/kaushikgopal/henry-hugo/issues\"\u003eGithub issues\u003c/a\u003e. I try to stay on top of that list.\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re not comfortable with Github you can hit me up on twitter \u003ca href=\"https://twitter.com/kaushikgopal\"\u003e@kaushikgopal\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"supporting-henry\"\u003eSupporting Henry\u003c/h3\u003e\n\u003cp\u003eI\u0026rsquo;m fortunate to have a job that pays me to do work that I love. I\u0026rsquo;m not in need of the financial assistance right now.\u003c/p\u003e\n\u003cp\u003eBut If you\u0026rsquo;re feeling generous please donate to a charity you believe in and send me a link. That\u0026rsquo;ll inspire me more than anything else to keep working on Henry.\u003c/p\u003e\n\u003ch3 id=\"do-you-use-henry\"\u003eDo you use Henry?\u003c/h3\u003e\n\u003cp\u003eFeel free to \u003ca href=\"https://github.com/kaushikgopal/henry-hugo#henry-in-the-wild\"\u003eupdate this README.md\u003c/a\u003e if you use Henry. It\u0026rsquo;ll mean a lot to see Henry being used by creators in the wild.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eA set of tips and suggestions that help style web articles more legibly.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eI learnt this the hard way when the startup I worked for (Wedding Party) shuttered down. It had a burgeoning tech blog with a lot of my earliest Android content. We were acquihired and the domain had to be given away. Alas! My posts were gone. Never again, I thought to myself.\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "Introducing Henry for Jekyll",
        "date_published" : "2021-03-20T00:00:00-07:00",
        "id" : "https://kau.sh/blog/henry-jekyll-theme/",
        "file_path" : "blog/2021-03-20-henry-jekyll-theme/index.md",
        "url" : "https://kau.sh/blog/henry-jekyll-theme/",
        "content_html" : "\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"/images/content/henry.webp\"\n                \n                \n                \n                \n            /\u003e\n\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cdiv class='callout left'\u003e\n    Henry is a theme I first open-sourced for \u003ca href=\"http://jekyllrb.com/\"\u003eJekyll\u003c/a\u003e. I\u0026rsquo;ve now recreated \u003ca href=\"https://github.com/kaushikgopal/henry-hugo/\"\u003eHenry for Hugo\u003c/a\u003e after migrated this blog to Hugo. You can \u003ca href=\"https://kau.sh/blog/henry-hugo-theme/\"\u003eread about it here\u003c/a\u003e.\n\u003c/div\u003e\n\u003cp\u003eI\u0026rsquo;ve used Jekyll as my blog engine here and meticulously tweaked it over the years to support a bunch of features. Many folks have asked me if I would ever put my theme up for sale or distribute it more widely.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;m happy to announce that it\u0026rsquo;s now available for free and \u003ca href=\"https://github.com/kaushikgopal/henry-jekyll\"\u003eopen source\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIntroducing \u003ca href=\"https://github.com/kaushikgopal/henry-jekyll\"\u003eHenry\u003c/a\u003e - a \u003ca href=\"https://github.com/jekyll/\"\u003eJekyll\u003c/a\u003e theme with a gorgeous reading experience, chock-full of features.\u003c/p\u003e\n\u003ch1 id=\"features\"\u003eFeatures\u003c/h1\u003e\n\u003ch2 id=\"customizability\"\u003eCustomizability\u003c/h2\u003e\n\u003cp\u003eA blog theme is only useful if it is versatile enough to reflect your unique character and touch. Henry is \u003cstrong\u003eextremely\u003c/strong\u003e customizable.\u003c/p\u003e\n\u003cp\u003eWith simple \u003ccode\u003escss\u003c/code\u003e override files you can customize the entire look of your blog. I\u0026rsquo;ve made sure the overrides get layered in, on top of Henry\u0026rsquo;s base CSS making it easy to quickly add your own customizations. Take a look:\u003c/p\u003e\n\u003cvideo  controls \n        width=\"100%\"\n        autoplay \n        muted \n        loop \n        playsinline\u003e\n    \u003csource src=\"/videos/content/henry_customization.mp4\" type=\"video/mp4\"\u003e\n  \u003cspan\u003e\u003c/span\u003e\n\u003c/video\u003e\n\u003cp\u003eTo see a demo of the difference, compare \u003ca href=\"https://kau.sh/blog\"\u003ethis blog\u003c/a\u003e (what you\u0026rsquo;re currently reading) with my \u003ca href=\"https://karthickg.com/blog\"\u003ebrother\u0026rsquo;s\u003c/a\u003e. Both use Henry.\u003c/p\u003e\n\u003cp\u003eYou can push the boundaries by adding independent pages and nifty scripting. Take a look at this sample \u003ca href=\"https://karthickg.com/blog/portfolio/\"\u003eportfolio\u003c/a\u003e page I\u0026rsquo;ve started building for my brother\u0026rsquo;s blog\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003ch2 id=\"footsidenotes\"\u003e\u003cdel\u003eFoot\u003c/del\u003eSidenotes\u003c/h2\u003e\n\u003cp\u003eI picked this feature up from Tufte CSS\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e - inspired by the legendary Edward Tufte.\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re reading this post on a wide screen you should notice the sidenote tips above. Go ahead and hover your cursor over it to see the sidenote highlighted. If you\u0026rsquo;re on a narrower screen (or phone) the sidenote morphs into a traditional footnote with quick jump links.\u003c/p\u003e\n\u003cp\u003eYou can read more about this feature and its implementation in this \u003ca href=\"../sidenotes/\"\u003eblog post\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"image-display\"\u003eImage display\u003c/h2\u003e\n\u003cp\u003eWith Henry, you can display images in a variety of ways.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-md\" data-lang=\"md\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e![](/assets/img/lawsofux.webp)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cfigure class=\"callout\"\u003e\n\n    \n        \n            \u003cimg src=\"/images/content/henry_image_lawsofux.webp\"\n                class=\"callout\"\n                \n                \n                \n            /\u003e\n\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eOr use HTML directly with customized css tags:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026lt;\u003cspan style=\"color:#f92672\"\u003eimg\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eclass\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;tac\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esrc\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/assets/img/lawsofux.webp\u0026#34;\u003c/span\u003e /\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sass\" data-lang=\"sass\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e//\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003eAdded\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003ethis\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003eto\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003emy\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003emain_override\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003e.scss\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003efile\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e.tac\u003c/span\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e \u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e \u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003emargin\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eauto\u003c/span\u003e \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cfigure class=\"callout\"\u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"/images/content/henry_image_lawsofux.webp\"\n                class=\"callout\"\n                \n                    alt=\"Von Restroff Effect\"\n                \n                \n                \n            /\u003e\n\n            \n            \u003cfigcaption\u003e\n                \n\n                \n                        \n\n                        \n                            \n                            \n                            \u003ca class=\"center\" href=\"https://lawsofux.com/von-restorff-effect/\"\u003e\n                            \n                        \n\n                                Courtesy: lawsofux\n\n                            \u003c/a\u003e\n                \n\n            \u003c/figcaption\u003e\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003chr\u003e\n\u003cp\u003eHenry comes with a beautiful \u0026ldquo;full-bleed\u0026rdquo; class:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026lt;\u003cspan style=\"color:#f92672\"\u003eimg\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eclass\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;full-bleed\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esrc\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;https://xxxx/63698/image.jpg\u0026#34;\u003c/span\u003e /\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cfigure class=\"full-bleed\"\u003e\n\n    \n        \n            \u003cimg src=\"https://assets.atlasobscura.com/article_images/lg/63698/image.jpg\"\n                class=\"full-bleed\"\n                \n                    alt=\"Japanese Manhole Art\"\n                \n                \n                \n            /\u003e\n\n            \n            \u003cfigcaption\u003e\n                \n\n                \n                        \n\n                        \n                            \n                            \u003ca href=\"https://www.atlasobscura.com/articles/japanese-manhole-covers\"\u003e\n                            \n                        \n\n                                Atlas Obscura\n\n                            \u003c/a\u003e\n                \n\n            \u003c/figcaption\u003e\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003ch2 id=\"related-posts\"\u003eRelated posts\u003c/h2\u003e\n\u003cp\u003eAll the way at the bottom of this post, you\u0026rsquo;ll notice a \u0026ldquo;related posts\u0026rdquo; section. In there, I\u0026rsquo;d like to show you more blog posts on the same topic that you might find interesting. Other blog engines have plugins that run inscrutable algorithms to come up with such a list. Sometimes it works, while other times it\u0026rsquo;s embarrassingly wrong.\u003c/p\u003e\n\u003cp\u003eI wanted to make the linking and relevance logic simpler. With Henry you simply add relevant tags for a blog post in its header:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003elayout\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003epost\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003etitle\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Introducing Henry - a Jekyll theme\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003etags\u003c/span\u003e: [\u003cspan style=\"color:#ae81ff\"\u003ejekyll, blogging]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow Henry will search for similar blog posts that have the tag \u0026ldquo;jekyll\u0026rdquo; or \u0026ldquo;blogging\u0026rdquo; and show them in the related section. It\u0026rsquo;s that simple.\u003c/p\u003e\n\u003ch2 id=\"external-urls-daring-fireball-style\"\u003eExternal URLs (Daring Fireball style)\u003c/h2\u003e\n\u003cp\u003eJohn Gruber of \u003ca href=\"https://daringfireball.net/\"\u003eDaring Fireball\u003c/a\u003e fame pioneered a style of blogging where you share an interesting link to another website but add commentary to the post giving it more context.\u003c/p\u003e\n\u003cvideo  controls \n        width=\"100%\"\n        autoplay \n        muted \n        loop \n        playsinline\u003e\n    \u003csource src=\"./henry_dflink.mp4\" type=\"video/mp4\"\u003e\n  \u003cspan\u003e\u003c/span\u003e\n\u003c/video\u003e\n\u003cp\u003eThe \u003ccode\u003e»\u003c/code\u003e points you directly to the external website while clicking the primary title takes you to your own post containing the commentary.\u003c/p\u003e\n\u003cp\u003eAdd an \u003ccode\u003eexternal_url\u003c/code\u003e to the top of your post and Henry takes care of everything.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003elayout\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003epost\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003etitle\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Fragmented Podcast - Episode #2 : Android Studio\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eexternalLink\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttp://fragmentedpodcast.com/episodes/2/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"canonical-urls\"\u003eCanonical URLs\u003c/h2\u003e\n\u003cp\u003eSometimes I write blog posts for my company\u0026rsquo;s tech blog or a Medium account. If I want to give the post additional lift and surface it to my own followers, I like to additionally post the content to my own blog here. It\u0026rsquo;s good idea to always have your content hosted at a place that you own and control\u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003cp\u003eBut you have to be a little careful about copy pasting content in more than one place on the internet, cause Google might ding your search engine ranking for duplicating content. The kosher way to do this is using \u0026ldquo;canonical urls\u0026rdquo;.\u003c/p\u003e\n\u003cp\u003eWith Henry, I can now copy paste the content from elsewhere, add the canonical url in my post and have it attributed correctly.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003elayout\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003epost\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003etitle\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eHackathon vote tabulation using Google Forms \u0026amp; Kotlin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003ecanonical_url\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttps://tech.instacart.com/free-hackathon...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eShould the other place decide to bring my content down, I can remove the \u003ccode\u003ecanonical_url\u003c/code\u003e reference and rest peacefully knowing that my content will always be available here.\u003c/p\u003e\n\u003ch2 id=\"alternate-urls\"\u003eAlternate URLs\u003c/h2\u003e\n\u003cp\u003eWouldn\u0026rsquo;t it be nice if I could link to the same blog post with easier slugs or URLs? I find the slug or title of a blog post limiting at times. Here\u0026rsquo;s an example:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ehttps://kau.sh/blog/jekyll-footnote-tufte-sidenote/\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis works if you\u0026rsquo;re pasting a hyper link. But when i\u0026rsquo;m talking to folks, I\u0026rsquo;d like to be able to say \u0026ldquo;hey! go to my blog and add \u003ccode\u003e/sidenotes\u003c/code\u003e to check that feature out\u0026rdquo;.  Now try these URLs out:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ehttps://kau.sh/blog/sidenotes/\nhttps://kau.sh/blog/sn/\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThey all redirect to my original post. This is how I get that done with Henry:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003etitle\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eJekyll footnotes as Edward Tufte inspired sidenotes\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003elayout\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003epost\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003ealiases\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#ae81ff\"\u003e/sn/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#ae81ff\"\u003e/sidenotes/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThink of this feature as a \u003ccode\u003ebitly\u003c/code\u003e or link shortener for your blog!\u003c/p\u003e\n\u003ch2 id=\"draft-badges\"\u003eDraft badges\u003c/h2\u003e\n\u003cp\u003eJekyll natively supports \u003ca href=\"https://jekyllrb.com/docs/posts/#drafts\"\u003e\u0026ldquo;drafts\u0026rdquo;\u003c/a\u003e - posts that are work in progress or still in the ideas phase.\u003c/p\u003e\n\u003cp\u003eYou put them in a special \u003ccode\u003e_drafts\u003c/code\u003e folder and those draft posts only show up when you launch your server locally. But they will never get published to \u0026ldquo;production\u0026rdquo; or your public website.\u003c/p\u003e\n\u003cp\u003eThis is great but my brother mentioned that when you start to accumulate a lot of drafts locally, it becomes confusing to differentiate between the published posts and local drafts. Wouldn\u0026rsquo;t it be nice if you had a \u0026ldquo;draft\u0026rdquo; badge of sorts to make the drafts jump out?\u003c/p\u003e\n\u003cp\u003eHenry at your service:\u003c/p\u003e\n\u003cfigure \u003e\n\n    \n        \n            \u003cimg src=\"/images/content/henry_drafts.webp\"\n                \n                \n                \n                \n            /\u003e\n\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003ch2 id=\"quick-setup\"\u003eQuick setup\u003c/h2\u003e\n\u003cp\u003eA common complaint against Jekyll is that it can take time to get up and running with the right set of gems and ruby installations.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;ve created \u003ca href=\"https://www.docker.com/resources/what-container\"\u003eDocker containers\u003c/a\u003e for Henry that allow you to get up and running pretty quickly on any machine\u003csup id=\"fnref:4\"\u003e\u003ca href=\"#fn:4\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e4\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eYou also get a bunch of other quality of life (blogging) improvements like live reload and browser refresh, single command to launch locally or deploy to your server.\u003c/p\u003e\n\u003cp\u003eDetailed instructions are in the \u003ca href=\"https://github.com/kaushikgopal/henry-jekyll#getting-started\"\u003eGithub README\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"rss-feeds\"\u003eRSS feeds\u003c/h2\u003e\n\u003cp\u003eTack on \u003ccode\u003e/feed.xml\u003c/code\u003e to the end of your blog url and you have an atom feed generated.\u003c/p\u003e\n\u003cp\u003eHenry comes configured with the \u003ca href=\"https://github.com/jekyll/jekyll-feed\"\u003ejekyll-feed\u003c/a\u003e plugin for easy use. It allows a plethora of customizations like custom feeds for categories, post limits and \u003ca href=\"https://github.com/jekyll/jekyll-feed#usage\"\u003emany others\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"resources\"\u003eResources\u003c/h2\u003e\n\u003ch3 id=\"reporting-bugs\"\u003eReporting bugs\u003c/h3\u003e\n\u003cp\u003eIf you have noticed something off or have bugs to file, please file them as \u003ca href=\"https://github.com/kaushikgopal/henry-jekyll/issues\"\u003eGithub issues\u003c/a\u003e. I try to stay on top of that list.\u003c/p\u003e\n\u003ch3 id=\"feature-requests-or-questions\"\u003eFeature requests or questions\u003c/h3\u003e\n\u003cp\u003eWant to know if Henry can support a feature, or will support one? Please use the \u003ca href=\"https://github.com/kaushikgopal/henry-jekyll/discussions\"\u003eGithub discussions page\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re not comfortable with Github you can hit me up \u003ca href=\"https://twitter.com/kaushikgopal\"\u003e@kaushikgopal\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"supporting-henry\"\u003eSupporting Henry\u003c/h3\u003e\n\u003cp\u003eI\u0026rsquo;m fortunate to have a job that pays me to do work that I love. I\u0026rsquo;m not in need of the financial assistance right now.\u003c/p\u003e\n\u003cp\u003eBut If you\u0026rsquo;re feeling generous please donate to a charity you believe in and send me a link. That\u0026rsquo;ll inspire me more than anything else to keep working on Henry.\u003c/p\u003e\n\u003ch3 id=\"do-you-use-henry\"\u003eDo you use Henry?\u003c/h3\u003e\n\u003cp\u003eFeel free to \u003ca href=\"https://github.com/kaushikgopal/henry-jekyll/blob/main/README.md#henry-in-the-wild\"\u003eupdate this README.md\u003c/a\u003e if you use Henry. It\u0026rsquo;ll mean a lot to see Henry being used by creators in the wild.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eHe\u0026rsquo;s one of the sharpest product people I know and is currently on the market. Hit him up if you\u0026rsquo;re interested.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eA set of tips and suggestions that help style web articles more legibly.\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003eI learnt this the hard way when the startup I worked for (Wedding Party) shuttered down. It had a burgeoning tech blog with a lot of my earliest Android content. We were acquihired and the domain had to be given away. Alas! My posts were gone. Never again, I thought to myself.\u0026#160;\u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:4\"\u003e\n\u003cp\u003eNo more worrying about installing the right version of Ruby or Jekyll or a specific gem.\u0026#160;\u003ca href=\"#fnref:4\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "How to rate a movie",
        "date_published" : "2021-01-17T00:00:00-07:00",
        "id" : "https://kau.sh/blog/movie-rating-system/",
        "file_path" : "blog/2021-01-17-movie-rating-system/index.md",
        "url" : "https://kau.sh/blog/movie-rating-system/",
        "content_html" : "\u003cp\u003eGiven how many movies and TV shows we\u0026rsquo;ve been watching these days, it\u0026rsquo;s useful to have a personal rating system. I\u0026rsquo;ve used and tweaked this scale over time and it\u0026rsquo;s worked pretty well for me.\u003c/p\u003e\n\u003ch1 id=\"how-to-use-this-system\"\u003eHow to use this system\u003c/h1\u003e\n\u003cp\u003eThe scale ranges from 0-5\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e but coming up with a specific number off the top of your head is tricky. That\u0026rsquo;s where the associated descriptions comes in handy.\u003c/p\u003e\n\u003cp\u003eConsider a movie and see if \u003cem\u003ehow you feel about the movie\u003c/em\u003e, matches with the associated descriptions. I\u0026rsquo;ve found that by asking these same set of questions it\u0026rsquo;s easier to rate movies more consistently.\u003c/p\u003e\n\u003cp\u003eThe idea here is to bring consistency in the way \u003cem\u003eyou\u003c/em\u003e rate movies. Different folks have different tastes so don\u0026rsquo;t expect a 4 on your scale to match with a 4 on somebody else\u0026rsquo;s.\u003c/p\u003e\n\u003cp\u003eBut if more folks start to get consistent with their rating, it\u0026rsquo;s easier to identify those with similar tastes and ask them for their recommendations\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003ch1 id=\"rating-system\"\u003eRating system\u003c/h1\u003e\n\u003ch2 id=\"05\"\u003e0.5\u003c/h2\u003e\n\u003cp\u003eThis movie doesn\u0026rsquo;t exist to me. It\u0026rsquo;s so bad that I will not even mention its existence to other people.\u003c/p\u003e\n\u003ch2 id=\"1-bad\"\u003e1 (bad)\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eI watched this movie and I regret it.\u003c/li\u003e\n\u003cli\u003eI feel like I\u0026rsquo;ve been robbed off my time.\u003c/li\u003e\n\u003cli\u003eI don\u0026rsquo;t recommend anyone watch it.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2-meh\"\u003e2 (meh)\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eI watched this movie.\u003c/li\u003e\n\u003cli\u003eI don\u0026rsquo;t regret it per say.\u003c/li\u003e\n\u003cli\u003eBut I wouldn\u0026rsquo;t recommend to anyone else.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"3-like\"\u003e3 (like)\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThis movie was decent and I\u0026rsquo;m glad I watched it.\u003c/li\u003e\n\u003cli\u003eIt deserves to be watched at least once, so I would recommend this to others.\u003c/li\u003e\n\u003cli\u003eBut I personally wouldn\u0026rsquo;t watch this movie all over again.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"4-really-like\"\u003e4 (really like)\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThis movie was really good.\u003c/li\u003e\n\u003cli\u003eThis would go in my list of recommended movies for the year.\u003c/li\u003e\n\u003cli\u003eHeck, I\u0026rsquo;d like to watch this movie again sometime.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"45-amazing\"\u003e4.5 (amazing)\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThis move was so good that I want to buy a copy of it.\u003c/li\u003e\n\u003cli\u003eI would sit my friends down and watch this movie again with them.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"5-flawless\"\u003e5 (flawless)\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThis movie is a work of art and essential watching for our age.\u003c/li\u003e\n\u003cli\u003eI want to see the director\u0026rsquo;s cut so I can enjoy it more.\u003c/li\u003e\n\u003cli\u003eEvery one should watch this movie at least once in their lifetime.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"lets-try-this-on-a-couple-of-movies\"\u003eLet\u0026rsquo;s try this on a couple of movies:\u003c/h2\u003e\n\u003ch3 id=\"wonder-woman-1984httpsenwikipediaorgwikiwonder_woman_1984--2\"\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Wonder_Woman_1984\"\u003eWonder Woman 1984\u003c/a\u003e : 2\u003c/h3\u003e\n\u003cfigure \u003e\n\n    \n        \n            \u003cimg src=\"ww84.png\"\n                \n                \n                    alt=\"Wonder Woman 1984\"\n                \n                width=\"250\"\n                \n            /\u003e\n\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eI watched the highly anticipated Wonder Woman as it debuted on HBO Max. I don\u0026rsquo;t regret watching it but I wouldn\u0026rsquo;t recommend it to anyone. You could spend that time watching a much better movie instead.\u003c/p\u003e\n\u003ch3 id=\"the-midnight-skyhttpsenwikipediaorgwikithe_midnight_sky--25\"\u003e\u003ca href=\"https://en.wikipedia.org/wiki/The_Midnight_Sky\"\u003eThe Midnight Sky\u003c/a\u003e : 2.5\u003c/h3\u003e\n\u003cfigure \u003e\n\n    \n        \n            \u003cimg src=\"https://upload.wikimedia.org/wikipedia/en/3/35/The_Midnight_Sky_poster.png\"\n                \n                \n                    alt=\"The Midnight Sky\"\n                \n                width=\"250\"\n                \n            /\u003e\n\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eI watched this movie cause Netflix pushed it as one of their most watched movie for 2020\u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e. I wasn\u0026rsquo;t terribly impressed.\u003c/p\u003e\n\u003cp\u003eMy first response to the movie was a resounding meh! I wouldn\u0026rsquo;t go around recommending this movie to my friends but I don\u0026rsquo;t regret watching it. So we\u0026rsquo;re off to a solid 2 again.\u003c/p\u003e\n\u003cp\u003eI will say though if you have absolutely nothing else to watch and time on your hands then I wouldn\u0026rsquo;t \u003cem\u003enot\u003c/em\u003e recommend it. Since I\u0026rsquo;m feeling generous I\u0026rsquo;d bump this movie to a 2.5.\u003c/p\u003e\n\u003ch3 id=\"golden-eyehttpsenwikipediaorgwikigoldeneye--3\"\u003e\u003ca href=\"https://en.wikipedia.org/wiki/GoldenEye\"\u003eGolden Eye\u003c/a\u003e : 3\u003c/h3\u003e\n\u003cfigure \u003e\n\n    \n        \n            \u003cimg src=\"https://image.tmdb.org/t/p/w500/bFzjdy6ucvNlXmJwoSoYfufV6lP.jpg\"\n                \n                \n                    alt=\"Golden Eye\"\n                \n                width=\"250\"\n                \n            /\u003e\n\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eThis was my first Bond movie on the big screen so there\u0026rsquo;s definitely a strong sense of nostalgia here. Compared to the other Brosnan Bond movies, I\u0026rsquo;d say this stands out as one of the better ones.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t know if I\u0026rsquo;d go back and watch this whole movie again but I\u0026rsquo;m glad I saw it and wouldn\u0026rsquo;t mind recommending this to folks trying to catch up on their Bond history.\u003c/p\u003e\n\u003ch3 id=\"oceans-11httpsenwikipediaorgwikiocean27s_eleven--4\"\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Ocean%27s_Eleven\"\u003eOcean\u0026rsquo;s 11\u003c/a\u003e : 4\u003c/h3\u003e\n\u003cfigure \u003e\n\n    \n        \n            \u003cimg src=\"https://image.tmdb.org/t/p/w500/v5D7K4EHuQHFSjveq8LGxdSfrGS.jpg\"\n                \n                \n                    alt=\"Golden Eye\"\n                \n                width=\"250\"\n                \n            /\u003e\n\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eI love a good heist movie and Ocean\u0026rsquo;s 11 definitely redefined the genre. If this movie is running on cable or TV, I\u0026rsquo;d probably just land up watching it again. This is the kind of movie I\u0026rsquo;d catch myself YouTubing for clips now and then but I don\u0026rsquo;t think I would go so far as to buy myself a copy\u003csup id=\"fnref:4\"\u003e\u003ca href=\"#fn:4\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e4\u003c/a\u003e\u003c/sup\u003e. It\u0026rsquo;s exactly what I would deem a 4 in my books.\u003c/p\u003e\n\u003ch3 id=\"spider-man--into-the-spider-versehttpsenwikipediaorgwikispider-man_into_the_spider-verse--45\"\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Spider-Man:_Into_the_Spider-Verse\"\u003eSpider Man : Into the Spider Verse\u003c/a\u003e : 4.5\u003c/h3\u003e\n\u003cfigure \u003e\n\n    \n        \n            \u003cimg src=\"https://upload.wikimedia.org/wikipedia/en/blog/b8/Spider-Man_Into_the_Spider-Verse_%282018_poster%29.png\"\n                \n                \n                    alt=\"Spider Man : Into the Spider Verse\"\n                \n                width=\"250\"\n                \n            /\u003e\n\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eAs soon as I watched this movie in the theater, I came back and pre-ordered a digital copy. So I knew we\u0026rsquo;re off to a strong 4.5\u003csup id=\"fnref:5\"\u003e\u003ca href=\"#fn:5\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e5\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003cp\u003eIf my friends haven\u0026rsquo;t watched this movie already (owing to preconceptions about it being a movie just for kids - superhero cartoons and all) this is the first movie I make them watch. Maps to how I feel about 4.5 movies.\u003c/p\u003e\n\u003ch3 id=\"whiplashhttpsenwikipediaorgwikiwhiplash_2014_film--5\"\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Whiplash_(2014_film)\"\u003eWhiplash\u003c/a\u003e : 5\u003c/h3\u003e\n\u003cfigure \u003e\n\n    \n        \n            \u003cimg src=\"https://upload.wikimedia.org/wikipedia/en/0/01/Whiplash_poster.jpg\"\n                \n                \n                    alt=\"Whiplash\"\n                \n                width=\"250\"\n                \n            /\u003e\n\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eI get goosebumps every time I watch this movie. I love music so I might be a little biased but that\u0026rsquo;s how it works on my scale. The acting, the editing, the cinematography, the color grading. The editing is so tight in this movie that it makes you feel like you\u0026rsquo;re watching a boxing match. One for the ages!\u003c/p\u003e\n\u003cdiv class='callout center'\u003e\n    Try this scale out the next time you watch a movie and let me know what you think!\n\u003c/div\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003emostly because Netflix (in the early days) and some other popular recommendation systems like MovieLens use this range. Multiply by 2 if you need a scale of 10.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eI generally recommend movies \u0026gt;= 3 to my friends and it\u0026rsquo;s worked out pretty well.\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003eand of course it had George Clooney.\u0026#160;\u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:4\"\u003e\n\u003cp\u003e\u0026hellip; in theory. I bought the entire Ocean\u0026rsquo;s set when it was sale on a Cyber Monday deal.\u0026#160;\u003ca href=\"#fnref:4\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:5\"\u003e\n\u003cp\u003eI want to point out - there exists 4.5 movies that I haven\u0026rsquo;t bought a copy of. So don\u0026rsquo;t take this as a rule but more a strong indicator.\u0026#160;\u003ca href=\"#fnref:5\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "2021",
        "date_published" : "2021-01-01T00:00:00-07:00",
        "id" : "https://kau.sh/blog/2021/",
        "file_path" : "blog/2021-01-01-2021.md",
        "url" : "https://kau.sh/blog/2021/",
        "content_html" : "\u003cp\u003eFrom my \u003ca href=\"../2020\"\u003e2020\u003c/a\u003e post:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e2019 has been the year that’s primed me the most for life changes. I imagine 2020 will the be the one where a lot of these changes materialize.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u0026hellip; that\u0026rsquo;s cute.\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re reading this in the future and suprised why, I suggest this \u003ca href=\"https://www.netflix.com/title/81332175\"\u003eNetflix mockumentary\u003c/a\u003e. \u003ca href=\"https://www.imdb.com/title/tt1598778/\"\u003eContagion\u003c/a\u003e style blazing dumpster fire year aside, it’s been hard to find the motivation to write this post. But reading my \u003ca href=\"/categories/#new-year\"\u003eprevious years’ posts\u003c/a\u003e, I’m usually grateful past me took the time to capture my thinking, priorities and general frame of reference.\u003c/p\u003e\n\u003cp\u003eSo power on, I shall.\u003c/p\u003e\n\u003ch1 id=\"2020-recap\"\u003e2020 Recap:\u003c/h1\u003e\n\u003ch2 id=\"fragmented\"\u003eFragmented\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://fragmentedpodcast.com/\"\u003eFragmented\u003c/a\u003e remains my proudest labor of love but I’m not kidding about the labor part of this statement. We\u0026rsquo;re taking it much slower on Fragmented releasing as and when, our lives allow us. But with 2021 rolling around, the hope is that we can kick things back up atleast from the current dormancy. Stay tuned.\u003c/p\u003e\n\u003ch2 id=\"jklgg\"\u003ejkl.gg\u003c/h2\u003e\n\u003cp\u003eLot of changes here. I moved my primary domain and assets from kaush.co\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e to jkl.gg.\u003c/p\u003e\n\u003cp\u003eThis blog saw a lot of tweaks and customizations. The joke goes: most people with custom blog setups spend more time customizing their blog than writing posts. This was true for me but I actually enjoy the process of customizing my blog. In addition to (pleasantly) reminding me of my WebDev days, it also helps me learn and understand my UX skills better.\u003c/p\u003e\n\u003cp\u003ePosts like the \u003ca href=\"../sidenotes/\"\u003eone I wrote on sidenotes\u003c/a\u003e\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e come from this process. Another change that was probably not evident was the entire CSS refactor of this blog. A lot of \u003ccode\u003edisplay:grid\u003c/code\u003e is now being used. No post on this but in the process of this refactor, I\u0026rsquo;ve actually started work on a minimal jekyll theme for podcasts \u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003ch2 id=\"mechanical-keyboards-and-hacking\"\u003eMechanical keyboards and hacking\u003c/h2\u003e\n\u003cp\u003eProductivity has always been a theme for this blog. This year I played (and spent) a lot with Mechanical Keyboards. It was a fun experiment, learning to flash and customize keyboards. Eventually settled with \u003ca href=\"../hacking-your-keyboard/\"\u003etricking out existing apple keyboards\u003c/a\u003e with karabiner and goku.\u003c/p\u003e\n\u003ch2 id=\"lot-of-tv\"\u003eLot of TV\u003c/h2\u003e\n\u003cp\u003eI watched a lot of TV. This is more than my usual self, which is to say a \u003cem\u003eheck of a lot\u003c/em\u003e more TV. As someone who\u0026rsquo;s known in friend circles as the guy who watches a lot of TV, obviously I\u0026rsquo;m asked for recommendations all the time.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;ve spent a lot of time in the process looking at Movie recommendation services and just rating systems in general. I plan to write a lot about that this year.\u003c/p\u003e\n\u003ch1 id=\"random-learnings-from-2020\"\u003eRandom learnings from 2020\u003c/h1\u003e\n\u003cp\u003e\u003ca href=\"https://rachelbythebay.com/w/2020/02/09/horizonta/\"\u003eBlog post on the Dangers of shipping software at the last minute\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHeroes don\u0026rsquo;t fall from the sky. They\u0026rsquo;re just ordinary people who step forward\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://castro.fm/episode/zuYUjM#12:48\"\u003eEpisode of The Daily\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eKatz: \u0026hellip;and one thing that always stuck with me is how persuadable @dhh was when presented with actual solutions that people created to solve actual problems they encountered in real apps.\u003c/p\u003e\n\u003cp\u003eDHH: SHOW ME THE BEFORE/AFTER CODE! It reduces all these abstract debates to the realm of the concrete. 80% of disagreements disappear when you look at real code vs make-believe arguments\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://twitter.com/wycats/status/1229807579380899840?s=21\"\u003eYehuda Katz\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e“They made their own clouds, brings to mind the people who built the great Gothic cathedrals. Knowing they’d be long dead before their work was finished, trusting their great-grandchildren would lay the final stones. We’ve lost that kind of generational thinking on Earth. Here, you see it in everything they do.”\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe Expanse Season 4 Episode 2\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWe operate at the whim of this world\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJoe MacNally\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAdapt what is useful, reject what is useless, and add what is specifically your own.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBruce Lee courtesy \u003ca href=\"https://twitter.com/artishevskym/status/1231283086907858944?s=21\"\u003ethis tweet\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEven, when I\u0026rsquo;m disappointing you, I will tell you honestly why\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://inessential.com/2020/03/13/on_alternate_app_icons_for_netnewswire_f\"\u003eBrent Simmons\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch1 id=\"parting-thoughts\"\u003eParting thoughts\u003c/h1\u003e\n\u003cp\u003eRecuperate, Regroup and Resume. Let that be the chanting slogan.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003ekaush.co still redirects here.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eread this post on a browser if you\u0026rsquo;re on RSS.\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003eFragmented probably won\u0026rsquo;t use this but a newer podcast I\u0026rsquo;m helping get started, might 🤫.\u0026#160;\u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "iPhones, Pixels and lazy Android developers",
        "date_published" : "2020-09-06T00:00:00-07:00",
        "id" : "https://kau.sh/blog/iphones-pixels-lazy-android-developers/",
        "file_path" : "blog/2020-09-06-iphones-pixels-lazy-android-developers.md",
        "url" : "https://kau.sh/blog/iphones-pixels-lazy-android-developers/",
        "content_html" : "\u003ch1 id=\"the-bentwits\"\u003eThe Bentwits\u003c/h1\u003e\n\u003cp\u003eSo Ben Thompson\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e recently\n\u003ca href=\"https://twitter.com/benthompson/status/1302185265524617217\"\u003etweeted\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI\u0026rsquo;ve been using Android for the last couple of weeks, and honestly, the core OS is pretty good!\u003c/p\u003e\n\u003cp\u003eThe big problem is that Android apps are garbage relative to iOS apps.\nIf developers actually care about pushing back against Apple they should give a damn. They don\u0026rsquo;t.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eHe then went on to attribute the garbage quality of Android apps to developer\nlaziness. This \u003cem\u003eunderstandably\u003c/em\u003e\n\u003ca href=\"https://twitter.com/ZacSweers/status/1302082690179629057?s=20\"\u003einfuriated\u003c/a\u003e some of us #AndroidDev\nunleashing the droid rage. To Ben\u0026rsquo;s credit, he has\n\u003ca href=\"https://twitter.com/benthompson/status/1302185265524617217?s=20\"\u003esince deleted\u003c/a\u003e\nthe specific tweet calling out developer laziness.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;m not going to spend time dissecting his tweets\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e. We are all human and\noccasionally tweet dumb things. But there\u0026rsquo;s a shred of truth nestled in that\nstarting tweet that just got me thinking.\u003c/p\u003e\n\u003ch1 id=\"iphone-vs-pixel\"\u003eiPhone vs Pixel\u003c/h1\u003e\n\u003cp\u003eSerendipitously, I\u0026rsquo;ve been\n\u003ca href=\"https://twitter.com/kaushikgopal/status/1298692928081027072?s=20\"\u003ethinking\u003c/a\u003e and \u003ca href=\"https://twitter.com/kaushikgopal/status/1298692084954587136?s=20\"\u003etweeting\u003c/a\u003e\nabout similar things \u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;ll summarize the obvious points so we can get those out of the way:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eiOS does better with \u003cstrong\u003eprivacy\u003c/strong\u003e overall. It\u0026rsquo;s \u003ca href=\"https://www.androidcentral.com/apple-may-have-ditched-encrypted-backups-google-hasnt\"\u003enot always a slam\ndunk\u003c/a\u003e\nbut all things considered the Android experience is\n\u003ca href=\"https://www.cnet.com/news/more-than-1000-android-apps-harvest-your-data-even-after-you-deny-permissions/\"\u003eworse\u003c/a\u003e on \u003ca href=\"https://media.ccc.de/v/35c3-9941-how_facebook_tracks_you_on_android/\"\u003ethis\u003c/a\u003e \u003ca href=\"https://news.ycombinator.com/item?id=15141077\"\u003efront\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eiPhone hardware is better than Pixel hardware especially when it comes to integration\nwith bluetooth accessories like the Apple Watch, AirPods, CarPlay etc.\u003c/li\u003e\n\u003cli\u003eCamera is dicey. \u003cem\u003eI think\u003c/em\u003e the Pixel shoots better still photos than the\niPhone. The computational photography voodoo that Google does on pictures\nafter the fact makes the photos more appealing to my eyes. iPhones still\nhave the better Camera (hardware) though which is abundantly clear when\nyou try to shoot videos.\u003c/li\u003e\n\u003cli\u003eSiri is a steaming pile of garbage. It\u0026rsquo;s a crying shame how bad it is given the\nbetter hardware. Google Assistant alone makes me switch back to my Pixel\ntime and again\u003csup id=\"fnref:4\"\u003e\u003ca href=\"#fn:4\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e4\u003c/a\u003e\u003c/sup\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eBut there\u0026rsquo;s one important point that came up from this imbroglio that\nhas been hard to shake off \u0026hellip;and wherein lies the more interesting argument:\u003c/p\u003e\n\u003ch1 id=\"which-phone-has-the-better-apps\"\u003eWhich phone has the better apps?\u003c/h1\u003e\n\u003cp\u003eIn my \u003ca href=\"https://twitter.com/kaushikgopal/status/1298692928081027072?s=20\"\u003eoriginal\ntweet\u003c/a\u003e I was\ncareful to say the iPhone has better \u0026ldquo;3rd party\u0026rdquo; apps.\u003c/p\u003e\n\u003cp\u003eHere\u0026rsquo;s a fair question to ask retorting that position: Give me examples of apps\nthat exist on both Android and iOS where the iOS experience is better?\u003c/p\u003e\n\u003cp\u003eSure, I can give examples\u003csup id=\"fnref:5\"\u003e\u003ca href=\"#fn:5\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e5\u003c/a\u003e\u003c/sup\u003e where it\u0026rsquo;s true most of the time but my point is\nsubtly different. If I rephrase that question however, it helps make my\npoint better:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGive me the best \u0026ldquo;insert category\u0026rdquo; app on the iPhone and on the Pixel. Which\none do you think works better?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eLet\u0026rsquo;s try that for a few categories:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eGive me the best Todo list app on the iPhone and Pixel. Which one do you think\nworks better? (See \u003ca href=\"https://culturedcode.com/things/\"\u003eThings\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eGive me the best RSS feed reader app on the iPhone and Pixel. Which one do you\nthink works better? (See \u003ca href=\"https://reederapp.com/\"\u003eReeder\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eGive me the best music making app on the iPhone and Pixel. Which one do you think\nworks better? (See \u003ca href=\"https://www.apple.com/ios/garageband/\"\u003eGarageBand\u003c/a\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSome will immediately jump in defense saying this is subjective.\u003c/p\u003e\n\u003cp\u003eSure\u0026hellip; Maybe? I\u0026rsquo;m open to being challenged here. But I build Android apps for a\nliving and I mostly use an iPhone today as my daily driver, so take it for what\nthat\u0026rsquo;s worth. Also chatting with other (dev) friends, I\u0026rsquo;ve heard I\u0026rsquo;m not alone.\u003c/p\u003e\n\u003ch2 id=\"so-why-are-iphone-apps-better\"\u003eSo why are iPhone apps better?\u003c/h2\u003e\n\u003ch3 id=\"android-tools-are-worse\"\u003eAndroid Tools are worse?\u003c/h3\u003e\n\u003cp\u003eActually it\u0026rsquo;s the opposite! After dabbling with some iOS development, I can\nconfidently say Android Studio is \u003cdel\u003elike a glass of ice water\u003c/del\u003e much better\nthan Xcode\u003csup id=\"fnref:6\"\u003e\u003ca href=\"#fn:6\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e6\u003c/a\u003e\u003c/sup\u003e. I also think Google as a company listens more closely and cares\nabout improving the developer experience. Many of their recent changes have been\nin direct response to developer outcries.\u003c/p\u003e\n\u003cp\u003eHow many iOS developers can say the same of Apple?\u003c/p\u003e\n\u003ch3 id=\"android-devs-are-lazy\"\u003eAndroid devs are lazy?\u003c/h3\u003e\n\u003cp\u003eAbso-fucking-lutely not.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;d even go so far as to argue that Android\ndevelopers care way more about clean architecture and good engineering practices\nthan iOS developers. I mean I\u0026rsquo;m biased here but consider the fact that Android\ndevs are typically early adopters of industry best\npractices like \u003ca href=\"https://github.com/ReactiveX\"\u003eRx\u003c/a\u003e, MVI/Unidirectional State Flow,\nReactive UIs etc. You\u0026rsquo;ll find chatter, curiosity and first implementations\nabout these topics much earlier in the Android development community. But\nhere\u0026rsquo;s the rub:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eiOS devs didn\u0026rsquo;t have to care about these things.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"ios-devs-didnt-have-to-care\"\u003eiOS devs didn\u0026rsquo;t have to care\u003c/h3\u003e\n\u003cp\u003eYou want to know why Android devs jumped on Rx? Because every time you\nhang for a few extra seconds on the main thread you would get hit with a gnarly\n\u003ca href=\"https://developer.android.com/topic/performance/vitals/anr\"\u003eANR\u003c/a\u003e. iPhones were\nbuilt to make single threaded processing blazingly fast. You can execute\ndatabase calls on the main thread and not worry for the most part. Try that on\nan Android phone.\u003c/p\u003e\n\u003cp\u003eYou want to know why Android devs have heated week long discussions about\nDependency Injection and Dagger? Because we can\u0026rsquo;t use constructors in our\nclasses! iOS devs think we\u0026rsquo;re crazy cause our ViewControllers don\u0026rsquo;t just take in\nour dependencies.\u003c/p\u003e\n\u003cp\u003eYou want to know why Android devs experiment and come up with all kinds of\ndifferent architectures to build apps? Because Google for the longest time\nintentionally chose not to have an opinion. This changed in \u003cstrong\u003e2017\u003c/strong\u003e. You know\nhow long Android has been around? since 2005. 12 years, if you\u0026rsquo;re doing the math.\u003c/p\u003e\n\u003cp\u003eI also don\u0026rsquo;t need to reiterate the trope around Android being fragmented\u003csup id=\"fnref:7\"\u003e\u003ca href=\"#fn:7\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e7\u003c/a\u003e\u003c/sup\u003e. While\nwe would spend nights battling platform specific bugs, our iOS counterparts\ncould spend their time focusing on silky smooth UIs. They had the luxury of\nperfecting and polishing (and good on them for doing that). \u003ccode\u003eminSdk 14\u003c/code\u003e was\nnever a thing for iOS devs.\u003c/p\u003e\n\u003cp\u003eSo yes, we might have better tools courtesy Android Studio but make no mistake\nit is easier to build higher quality apps on iOS than it is on Android.\u003c/p\u003e\n\u003ch2 id=\"one-more-thing\"\u003eOne more thing\u003c/h2\u003e\n\u003cp\u003eThere\u0026rsquo;s also this other big factor that accounts for better third party apps:\niOS users are more willing to spend money through the app ecosystem. Android\nmay have the bigger market share today but \u003ca href=\"https://www.prnewswire.com/news-releases/iphone-users-spend-101-every-month-on-tech-purchases-nearly-double-of-android-users-according-to-a-survey-conducted-by-slickdeals-300739582.html?c=n\"\u003emore money is spent through iPhones\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIf iPhone users are willing to spend more money, companies \u003cstrong\u003eand\nindie developers\u003c/strong\u003e are going to spend more time and resources building iOS apps\ninstead of Android apps.  When more time and resources are spent instead on iOS\napps it follows that iOS is likely to have the better apps.\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s harder technically to build a better Android app but Google is doing its\npart to close that gap quickly. But unless Android users actually start\nspending more money through apps, iOS is going to have the lead.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eA journalist who is otherwise a very thoughtful and astute tech reporter.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eThis was a fleeting -i can\u0026rsquo;t sleep during corona so imma just tweet- oopsie. Definitely not one the finer Stratechery moments we\u0026rsquo;ve come to expect.\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003eThe Pixel experience is the best experience for Android. Yes, I know Samsung hardware can be pretty good. When a non-bastardized Android experience comes to Samsung, I\u0026rsquo;ll switch in a heartbeat.\u0026#160;\u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:4\"\u003e\n\u003cp\u003eand this is to a 3 year old Pixel 2. My Pixel 4A is coming end of this month.\u0026#160;\u003ca href=\"#fnref:4\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:5\"\u003e\n\u003cp\u003eand burn bridges with my good Android dev friends who work at these companies.\u0026#160;\u003ca href=\"#fnref:5\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:6\"\u003e\n\u003cp\u003eBoth Kotlin and Swift are amazing. So they have a negligible impact in this discussion.\u0026#160;\u003ca href=\"#fnref:6\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:7\"\u003e\n\u003cp\u003eHeck, I started a \u003ca href=\"https://fragmentedpodcast.com/\"\u003epodcast\u003c/a\u003e with the same name.\u0026#160;\u003ca href=\"#fnref:7\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "Technical leadership and glue work",
        "date_published" : "2020-08-28T00:00:00-07:00",
        "id" : "https://kau.sh/blog/leadership-and-glue-work/",
        "file_path" : "blog/2020-08-28-leadership-and-glue-work.md",
        "url" : "https://kau.sh/blog/leadership-and-glue-work/",
        "content_html" : "\u003cp\u003eIf you\u0026rsquo;re in tech and have been thinking about your work\nand role in your company, I highly encourage you to watch this talk by \u003ca href=\"https://twitter.com/whereistanya\"\u003eTanya\nReilly\u003c/a\u003e \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eSetting myself a reminder to rewatch this again 6 months from now.\u003c/em\u003e\u003c/p\u003e\n\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n  \u003ciframe src=\"https://www.youtube.com/embed/KClAPipnKqw\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" allowfullscreen title=\"YouTube Video\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eSuch a phenomenal speaker and powerful story telling! Follow her \u003ca href=\"https://twitter.com/whereistanya\"\u003e@whereistanya\u003c/a\u003e\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "Jekyll footnotes as Edward Tufte inspired sidenotes",
        "date_published" : "2020-07-21T00:00:00-07:00",
        "id" : "https://kau.sh/blog/jekyll-footnote-tufte-sidenote/",
        "file_path" : "blog/2020-07-21-jekyll-footnote-tufte-sidenote/index.md",
        "url" : "https://kau.sh/blog/jekyll-footnote-tufte-sidenote/",
        "content_html" : "\u003cp\u003eI\u0026rsquo;ve been looking into \u003ca href=\"https://edwardtufte.github.io/tufte-css/\"\u003eTufte\nCSS\u003c/a\u003e recently. Tufte CSS -inspired by\nthe teachings of the legendary Edward Tufte\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e- provides suggestions and\ntools to style web articles for improved legibility.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;ve started to incorporate some of those principles here while still trying to keep the authenticity of my original design. Most of these changes have been in the realm of CSS however the \u003ca href=\"https://edwardtufte.github.io/tufte-css/#sidenotes\"\u003esidenotes\u003c/a\u003e feature was a slightly trickier beast.\u003c/p\u003e\n\u003cdiv class='callout center'\u003e\n    I\u0026rsquo;ve implemented this feature in my blog theme \u0026ldquo;\u003ca href=\"https://kau.sh/blog/henry-hugo-theme/\"\u003eHenry\u003c/a\u003e\u0026rdquo; for both \u003ca href=\"https://github.com/kaushikgopal/henry-hugo\"\u003eHugo\u003c/a\u003e \u0026amp; \u003ca href=\"https://github.com/kaushikgopal/henry-jekyll\"\u003eJekyll\u003c/a\u003e.\n\u003c/div\u003e\n\u003cp\u003eJekyll kramdown comes built in with a \u003ca href=\"https://kramdown.gettalong.org/syntax.html#footnotes\"\u003efootnotes\nfeature\u003c/a\u003e that I\u0026rsquo;ve used here for some time. It works pretty well for the most part. The only problem though is -as the names suggests- it displays the notes all the way at the bottom of the articles near the footer.\u003c/p\u003e\n\u003cvideo  controls \n        width=\"100%\"\n        autoplay \n        muted \n        loop \n        playsinline\u003e\n    \u003csource src=\"./1_show_old_footnote.mp4\" type=\"video/mp4\"\u003e\n  \u003cspan\u003e\u003c/span\u003e\n\u003c/video\u003e\n\u003cp\u003eEdward Tufte instead suggests the use of \u0026ldquo;sidenotes\u0026rdquo;:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSidenotes are like footnotes, except they don’t force the reader to jump their eye to the bottom of the page, but instead display off to the side in the margin.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSo my objective was to use the existing kramdown pipes and generate the footnotes, but display them off to the side in the margin instead of at the bottom.\u003c/p\u003e\n\u003cp\u003ePulling this off is tricky with pure CSS but is baby talk for javascript. So I pulled out my trusty old jQuery\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e chops and got this fun side project done.\u003c/p\u003e\n\u003cdiv class='callout center'\u003e\n    You can find the \u003ca href=\"https://github.com/kaushikgopal/henry-hugo/blob/master/assets/js/sidenotes.js\"\u003ejs source code here\u003c/a\u003e.\n\u003c/div\u003e\n\u003cp\u003eAs is the case with these things though, the devil is in the details. I got the basic functionality down in about an hour but adding the finishing touches took more testing and improving. Here\u0026rsquo;s some of the ones I had to tackle:\u003c/p\u003e\n\u003ch2 id=\"image-loading-throws-the-position-off\"\u003eImage loading throws the position off:\u003c/h2\u003e\n\u003cp\u003eSince jQuery loads eagerly, it typically wouldn\u0026rsquo;t wait for the images to load\nbefore calculating the position. This would cause the position to be off\nsometimes.\u003c/p\u003e\n\u003cvideo  controls \n        width=\"100%\"\n        autoplay \n        muted \n        loop \n        playsinline\u003e\n    \u003csource src=\"./2_image_throws_off_position.mp4\" type=\"video/mp4\"\u003e\n  \u003cspan\u003e\u003c/span\u003e\n\u003c/video\u003e\n\u003cp\u003eThis is a one-line fix in jQuery:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e$\u003c/span\u003e(window).\u003cspan style=\"color:#a6e22e\"\u003eon\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;load\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// executes after everything in the DOM loads\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"resizing-the-browser-throws-position-off\"\u003eResizing the browser throws position off:\u003c/h2\u003e\n\u003cp\u003eSince most folks read blog posts on their phones and tablets these days, there\u0026rsquo;s\na much smaller chance they\u0026rsquo;re resizing their browser. But if you\u0026rsquo;re on a laptop\n(as I am most of the time) then resizing your browser will completely throw the\npositioning off again.\u003c/p\u003e\n\u003cvideo  controls \n        width=\"100%\"\n        autoplay \n        muted \n        loop \n        playsinline\u003e\n    \u003csource src=\"./3_resizing_throws_off_position.mp4\" type=\"video/mp4\"\u003e\n  \u003cspan\u003e\u003c/span\u003e\n\u003c/video\u003e\n\u003cp\u003eWhile there might exist more optimum solutions to fix this, I went with the\nsimpler approach of just detecting window resize changes and just reading the\nsidenotes again:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e$\u003c/span\u003e(window).\u003cspan style=\"color:#a6e22e\"\u003eresize\u003c/span\u003e(\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eloadSidenotes\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eww\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003e$fnli\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003efncount\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003e$fn\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e});\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eI try to optimize this a little by \u0026ldquo;caching\u0026rdquo; the previous size and only\nreloading the notes again if I detect a difference.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e$\u003c/span\u003e(window).\u003cspan style=\"color:#a6e22e\"\u003eresize\u003c/span\u003e(\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003enew_ww\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e$\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.wrapper\u0026#34;\u003c/span\u003e).\u003cspan style=\"color:#a6e22e\"\u003eouterWidth\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (\u003cspan style=\"color:#a6e22e\"\u003enew_ww\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e===\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eww\u003c/span\u003e) \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// console.log(\u0026#34; XXX -- RESIZE -- XXX \u0026#34;);\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eww\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003enew_ww\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e$\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.sidenote\u0026#34;\u003c/span\u003e).\u003cspan style=\"color:#a6e22e\"\u003eremove\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eloadSidenotes\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eww\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003e$fnli\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003efncount\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003e$fn\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e});\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAgain, this is probably not the most optimum solution but\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI don\u0026rsquo;t imagine people resizing their browser window that often\u003c/li\u003e\n\u003cli\u003ethere aren\u0026rsquo;t that many footnotes per post\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo I opted for a simpler more understandable solution (than a\nperformant one) - an important software engineering learning that hasn\u0026rsquo;t failed\nme so far.\u003c/p\u003e\n\u003cp\u003eI also realized that my responsive CSS needed some tweaks, so had to tighten\nthat up too.\u003c/p\u003e\n\u003ch2 id=\"remove-footnotes-from-the-bottom\"\u003eRemove footnotes from the bottom\u003c/h2\u003e\n\u003cp\u003eIf the sidenotes land up displaying successfully, then I actually go the extra\nmile and remove the footnotes from the bottom of the post. While I don\u0026rsquo;t \u003cem\u003ehave\u003c/em\u003e\nto do this, I think removing cruft and keeping it clean with just the essential\ncontent helps the reader know when they\u0026rsquo;re done.\u003c/p\u003e\n\u003cvideo  controls \n        width=\"100%\"\n        autoplay \n        muted \n        loop \n        playsinline\u003e\n    \u003csource src=\"./5_removing_sidenotes.mp4\" type=\"video/mp4\"\u003e\n  \u003cspan\u003e\u003c/span\u003e\n\u003c/video\u003e\n\u003ch2 id=\"on-hover-highlight-the-sidenote\"\u003eOn hover highlight the sidenote\u003c/h2\u003e\n\u003cp\u003eBy default I didn\u0026rsquo;t want the sidenote to really jump out and distract from the\npost content. So by default they show up in a slightly muted color. But if you highlight the super script link \u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e, it should brighten the sidenote.\u003c/p\u003e\n\u003cvideo  controls \n        width=\"100%\"\n        autoplay \n        muted \n        loop \n        playsinline\u003e\n    \u003csource src=\"./4_highlight_sidenotes.mp4\" type=\"video/mp4\"\u003e\n  \u003cspan\u003e\u003c/span\u003e\n\u003c/video\u003e\n\u003ch2 id=\"optimize-for-mobile-sizes\"\u003eOptimize for mobile sizes\u003c/h2\u003e\n\u003cp\u003eNow this is great for larger displays like tablets and laptops, but for smaller\ndisplays like most mobile phones, the whole sidenote thing doesn\u0026rsquo;t work as well.\nSo in these cases, I only show the border marker indicating that a sidenote exists. I also don\u0026rsquo;t mute the color as the border is less distracting.\u003c/p\u003e\n\u003cp\u003eIn addition, I keep the original treatment and clicking the link takes you to\nthe bottom (as before). A future optimization would be to go all Tufte on this and displaying the sidenote on clicking. This should be easy enough to implement with jQuery.\u003c/p\u003e\n\u003cvideo  controls \n        width=\"100%\"\n        autoplay \n        muted \n        loop \n        playsinline\u003e\n    \u003csource src=\"./6_mobile_shownotes.mp4\" type=\"video/mp4\"\u003e\n  \u003cspan\u003e\u003c/span\u003e\n\u003c/video\u003e\n\u003cp\u003eThis was a fun side project but sweating the details takes more time than you\nwould otherwise assume.  What do you think? Would love to \u003ca href=\"https://twitter.com/kaushikgopal\"\u003ehear your thoughts or suggestions on making this better\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003enoted for his writings on information design and as a pioneer in the field of data visualization\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eYes, I know jQuery is old school and the youngins probably use fancier alternatives today but I love me some jQuery and it gets the job done.\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003eIf you\u0026rsquo;re still reading this, thank you. As a sign of gratitude this is a dummy sidenote to make it easier for you to test my sidenote display.\u0026#160;\u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "Am I Yak-Shaving or Bikeshedding?",
        "date_published" : "2020-07-15T00:00:00-07:00",
        "id" : "https://kau.sh/blog/yak-shaving-bike-shedding/",
        "file_path" : "blog/2020-07-15-yak-shaving-bike-shedding.md",
        "url" : "https://kau.sh/blog/yak-shaving-bike-shedding/",
        "content_html" : "\u003cp\u003eIf you\u0026rsquo;re a software engineer trying to be snarky, it\u0026rsquo;s important to get these\nterms right for maximum effect.\u003c/p\u003e\n\u003ch2 id=\"what-is-yak-shaving\"\u003eWhat is Yak-Shaving?\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026ldquo;Shaving a Yak\u0026rdquo; means performing a seemingly endless series of small tasks\nthat must be completed before the next step in the project can move forward.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"is-this-a-good-thing-or-a-bad-thing\"\u003eIs this a good thing or a bad thing?\u003c/h3\u003e\n\u003cp\u003eIt depends. Yak Shaving is sometimes very much necessary. It\u0026rsquo;s \u0026ldquo;bad\u0026rdquo; only when\ndone unnecessarily. It\u0026rsquo;s \u003cem\u003eunfortunate\u003c/em\u003e when necessary but might not be a bad\nthing at all under certain circumstances.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://seths.blog/2005/03/dont_shave_that/\"\u003eSeth Godin\u0026rsquo;s blog post\u003c/a\u003e on the\nsubject was the first time I ran across this way back when and does a good job\nof explaining this concept in great detail.\u003c/p\u003e\n\u003ch2 id=\"what-is-bikeshedding\"\u003eWhat is Bikeshedding?\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026ldquo;Bike shedding\u0026rdquo; means spending most of your time discussing the simple but trivial issues\nrather than focusing your time on discussions around the bigger but \u003cem\u003eharder\u003c/em\u003e tasks at hand.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThe parable goes: a committee of members started working on the design\nof a nuclear power plant. Designing a new nuclear plant is probably no joke.\nGiven how daunting and overwhelming this task was, the committee instead\nlanded up spending most of that time designing just the bike-shed outside of the\nplant.\u003c/p\u003e\n\u003ch3 id=\"is-this-a-good-thing-or-a-bad-thing-1\"\u003eIs this a good thing or a bad thing?\u003c/h3\u003e\n\u003cp\u003eThis is most definitely a bad thing. It\u0026rsquo;s also referred to sometimes as\n\u003ca href=\"https://en.wikipedia.org/wiki/Law_of_triviality\"\u003e\u0026ldquo;Parkinson\u0026rsquo;s law of\ntriviality\u0026rdquo;\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI will add this caveat though: many software engineers rush discussions around\ntopics like \u0026ldquo;naming\u0026rdquo; to be bike shedding. I vehemently defy such attempts.\nNaming is an important part of maintaining any code base. It\u0026rsquo;s one of those deceptively\nsimple tasks that if done wrong will bite you in the behind for years to come.\u003c/p\u003e\n"
    },
    {
        "title" : "Building my new programming font Iosevka on macOS",
        "date_published" : "2020-04-14T00:00:00-07:00",
        "id" : "https://kau.sh/blog/build-iosevka-font-mac-os/",
        "file_path" : "blog/2020-04-14-build-iosevka-font-mac-os.md",
        "url" : "https://kau.sh/blog/build-iosevka-font-mac-os/",
        "content_html" : "\u003cdiv class='callout center'\u003e\n    If you\u0026rsquo;re looking to just copy-paste instructions, \u003ca href=\"../build-iosevka-font-mac-os/#build-iosevka-from-source-on-macos\"\u003ejump to the section\nbelow\u003c/a\u003e.\n\u003c/div\u003e\n\u003cp\u003eFor the longest time, I\u0026rsquo;ve been rocking IBM Plex Mono as \u003ca href=\"../my-new-programming-font/\"\u003emy programming font\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eWhile it has served me well, I started to \u003ca href=\"https://twitter.com/kaushikgopal/status/1241864968716185600\"\u003eexperiment\u003c/a\u003e\nwith some \u003ca href=\"https://monolisa.dev/\"\u003enewer\u003c/a\u003e monospaced typefaces to see if I could\nfind one that was \u003cem\u003eeven more\u003c/em\u003e legible\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. That experiment quickly devolved into\na rabbit-hole evaluation of a bunch of new programming fonts.\u003c/p\u003e\n\u003ch2 id=\"hello-iosevkahttpstypeofnetiosevka\"\u003eHello \u003ca href=\"https://typeof.net/Iosevka/\"\u003eIosevka\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eEventually, I landed up with the font Iosevka:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIt\u0026rsquo;s far more legible (courtesy the extra long glyphs)\u003c/li\u003e\n\u003cli\u003eIt\u0026rsquo;s set pretty narrow which makes it pretty space efficient \u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e\u003c/li\u003e\n\u003cli\u003eIt\u0026rsquo;s 100% \u003ca href=\"https://github.com/be5invis/Iosevka\"\u003eopen-source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYou can build the font from source and customize it pretty extensively\u003c/li\u003e\n\u003cli\u003eThere\u0026rsquo;s ligatures (\u0026hellip;or not \u0026hellip;or dig this- for specific languages!)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNow at the outset, I actually didn\u0026rsquo;t like Iosevka at all. It was unbearably narrow\nfor my taste but thankfully it also comes with an \u0026ldquo;Extended\u0026rdquo; variant. The extended\nvariant adds a little more breathing room between characters making it less\ncondensed.\u003c/p\u003e\n\u003cp\u003eAfter I fiddled with it more and chose specific glyphs that are easier on my eyes,\nI think I landed up with a version that I absolutely love:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/iosevka-demo.gif\" alt=\"iosevka demo\" title=\"iosevka demo\"\u003e\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s more legible and dare I say a little more appealing than the trusty\nIBM Plex Mono \u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e. It almost hearkens back to my Inconsolata days (inspired by\nGary Bernhardt\u0026rsquo;s DAS screen casts).\u003c/p\u003e\n\u003ch2 id=\"customizing-iosevka\"\u003eCustomizing Iosevka\u003c/h2\u003e\n\u003cp\u003eIosevka allows you to pick specific glyphs for certain characters.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/iosevka-customization.png\" alt=\"Iosevka glyph customization\" title=\"iosevka glyph customization\"\u003e\u003c/p\u003e\n\u003cp\u003eIf you notice the cherry-picking section in the above image, I\u0026rsquo;ve chosen slightly\ndifferent variants of \u003ccode\u003eg\u003c/code\u003e, \u003ccode\u003el\u003c/code\u003e, \u003ccode\u003ey\u003c/code\u003e, \u003ccode\u003eG\u003c/code\u003e, \u003ccode\u003eQ\u003c/code\u003e, \u003ccode\u003e*\u003c/code\u003e, \u003ccode\u003e$\u003c/code\u003e and \u003ccode\u003e%\u003c/code\u003e. If you head on\nover to the \u003ca href=\"https://typeof.net/Iosevka/\"\u003emain website\u003c/a\u003e, you can even live preview and\ntest a bunch of combinations.\u003c/p\u003e\n\u003ch2 id=\"build-iosevka-from-source-on-macos\"\u003eBuild Iosevka from source (on macOS)\u003c/h2\u003e\n\u003cp\u003eOnce you\u0026rsquo;ve indulged your stylistic tendencies and honed in on the style you\nprefer, you can build the font right from the source. I didn\u0026rsquo;t find too many\ninstructions online on how to do this with a Mac, so if you\u0026rsquo;re looking to do the same,\nthis should save you some trouble:\u003c/p\u003e\n\u003ch3 id=\"install-necessary-dependencies\"\u003eInstall necessary dependencies\u003c/h3\u003e\n\u003cp\u003eYou need to have \u003ca href=\"https://brew.sh/\"\u003ehomebrew\u003c/a\u003e, \u003ca href=\"https://pip.pypa.io/en/stable/\"\u003epip\u003c/a\u003e\nand \u003ca href=\"https://www.npmjs.com/get-npm\"\u003enpm\u003c/a\u003e already installed.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit clone git@github.com:be5invis/Iosevka.git\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# it\u0026#39;s big, so it\u0026#39;ll take sometime\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecd Iosevka\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew install ttfautohint\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew tap caryll/tap\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew install otfcc-mac64\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epip3 install afdko \u003cspan style=\"color:#75715e\"\u003e# has otf2otc\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm install\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"build-the-font\"\u003eBuild the font\u003c/h3\u003e\n\u003cp\u003eMake a copy of the sample build plan first and then edit it with your\ncustomizations. If you take a look \u003ca href=\"https://gist.github.com/kaushikgopal/79a31749b33f3de3a8f11abe34cca263\"\u003eat my sample build plan\u003c/a\u003e, it should become obvious how to do that.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecp private-build-plans.sample.toml private-build-plans.toml\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003evi private-build-plans.toml\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# make your customizations\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm run build -- ttf::iosevka-kg\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# fonts should be in dist/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# if you want to generate woff, eot etc.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# npm run build -- contents::iosevka-kg\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThat\u0026rsquo;s it! Open the \u003ccode\u003edist\u003c/code\u003e directory and you should find your very own version\nof Iosevka.\u003c/p\u003e\n\u003cp\u003eYou can \u003ca href=\"https://github.com/kaushikgopal/Iosevka/tree/kg/custom/dist/kg/ttf\"\u003edownload the variant I\u0026rsquo;m currently using\nhere\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eWhile aesthetics played heavily into my choice before, nowadays my eyes are fierce about keeping legibility as the number one priority (a LASIK will do that to you).\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eTruth be told, I\u0026rsquo;m actually not a fan of ultra-narrow fonts (looking at you Pragmata) and Iosevka is pretty darn narrow for my taste. But more on this later.\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003eEither that or I\u0026rsquo;m just bored 😋.\u0026#160;\u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "My 1st screen cast: awk program from scratch",
        "date_published" : "2020-03-10T00:00:00-07:00",
        "id" : "https://kau.sh/blog/screencast-1-build-awk-jekyll-permalink-migration/",
        "file_path" : "blog/2020-03-10-screencast-1-build-awk-jekyll-permalink-migration.md",
        "url" : "https://kau.sh/blog/screencast-1-build-awk-jekyll-permalink-migration/",
        "content_html" : "\u003cp\u003eTwo big announcements:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eI made my first screen cast \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/li\u003e\n\u003cli\u003eI\u0026rsquo;ve updated the permalink title for all the blog posts here \u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eI wanted to make sure that external blogs linking to previous post links\nwouldn\u0026rsquo;t break. So in order to do this, I had to edit all of my\nprevious blog posts and add a \u003ccode\u003eredirect_from\u003c/code\u003e tag.\u003c/p\u003e\n\u003cp\u003eLife is too short to be doing this manually so I whipped up an\n\u003ca href=\"https://en.wikipedia.org/wiki/AWK\"\u003eawk\u003c/a\u003e program to do\nit for me in about 20 minutes. It was so much fun building the program that I\nfigured I should screen cast the process.\u003c/p\u003e\n\u003cp\u003eRecording the screen cast and exporting a decent version of it took a lot more\nthan 20 minutes but I thoroughly enjoyed the process. You can watch the screen\ncast in its entirety on Youtube:\u003c/p\u003e\n\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n  \u003ciframe src=\"https://www.youtube.com/embed/LaHIQ2Bwvjo\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" allowfullscreen title=\"YouTube Video\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eIf you enjoyed it, please do let me know on\n\u003ca href=\"https://twitter.com/kaushikgopal\"\u003etwitter\u003c/a\u003e or in the\n\u003ca href=\"https://www.youtube.com/watch?v=LaHIQ2Bwvjo\"\u003ecomments\u003c/a\u003e over at YouTube.\u003c/p\u003e\n\u003ch2 id=\"notes-about-the-screen-cast\"\u003eNotes about the screen cast\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eI use the GNU variant of awk (\u003ca href=\"https://www.gnu.org/software/gawk/\"\u003egawk\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/BurntSushi/ripgrep\"\u003eripgrep\u003c/a\u003e is what I use to search\u003c/li\u003e\n\u003cli\u003eMy shell is \u003ca href=\"https://fishshell.com/\"\u003efish\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eTerminal theme is \u003ca href=\"https://draculatheme.com/pro/\"\u003eDracula Pro\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eThe font I use of course is the venerable \u003ca href=\"../my-new-programming-font/\"\u003eIBM Plex Mono\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"meta-notes-on-screen-cast\"\u003eMeta notes on screen cast\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eIt took 5 takes to get the final one right\u003c/li\u003e\n\u003cli\u003eI used an iPhone to record my keyboard \u0026amp; QuickTime Player to record the screen\u003c/li\u003e\n\u003cli\u003eAdobe Premier Pro was my video editor of choice (I\u0026rsquo;m an Audition devotee)\u003c/li\u003e\n\u003cli\u003eI don\u0026rsquo;t typically use an Apple keyboard \u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e but my darn Kinesis wouldn\u0026rsquo;t fit\ncomfortably in the iPhone screen (without propping the phone too high).\u003c/li\u003e\n\u003cli\u003eI had both a mic and the iPhone on stands, both of which were obstructing my view\nto the keyboard. This would explain why I\u0026rsquo;m kind of sloppy at times with the\nkeyboard navigation.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eOne of \u003ca href=\"../2020/#2-make-5-screencasts\"\u003emy goals for 2020\u003c/a\u003e\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eThis might have messed with your RSS unread feed count. Sorry 😬\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003e\u003ca href=\"https://kinesis-ergo.com/shop/advantage2/\"\u003eKinesis Advantage Pro\u003c/a\u003e in case you were wondering\u0026#160;\u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "git-number to the command line rescue",
        "date_published" : "2020-02-19T00:00:00-07:00",
        "id" : "https://kau.sh/blog/git-number/",
        "file_path" : "blog/2020-02-19-git-number.md",
        "url" : "https://kau.sh/blog/git-number/",
        "content_html" : "\u003cp\u003eIf you\u0026rsquo;re a programmer these days, you probably spend a large part of your day in \u003ca href=\"https://git-scm.com/\"\u003egit\u003c/a\u003e. If you\u0026rsquo;re a command line zealot like me, you realize the holy ways of using your Terminal app for \u003cem\u003eeverything\u003c/em\u003e and aren\u0026rsquo;t seduced by fancy GUIs that only stand to dissuade you from pure unbridled productivity.\u003c/p\u003e\n\u003cp\u003eWith that in mind, one typically finds themselves in a position where they have a few files that have changed liked so:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/git-0.png\" alt=\"git showing changed files\"\u003e\u003c/p\u003e\n\u003cp\u003eIf I had to add 2 out of those 3 files\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e, typing the commands start to get a little tedious:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e:\u0026gt; git add images/content/git-0.png\n:\u0026gt; git add images/content/git-1.png\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSure, if you happen to use \u003ca href=\"https://fishshell.com/\"\u003efish\u003c/a\u003e (one of the nicest shells out there) the autocompletion helps reduce the tediousness. But it still doesn\u0026rsquo;t beat being able to add files just by a number! What if you were presented with a git status like this:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/git-1.png\" alt=\"git-number showing changed files\"\u003e\u003c/p\u003e\n\u003cp\u003eand then simply added the files by their reference number, like so:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e:\u0026gt; g add 4\n:\u0026gt; g add 5\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWouldn\u0026rsquo;t that be better? I\u0026rsquo;ve been doing this for years and trust me, it is! You probably won\u0026rsquo;t see the difference with just a few files, but if you had 10 images being commited, then being able to simply type a range makes it a breeze to commit a bunch of files!\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e:\u0026gt; g add 4-10\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id=\"installation\"\u003eInstallation\u003c/h2\u003e\n\u003cp\u003eSo, how do you achieve something similar? Install \u003ca href=\"https://github.com/holygeek/git-number\"\u003egit-number\u003c/a\u003e and 💥:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e:\u0026gt; brew install git-number\n:\u0026gt; git-number -s\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eFor years, I used a bunch of hand wrangled ruby files, that would help me achieve something similar but I discovered @holygeek already went through the trouble of building a much more mature version of this in Perl. Now I\u0026rsquo;m just using that version (and have gladly deleted all those scripts I had to grudgingly maintain).\u003c/p\u003e\n\u003ch2 id=\"notes\"\u003eNotes\u003c/h2\u003e\n\u003ch3 id=\"remember-to-git-number-first\"\u003eRemember to git-number first\u003c/h3\u003e\n\u003cp\u003eIt\u0026rsquo;s important to make sure you run \u003ccode\u003egit-number\u003c/code\u003e first before running your \u003ccode\u003egit add \u0026lt;numeral\u0026gt;\u003c/code\u003e commands. I\u0026rsquo;ve noticed that git-number gets a little confused and tends to try issue commands on the wrong files from previous runs, if you don\u0026rsquo;t (yikes).\u003c/p\u003e\n\u003cp\u003eYou probably want to run git-number anyway to see the status of changed files. This replaces \u003ccode\u003egit status\u003c/code\u003e which you probably would have otherwise run to see what\u0026rsquo;s changed.\u003c/p\u003e\n\u003ch3 id=\"works-for-most-git-commands\"\u003eWorks for most git commands\u003c/h3\u003e\n\u003cp\u003eI demostrated the ease of using numbers with \u003ccode\u003egit add\u003c/code\u003e but git-number isn\u0026rsquo;t limited to just \u003ccode\u003eadd\u003c/code\u003e. It also works for most other git commands where you have to reference a filename like \u003ccode\u003echeckout\u003c/code\u003e, \u003ccode\u003ereset\u003c/code\u003e etc.\u003c/p\u003e\n\u003ch3 id=\"aliases-and-conveniences\"\u003eAliases and conveniences\u003c/h3\u003e\n\u003cp\u003eThe keenly observant would notice in the examples above that I use \u003ccode\u003eg add \u0026lt;number\u0026gt;\u003c/code\u003e instead of \u003ccode\u003egit-number add \u0026lt;number\u0026gt;\u003c/code\u003e. This is because I almost always want to use \u003ccode\u003egit-number\u003c/code\u003e instead of \u003ccode\u003egit\u003c/code\u003e. So I have an alias for conveniences:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ealias g = git-number\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe good thing with git-number is that it works even if i\u0026rsquo;m not referencing a file number, so this will technically also work:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e:\u0026gt; git-number commit -m \u0026quot;This is a diligently formed commit 😇\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"but-what-about-my-auto-completions\"\u003eBut what about my auto-completions?\u003c/h3\u003e\n\u003cp\u003eThe only trouble with replacing git with git-number altogether, is you might lose your auto-completions:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e:\u0026gt; git-number checkout kg/feat/myBr\u0026lt;Tab\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eTypically when you hit the tab key (where it says \u0026lt;Tab\u0026gt; above) you would expect the different branch names to be autocompleted but since most shells are configured to autocomplete only if when they see a \u0026ldquo;git\u0026rdquo; command being used, this can pose a problem.\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re using fish \u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e though, this is easily \u003ca href=\"https://github.com/fish-shell/fish-shell/issues/6601\"\u003epossible\u003c/a\u003e if you use a function\u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e g \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  --description \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;abbreviation for git-number w/auto completion\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  --wraps git\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    switch $argv\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e1\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;reb*\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        git $argv\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;*\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        git number $argv\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    end\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow you can go about your merry way, using \u003ccode\u003eg\u003c/code\u003e as your git command alias, have autocompletion and use \u003ccode\u003egit-number\u003c/code\u003e to boot.\u003c/p\u003e\n\u003cp\u003eGive git-number a try. You won\u0026rsquo;t regret it.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003ebe a good git citizen and make meaningful commits\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eand really why aren\u0026rsquo;t you? it\u0026rsquo;s the best shell out there\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003e\u003ccode\u003egit-number\u003c/code\u003e isn\u0026rsquo;t happy playing with commands like \u003ccode\u003erebase\u003c/code\u003e though, so best to avoid them\u0026#160;\u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "2020",
        "date_published" : "2020-02-04T00:00:00-07:00",
        "id" : "https://kau.sh/blog/2020/",
        "file_path" : "blog/2020-02-04-2020.md",
        "url" : "https://kau.sh/blog/2020/",
        "content_html" : "\u003cp\u003e2019 has been the year that\u0026rsquo;s primed me the most for life changes. I imagine 2020 will the be the one where a lot of these changes materialize.\u003c/p\u003e\n\u003ch1 id=\"20192019-recap\"\u003e\u003ca href=\"../2019\"\u003e2019\u003c/a\u003e Recap\u003c/h1\u003e\n\u003ch2 id=\"practice-vim-for-30-days\"\u003ePractice Vim for 30 days\u003c/h2\u003e\n\u003cp\u003eNot only did I successfully try it for 30 days, I now use vim as my primary text editor of choice and absolutley love it. It deserves a separate post though.\u003c/p\u003e\n\u003ch2 id=\"blogging--screencasting\"\u003eBlogging + screencasting?\u003c/h2\u003e\n\u003cp\u003eI wrote 12 posts last year so I\u0026rsquo;m pretty happy with the 1-post-per-month average.I\u0026rsquo;m definitely looking to ramp up this number in 2020.\u003c/p\u003e\n\u003cp\u003eI didn\u0026rsquo;t do any screencasting though. I purchased a screaming hot license for \u003ca href=\"https://www.telestream.net/screenflow/store.asp\"\u003eScreenFlow\u003c/a\u003e but left it unopened for the rest of the whole year 👎. \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\u003ch2 id=\"care-about-your-privacy\"\u003eCare about your privacy\u003c/h2\u003e\n\u003cp\u003eI definitely have been more acutely aware of privacy and how my data is being collected by different services and platforms out there. The biggest change I\u0026rsquo;ve made is the iPhone X for all personal use \u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e. This was an incredibly tough pill to swallow for me. I don\u0026rsquo;t intend to write about this cause it always feels like a moving target but I do have copious notes on the matter. Let me know if you\u0026rsquo;re interested and I might just convert those notes into a blog post.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;ve also switched to Firefox for my browsing. If you\u0026rsquo;re considering the switch for privacy reasons, make sure you\u0026rsquo;re also using the \u003ca href=\"https://addons.mozilla.org/en-US/firefox/addon/multi-account-containers/\"\u003eMulti-Account Containers add-on\u003c/a\u003e. That coupled with the \u003ca href=\"https://addons.mozilla.org/en-US/firefox/addon/temporary-containers/\"\u003eTemporary Containers add-on\u003c/a\u003e is what makes it a truly private browsing experience. This definitely warrants a post or screencast so look for that in the future.\u003c/p\u003e\n\u003ch2 id=\"miscellaneous\"\u003eMiscellaneous\u003c/h2\u003e\n\u003cp\u003eI try to speak at one international conference every year (always a new talk, in a city/country I\u0026rsquo;ve never been to before). This year I had the opportunity to give \u003ca href=\"https://www.youtube.com/watch?v=BdGVCsHj2vU\"\u003ea talk\u003c/a\u003e in Poland. This trip was  the highlight of the year.\u003c/p\u003e\n\u003cp\u003eI am terribly disappointed that I didn\u0026rsquo;t make my annual trip to Disneyland \u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e but I shall make amends.\u003c/p\u003e\n\u003cp\u003eOn completing 185 episodes of \u003ca href=\"https://fragmentedpodcast.com\"\u003eFragmented\u003c/a\u003e -the podcast I co-created with my buddy Donn- we decided to change things up a little. That was a big decision for us. If you\u0026rsquo;re curious you can listen to the changes here:\u003c/p\u003e\n\u003cp\u003e\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e\u003c/p\u003e\n\u003ch1 id=\"2020-goals\"\u003e2020 Goals\u003c/h1\u003e\n\u003cp\u003eIn \u003ca href=\"/categories/#new-year\"\u003epast years\u003c/a\u003e I\u0026rsquo;ve kept my resolutions and goals pretty generic (do more X, get more fit, sleep more etc.). I want to try and make them more specific for 2020:\u003c/p\u003e\n\u003ch2 id=\"1-write-24-blog-posts\"\u003e1. Write 24 blog posts\u003c/h2\u003e\n\u003cp\u003eraising it from 1-month-a-post to 2. There\u0026rsquo;s something about jotting words down that forces a kind of mental clarity. I\u0026rsquo;m excited about this and already have a bunch of ideas for posts lined up.\u003c/p\u003e\n\u003ch2 id=\"2-make-5-screencasts\"\u003e2. Make 5 screencasts\u003c/h2\u003e\n\u003cp\u003eand finally whip out that copy of ScreenFlow. I \u003ca href=\"https://www.destroyallsoftware.com/screencasts\"\u003elove\u003c/a\u003e watching other \u003ca href=\"https://medium.com/@suzhinton/my-twitch-live-coding-setup-b2516672fb21\"\u003efolks\u003c/a\u003e screencast. I especially like seeing how other developers use vim, Terminal shortcuts, keyboard hacks, different setups etc. I\u0026rsquo;d like to join the party. This one is going to be slightly challenging though given my utter newbness in the area.\u003c/p\u003e\n\u003ch2 id=\"3-give-one-conference-talk\"\u003e3. Give one conference talk\u003c/h2\u003e\n\u003cp\u003e(preferably) in a country I\u0026rsquo;ve never been to before and on a new topic. I\u0026rsquo;ve consistently been good at this \u003ca href=\"/ppt/\"\u003efor the last 5 years\u003c/a\u003e so want to keep it going.\u003c/p\u003e\n\u003ch2 id=\"4-hit-the-gym-atleast-3-times-a-week\"\u003e4. Hit the gym atleast 3 times a week\u003c/h2\u003e\n\u003cp\u003estarting Week 7 of this year 👯‍♂️. I think my body is starting to feel like it\u0026rsquo;s catching up with my age. I\u0026rsquo;ve been decently fit for the last 2 years but I want to improve on the consistency, so putting this down here as a commitment.\u003c/p\u003e\n\u003ch2 id=\"5-watch-52-movies\"\u003e5. Watch 52 movies\u003c/h2\u003e\n\u003cp\u003eand put out some recommendations \u003csup id=\"fnref:4\"\u003e\u003ca href=\"#fn:4\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e4\u003c/a\u003e\u003c/sup\u003e. Watching movies is how I decompress. If I don\u0026rsquo;t prioritize taking care of my mental health and appropriately decompress, I burn out pretty fast. So this is almost a counter-goal to make sure I\u0026rsquo;m making the time for things that give me happiness.\u003c/p\u003e\n\u003ch1 id=\"random-learnings-from-2019\"\u003eRandom learnings from 2019\u003c/h1\u003e\n\u003cp\u003eThis section is just a random assortment of quotes, links, articles and other things I picked up along the year that I think is worth sharing:\u003c/p\u003e\n\u003ch3 id=\"martin-fowler-quote\"\u003eMartin Fowler quote:\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAny fool can write code that a computer can understand. Good programmers write code that humans can understand.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMartin Fowler, 2008\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"markdown-comments\"\u003eMarkdown comments:\u003c/h3\u003e\n\u003cp\u003eApparently \u003ca href=\"https://daringfireball.net/projects/markdown/\"\u003eMarkdown\u003c/a\u003e has \u003ca href=\"https://stackoverflow.com/questions/4823468/comments-in-markdown\"\u003ecomments\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e[//]: # 👏 if you got here. Shoot me an email citing you saw this comment, and i\u0026rsquo;ll send you movie recommendations!\u003c/p\u003e\n\u003ch3 id=\"anonymous-quote\"\u003eAnonymous quote:\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026ldquo;Beware the quiet man. For while others speak, he watched. And while others act, he plans. And when they finally rest… he strikes.\u0026rdquo;\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003efrom the movie \u003ca href=\"https://www.imdb.com/title/tt6266538/\"\u003eVice\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"ending-conference-talks\"\u003eEnding conference talks:\u003c/h3\u003e\n\u003cp\u003eAsking \u0026ldquo;What questions do you have for me?\u0026rdquo; can be dramatically more effective than \u0026ldquo;Any questions?\u0026rdquo; at the end of a talk. \u003csup id=\"fnref:5\"\u003e\u003ca href=\"#fn:5\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e5\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\u003ch3 id=\"optimize-for-trust\"\u003eOptimize for trust:\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://m.signalvnoise.com/6-mistakes-to-avoid-during-your-first-30-days-as-a-new-manager/\"\u003eDon\u0026rsquo;t optimize for likability, optimize for trust!\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e🏁 🏁 🏁 Bring it on 2020! 🏁 🏁 🏁\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eIn all fairness I did add a wavering question mark indicating this was a stretch goal.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eiOS is far from perfect but I think they fair much better than Android as it stands now. I\u0026rsquo;ve been keeping an eye out on the various breaches and instances of privacy violations and it\u0026rsquo;s become evident that iOS is the better choice when it comes to privacy today. Also, the Pixel 4 didn\u0026rsquo;t exactly leave me pining for a new Android phone, so that decision became very easy.\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003eespecially since \u003ca href=\"https://disneyland.disney.go.com/destinations/disneyland/star-wars-galaxys-edge/\"\u003eStar Wars: Galaxy\u0026rsquo;s Edge\u003c/a\u003e is now finally open.\u0026#160;\u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:4\"\u003e\n\u003cp\u003eHave you furiously searched Netflix on a Friday night as your significant other patiently waits? I have a lot of friends who do that would like to benefit from my special movie recommending powers. My contribution to this universe, if you will. I even have a specific rating system that\u0026rsquo;s not snooty or artsy-fartsy and is geared towards picking a movie to watch quickly. Coming soon in 2020.\u0026#160;\u003ca href=\"#fnref:4\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:5\"\u003e\n\u003cp\u003eFrom a \u003ca href=\"https://www.npr.org/2019/12/13/788003640/episode-959-things-we-learned-in-2019\"\u003ePlaney Money episode #959\u003c/a\u003e\u0026#160;\u003ca href=\"#fnref:5\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "You should CD your blog (Firebase Hosting + Circle CI + Docker)",
        "date_published" : "2020-01-29T00:00:00-07:00",
        "id" : "https://kau.sh/blog/you-should-cd-your-blog-with-jekyll-docker-circle-ci/",
        "file_path" : "blog/2020-01-29-you-should-cd-your-blog-with-jekyll-docker-circle-ci.md",
        "url" : "https://kau.sh/blog/you-should-cd-your-blog-with-jekyll-docker-circle-ci/",
        "content_html" : "\u003cp\u003eThis blog now \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e uses \u003ca href=\"http://jekyllrb.com\"\u003eJekyll\u003c/a\u003e - a static blog generator that takes \u003ca href=\"https://daringfireball.net/projects/markdown/\"\u003emarkdown\u003c/a\u003e as an input and pumps html as output. I then copy it over to my hosting server - Firebase, which then happily serves it to the interwebs.\u003c/p\u003e\n\u003cp\u003eThis setup has worked out swimmingly well thus far and has been rock solid. Even when \u003ca href=\"../hacking-your-keyboard/\"\u003emy last post\u003c/a\u003e got high up the ranks of \u003ca href=\"https://news.ycombinator.com\"\u003eHN\u003c/a\u003e, my blog held steady. Not even the slightest of fears or signs of being fireballed or \u003ca href=\"https://en.wikipedia.org/wiki/Slashdot_effect\"\u003eslashdotted\u003c/a\u003e. This is the beauty of HTML.\u003c/p\u003e\n\u003cp\u003eTo achieve the above, these are the actual steps:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003ewrite my blog post in markdown\u003c/li\u003e\n\u003cli\u003egit commit and push blog post to git(hub) (this entire blog is version controlled)\u003c/li\u003e\n\u003cli\u003erun command \u0026ldquo;bundle exec jekyll build\u0026rdquo; (use jekyll to generate the html)\u003c/li\u003e\n\u003cli\u003erun command \u0026ldquo;bundle exec \u003ca href=\"https://github.com/gjtorikian/html-proofer\"\u003ehtmlproofer\u003c/a\u003e ./site \u0026ndash;check-favicon \u0026ndash;check-html\u0026rdquo; (on generated html from step 3 to make sure I don\u0026rsquo;t have broken links etc.)\u003c/li\u003e\n\u003cli\u003erun command \u0026ldquo;firebase deploy \u0026ndash;only hosting\u0026rdquo;\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThat\u0026rsquo;s 3 steps more than my lazy self is willing to do every single time.\u003c/p\u003e\n\u003cp\u003eIn software land, we\u0026rsquo;ve solved this problem with CD (\u003ca href=\"https://en.wikipedia.org/wiki/Continuous_delivery\"\u003eContinuous Delivery\u003c/a\u003e). You have a server somewhere on the internet, that keeps checking your github repo every time you\u0026rsquo;ve made a change, then runs a sequence of commands for you.\u003c/p\u003e\n\u003cp\u003eThat\u0026rsquo;s exactly what I did for this blog. I now use \u003ca href=\"https://circleci.com\"\u003eCircle CI\u003c/a\u003e \u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e to ping github and run through steps 3-5. If all\u0026rsquo;s well my blog is updated with my new post. If something didn\u0026rsquo;t go well, I get an email notifying me about it which I can then promptly fix.\u003c/p\u003e\n\u003cp\u003eEven when I\u0026rsquo;m just tweaking the appearance of this blog, I tend to make \u003cem\u003ea lot\u003c/em\u003e of changes \u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e to my css (it\u0026rsquo;s like my happy place). Setting up CD has saved me huge amounts of time! If you\u0026rsquo;re a developer, or savvy enough to dabble with some code, I highly recommend it!\u003c/p\u003e\n\u003cp\u003eHere\u0026rsquo;s what my circle ci config looks like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eversion\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003ejobs\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003ebuild\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eworking_directory\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e~/repo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e# docker hub images https://hub.docker.com/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003edocker\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#f92672\"\u003eimage\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ekaushikgopal/ruby-node:2.6.5_12.14.0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003esteps\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#ae81ff\"\u003echeckout\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#75715e\"\u003e# Download and cache dependencies\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#f92672\"\u003erestore_cache\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003ekeys\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#75715e\"\u003e# Find a cache corresponding to this specific file\u0026#39;s checksum\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#75715e\"\u003e# when any of these files are changed, this key will fail\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          - \u003cspan style=\"color:#ae81ff\"\u003ev00-deps\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#75715e\"\u003e# Find the most recently generated cache used from any branch\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          - \u003cspan style=\"color:#ae81ff\"\u003ev00-deps-\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#f92672\"\u003erun\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eRuby dependencies\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003ecommand\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ebundle install --path vendor/bundle --verbose\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#f92672\"\u003erun\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eNode dependencies\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003ecommand\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003enpm install firebase-tools@7.10.0 --unsafe-perm --verbose\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#f92672\"\u003esave_cache\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#75715e\"\u003e# path for directories is relative\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#75715e\"\u003e# to the working_directory of your job\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003epaths\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            - \u003cspan style=\"color:#ae81ff\"\u003evendor/bundle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            - \u003cspan style=\"color:#ae81ff\"\u003enode_modules\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003ekey\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ev00-deps\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#f92672\"\u003erun\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eBuild\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003ecommand\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ebundle exec jekyll build --verbose\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#f92672\"\u003erun\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eHTMLProofer tests\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003ecommand\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ebundle exec htmlproofer $HOME/repo/_site \\\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                        --\u003cspan style=\"color:#ae81ff\"\u003eallow-hash-href \\\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                        --\u003cspan style=\"color:#ae81ff\"\u003echeck-favicon \\\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                        --\u003cspan style=\"color:#ae81ff\"\u003echeck-html\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#f92672\"\u003erun\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e         \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eDeploy\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e         \u003cspan style=\"color:#f92672\"\u003ecommand\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e$HOME/repo/node_modules/firebase-tools/lib/bin/firebase.js\\\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                        \u003cspan style=\"color:#ae81ff\"\u003edeploy \\\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                            --\u003cspan style=\"color:#ae81ff\"\u003etoken=$FIREBASE_TOKEN \\\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                            --\u003cspan style=\"color:#ae81ff\"\u003enon-interactive \\\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                            --\u003cspan style=\"color:#ae81ff\"\u003eonly hosting\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo get the right version of ruby and node playing well together on the Circle CI server, I even had to create my \u003ca href=\"https://hub.docker.com/r/kaushikgopal/ruby-node/tags\"\u003ecustom docker container\u003c/a\u003e. I chatted in great detail about this \u003ca href=\"https://fragmentedpodcast.com/episodes/188\"\u003eon Fragmented episode 188\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e\u003c/p\u003e\n\u003cp\u003eCurious to know more about this setup? hit me up on \u003ca href=\"https://twitter.com/kaushikgopal\"\u003eTwitter\u003c/a\u003e and I\u0026rsquo;ll gladly try to help.\u003c/p\u003e\n\u003chr\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eI started out with \u003ca href=\"https://en.wikipedia.org/wiki/Blogger_(service)\"\u003eBlogger\u003c/a\u003e, moved to \u003ca href=\"https://wordpress.com\"\u003eWordpress.com\u003c/a\u003e, then \u003ca href=\"https://wordpress.org\"\u003eWordpress.org\u003c/a\u003e, then \u003ca href=\"http://octopress.org\"\u003eOctopress\u003c/a\u003e which i deeply loved, and finally now to \u003ca href=\"http://jekyllrb.com\"\u003eJekyll\u003c/a\u003e.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eThey have a generous free tier.\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003eDid you notice the recent switch to \u003ca href=\"https://www.fontshop.com/families/ff-tisa\"\u003eFF Tisa\u003c/a\u003e and \u003ca href=\"https://www.jetbrains.com/lp/mono/\"\u003eJetbrains Mono\u003c/a\u003e 😍 ?\u0026#160;\u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "Hacking your keyboard with karabiner",
        "date_published" : "2019-12-25T00:00:00-07:00",
        "id" : "https://kau.sh/blog/hacking-your-keyboard/",
        "file_path" : "blog/2019-12-25-hacking-your-keyboard.md",
        "url" : "https://kau.sh/blog/hacking-your-keyboard/",
        "content_html" : "\u003cp\u003etl;dr:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew install yqrashawn/goku/goku\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emkdir -p ~/.config \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e cd ~/.config\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etouch karabiner/karabiner.json\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etouch karabiner.edn\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# update your edn file with a sample from here https://github.com/yqrashawn/GokuRakuJoudo/blob/master/tutorial.md\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# or mine: https://gist.github.com/kaushikgopal/ff7a92bbc887e59699c804b59074a126\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egoku\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"background\"\u003eBackground\u003c/h1\u003e\n\u003cp\u003eI\u0026rsquo;ve been messing with mechanical keyboards recently.\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e There was one in particular which is a 60% layout that I fell in love with.\u003c/p\u003e\n\u003cp\u003eThe trouble with 60% keyboards though is that they can be pretty constraining for some basic operations (like navigation). Notice there aren\u0026rsquo;t dedicated keys for the up/left/down/arrows.\u003c/p\u003e\n\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"/images/content/keyboard-layouts.webp\"\n                \n                \n                    alt=\"ANSI Keyboard Layout\"\n                \n                \n                \n            /\u003e\n\n            \n            \u003cfigcaption\u003e\n                \n\n                \n                        \n\n                        \n                            \n                            \n                            \u003ca class=\"center\" href=\"https://commons.wikimedia.org/wiki/File:ANSI_Keyboard_Layout_Diagram_with_Form_Factor.svg\"\u003e\n                            \n                        \n\n                                Courtesy: Wikipedia\n\n                            \u003c/a\u003e\n                \n\n            \u003c/figcaption\u003e\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eGiven these constraints, you have to get a little creative with how you use a keyboard. I added a bunch of mods for the keyboard using the mechanical keyboard\u0026rsquo;s included software configurator. I liked these mods so much that I wanted to find a way to use these mods with \u003cem\u003eany\u003c/em\u003e keyboard I use.\u003c/p\u003e\n\u003cp\u003eThe easiest way I\u0026rsquo;ve found on the Mac to do this is using \u003ca href=\"https://karabiner-elements.pqrs.org/\"\u003eKarabiner\u003c/a\u003e. Karabiner intercepts every keystroke and allows you to send alternative signals.\u003c/p\u003e\n\u003cp\u003eFor example, a common mod that a lot of programmers like to do is remap their Caps Lock key -\u0026gt; Escape. So if I tap the Caps Lock key, it instead emulates hitting the Escape key. You can do this pretty easily with Karabiner but it barely scratches the surface of Karabiner\u0026rsquo;s true power.\u003c/p\u003e\n\u003ch2 id=\"complex-modifications\"\u003eComplex modifications:\u003c/h2\u003e\n\u003cp\u003eWhere Karabiner will truly shine is when you want to do slightly more complex things: for example, take the case of navigation with 60% keyboards. While they don\u0026rsquo;t come with dedicated arrow keys you can emulate navigation in a pretty slick way (especiallly for us vim users).\u003c/p\u003e\n\u003cp\u003eInstead of moving my fingers all the way to the bottom right of my keyboard and aiming for the arrow keys what if I could just keep my fingers on my home row and navigate like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-txt\" data-lang=\"txt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etap caps lock once         -\u0026gt; Escape key\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehold caps lock             -\u0026gt; left_control\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehold caps lock and press h -\u0026gt; left arrow\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehold caps lock and press j -\u0026gt; down arrow\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehold caps lock and press k -\u0026gt; up arrow\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehold caps lock and press l -\u0026gt; right arrow\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou can of course choose to map any key combo (for example right shift key + W/A/S/D). I chose H/J/K/L cause I\u0026rsquo;m a vim user and I love just using h/j/k/l to navigate anywhere on my Mac!\u003c/p\u003e\n\u003ch2 id=\"more-complex-modifications\"\u003eMore Complex modifications:\u003c/h2\u003e\n\u003cp\u003eEven that, just scratches the surface of what you can do with Karabiner. Another quick hack I use and love (as a programmer):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-txt\" data-lang=\"txt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etap  [ once                -\u0026gt; type \u0026#34;[\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehold [ and tap ] key once -\u0026gt; type \u0026#34;{\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etap  ] once                -\u0026gt; type \u0026#34;]\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehold ] and tap [ key once -\u0026gt; type \u0026#34;}\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf you\u0026rsquo;re a programmer this makes it easier to type curly braces without contorting your fingers and flaring up that RSI. For typing paranthesis there\u0026rsquo;s an even better one:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-txt\" data-lang=\"txt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eleft_shift once     -\u0026gt; type \u0026#34;(\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehold left_shift     -\u0026gt; use as a regular shift key modifier\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eright_shift once    -\u0026gt; type \u0026#34;)\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehold right_shift    -\u0026gt; used as a regular shift key modifier\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"but-theres-more\"\u003eBut there\u0026rsquo;s more!\u003c/h2\u003e\n\u003cp\u003eApart from just modifying your key strokes, you can do advanced stuff like launching programs too. For example I typically switch between 3 applications pretty often: \u003ca href=\"https://iterm2.com/\"\u003eiTerm\u003c/a\u003e, \u003ca href=\"https://www.mozilla.org/en-US/firefox/\"\u003eFirefox\u003c/a\u003e, \u003ca href=\"https://culturedcode.com/things/\"\u003eThings\u003c/a\u003e. With Karabiner, I use the same technique but switch programs pretty quickly:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-txt\" data-lang=\"txt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehold o (for \u0026#34;open\u0026#34;) + tap i -\u0026gt; launch \u0026#34;iTerm\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehold o              + tap f -\u0026gt; launch \u0026#34;Firefox\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehold o              + tap t -\u0026gt; launch \u0026#34;Things\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etap o once                  -\u0026gt; type \u0026#34;o\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis makes switching between apps almost instant. I don\u0026rsquo;t have to carefully Cmd + Tab, visually recognize each icon (adding one extra cognitive step 😁) and then launch it. This might seem frivolous at first but once you start using this quick open mode like functionality, it\u0026rsquo;s hard to go back to Cmd Tabbing.\u003c/p\u003e\n\u003ch3 id=\"turbocharge-mode-karabiner--keyboard-maestro\"\u003eTurbocharge mode (Karabiner + Keyboard Maestro)\u003c/h3\u003e\n\u003cp\u003eI swear by \u003ca href=\"http://www.stairways.com/action/kmdiscount?REF6JZA\"\u003eKeyboard Maestro\u003c/a\u003e and use a lot of my macros pretty often. With Karabiner, I can map certain keyboard strokes to instead launch macros. For example, if I want to quickly Google something, I hold \u0026ldquo;o\u0026rdquo; then tap \u0026ldquo;g\u0026rdquo; -\u0026gt; this shows an input dialog to take in my text, then launches a new tab in firefox with a url to google prepoulated with my query.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-txt\" data-lang=\"txt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehold \u0026#34;s\u0026#34; + tap g    -\u0026gt; google for something on the web\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis kind of usage in conjunction with Keyboard Maestro basically unleashes the power of your Mac.\u003c/p\u003e\n\u003ch1 id=\"how-do-i-do-this\"\u003eHow do I do this?\u003c/h1\u003e\n\u003cp\u003eBefore you head to the races and start using Karabiner though there\u0026rsquo;s one caveat:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUse \u003ca href=\"https://github.com/yqrashawn/GokuRakuJoudo#intro\"\u003eGoku\u003c/a\u003e to organize your Karabiner\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSee the problem with Karabiner is that if you want to start doing the tricks I mention above, you pretty much have to start meddling directly with this file called \u003ccode\u003ekarabiner.json\u003c/code\u003e. Let\u0026rsquo;s just say json is not the most maintainable format for this kind of stuff.\u003c/p\u003e\n\u003cp\u003eAfter meddling with Karabiner for a few days, it was clearly getting unwieldy to maintain the json file. So on an exaseperated whim, I went searching for a way to make it easier to deal with Karabiner and found the wonderful \u003ca href=\"https://github.com/yqrashawn/GokuRakuJoudo\"\u003eGoku\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"enter-gokuhttpsgithubcomyqrashawngokurakujoudointro\"\u003eEnter \u003ca href=\"https://github.com/yqrashawn/GokuRakuJoudo#intro\"\u003eGoku\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eGoku basically is a DSL where you can write a nice and condensed form of the same code you would otherwise wrangle up in your karabiner.json. You write the code in this special format called \u003ca href=\"https://github.com/edn-format/edn\"\u003e\u0026ldquo;extensible data notation\u0026rdquo; (edn)\u003c/a\u003e. Goku then reads that edn format and generates the karabiner.json file for you.\u003c/p\u003e\n\u003cp\u003eFor context:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003emy \u003ca href=\"https://gist.github.com/kaushikgopal/c802ca81044066f7d93a50c5269cc812\"\u003e\u003ccode\u003ekarabiner.json\u003c/code\u003e\u003c/a\u003e file currently has about 920 lines\u003c/li\u003e\n\u003cli\u003emy \u003ca href=\"https://gist.github.com/kaushikgopal/ff7a92bbc887e59699c804b59074a126\"\u003e\u003ccode\u003ekarabiner.edn\u003c/code\u003e\u003c/a\u003e file on the other hand has 140 lines (and most of it is liberal commenting and whitespace to combat \u003ccode\u003eedn\u003c/code\u003e\u0026rsquo;s terseness)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{:des \u0026#34;o-mode: quick open\u0026#34;\n :rules [:o-mode\n            [:f [:open \u0026#34;/Applications/Firefox.app\u0026#34;] ]\n            [:g [:km \u0026#34;0) Search Google\u0026#34;] ]\n            [:i [:open \u0026#34;/Applications/iTerm.app\u0026#34;] ]\n            [:q [:km \u0026#34;open: Quip\u0026#34;] ]\n            [:t [:open \u0026#34;/Applications/Things3.app\u0026#34;] ]\n]}\n\n{:des \u0026#34;right cmd -\u0026gt; right ctrl\u0026#34;\n :rules [\n   [:##right_command :right_control [:apl-usb-int :apl-bt :ap2] ]\n ]}\n\n{:des \u0026#34;left shift once -\u0026gt; (\u0026#34;\n :rules [\n   [:##left_shift :left_shift nil {:alone :!S9} ]\n ]}\n\n{:des \u0026#34;right shift once -\u0026gt; )\u0026#34;\n :rules [\n   [:##right_shift :right_shift nil {:alone :!S0} ]\n ]}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSpeaking as a programmer the edn format is quite possibly the most terse, terrible format I\u0026rsquo;ve encountered. I gave a quick look at \u003ca href=\"https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org\"\u003esome of the examples\u003c/a\u003e and almost abandoned my Goku effort half way.\u003c/p\u003e\n\u003cp\u003eBut after spending an 11 hour flight back home fiddling and learning how to use Goku, I\u0026rsquo;ve gotten a decent hang of the format and I admit it\u0026rsquo;s \u003cem\u003esuper\u003c/em\u003e mantainable.\u003c/p\u003e\n\u003ch2 id=\"how-to-read-and-use-goku\"\u003eHow to read and use Goku\u003c/h2\u003e\n\u003cp\u003eI\u0026rsquo;m not going to explain how to use Goku, but I\u0026rsquo;ll tell you what helped me pick it up:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eRead this \u003ca href=\"https://medium.com/@nikitavoloboev/karabiner-god-mode-7407a5ddc8f6\"\u003efantastic blog post by Nikita Voloboev\u003c/a\u003e once\u003c/li\u003e\n\u003cli\u003eFollow along then with the \u003ca href=\"https://github.com/yqrashawn/GokuRakuJoudo/blob/master/tutorial.md\"\u003eofficial tutorial\u003c/a\u003e as they explain the basics\u003c/li\u003e\n\u003cli\u003eRead the blog post from step 1 again, given you\u0026rsquo;re a little more familiar with the format\u003c/li\u003e\n\u003cli\u003eRead my \u003ca href=\"https://gist.github.com/kaushikgopal/ff7a92bbc887e59699c804b59074a126\"\u003e\u003ccode\u003ekarabiner.edn\u003c/code\u003e\u003c/a\u003e file\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eI spent a lot of time commenting \u003ca href=\"https://gist.github.com/kaushikgopal/ff7a92bbc887e59699c804b59074a126\"\u003emy edn file\u003c/a\u003e with the hope of making it more readable, so hope that helps. I plan on making a youtube video at some point demoing all this but until that happens, hope this blog post is helpful.\u003c/p\u003e\n\u003cp\u003eHit me up on \u003ca href=\"https://twitter.com/kaushikgopal\"\u003eTwitter\u003c/a\u003e for queries or comments. Super curious to see other creative hacks people can come up with this technique.\u003c/p\u003e\n\u003ch3 id=\"example-edns\"\u003eExample edns\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/yqrashawn/GokuRakuJoudo/blob/master/in-the-wild.md\"\u003egoku repo example\u0026rsquo;s in the\nwild\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/kchen0x/k-goku/blob/master/karabiner.edn\"\u003ek-goku\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/nikitavoloboev/dotfiles/blob/178ed88fadaeb889e8a5431e9790f0791dd75b05/karabiner/karabiner.edn#L718\"\u003enikitavoloboev\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org\"\u003eexamples.org\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eMechanical keyboards are a costly unhealthy obsession. I switch between an \u003ca href=\"http://en.obins.net/anne-pro2\"\u003eAnne Pro 2\u003c/a\u003e and a \u003ca href=\"https://mechanicalkeyboards.com/shop/index.php?l=product_list\u0026amp;c=647\"\u003eTADA68\u003c/a\u003e these days.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "Architecting Android and iOS app features for 2020",
        "date_published" : "2019-10-26T00:00:00Z",
        "id" : "https://kau.sh/ppt/architecting-android-and-ios-app-features-for-2020/",
        "file_path" : "ppt/2019-10-26-mobilization-ix.md",
        "url" : "https://kau.sh/ppt/architecting-android-and-ios-app-features-for-2020/",
        "content_html" : "\u003cp\u003eInspired by some well known architecture patterns like MVVM/MVI, I set out to come up with an agnostic set of principles that would help developers build features in their app in a robust, safe and (importantly) \u0026ldquo;testable\u0026rdquo; way. At Instacart, we\u0026rsquo;ve started to use these principles to build features on both iOS and Android.\u003c/p\u003e\n\u003cp\u003eIn this talk, we\u0026rsquo;ll examine these principles, discuss the merits (+ disadvantages!) and see how these can be implemented with precise code examples. Having implemented this pattern for sometime now at Instacart, I\u0026rsquo;ll also share some of our learnings along the way for both platforms.\u003c/p\u003e\n\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n  \u003ciframe src=\"https://www.youtube.com/embed/BdGVCsHj2vU\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" allowfullscreen title=\"YouTube Video\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\n\u003c!-- raw HTML omitted --\u003e\n\u003ch2 id=\"slides\"\u003eSlides\u003c/h2\u003e\n\u003cscript async class=\"speakerdeck-embed\" data-id=\"8e60b645b4d34a42a0d3d3ba0956102b\" data-ratio=\"\" src=\"//speakerdeck.com/assets/embed.js\"\u003e\u003c/script\u003e\n"
    },
    {
        "title" : "Speed up your Android Studio",
        "date_published" : "2019-08-19T00:00:00-07:00",
        "id" : "https://kau.sh/blog/android-studio-slow-as-fxxx/",
        "file_path" : "blog/2019-08-19-android-studio-slow-as-fxxx.md",
        "url" : "https://kau.sh/blog/android-studio-slow-as-fxxx/",
        "content_html" : "\u003cp\u003eI use a 13\u0026quot; MacBook Pro at work these days. Android Studio frequently sent my machine into a tailspin.\u003c/p\u003e\n\u003cp\u003eOver time, I\u0026rsquo;ve had to tweak and update my AS settings to make AS work well on the 13\u0026quot;. I figured I should post them here for posterity and the benefit of other AndroidDevs battling with deathly slow AS experiences.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;m posting the abridged instructions and linking to the blog posts that led me to these settings, if you care for the details.\u003c/p\u003e\n\u003ch1 id=\"switch-to-a-local-gradle-distribution\"\u003eSwitch to a local gradle distribution\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl -s \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;https://get.sdkman.io\u0026#34;\u003c/span\u003e | bash \u003cspan style=\"color:#75715e\"\u003e# install sdkman\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# install your preferred version of gradle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esdk install gradle 5.4.1\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esdk default gradle 5.4.1\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egradle --status\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOnce you have a local distribution of gradle installed, switch the \u0026ldquo;Gradle home:\u0026rdquo; setting in your Android Studio project to point to your local gradle distribution. You\u0026rsquo;ll have to do these for all your projects individually.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/as-local-gradle.png\" alt=\"Android Studio \u0026gt; Preferences \u0026gt; Build, Execution, Deployment \u0026gt; Gradle\"\u003e\u003c/p\u003e\n\u003cp\u003eWith this setup, when you run gradle on the command line or Android Studio, they\u0026rsquo;ll share the same gradle daemon instances.\u003c/p\u003e\n\u003ch2 id=\"--also-make-sure-the-daemons-from-as-and-your-command-line-are-compatible\"\u003e☝️  also make sure the daemons from AS and your command line are compatible\u003c/h2\u003e\n\u003cp\u003eWell almost. You also have to make sure you\u0026rsquo;re using the same JDK otherwise the gradle daemons will be incompatible.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# you have sdkman installed already\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esdk install java 8.0.202-zulu  \u003cspan style=\"color:#75715e\"\u003e# use java 8 preferably\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esdk default java 8.0.202-zulu\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esdk install kotlin \u003cspan style=\"color:#75715e\"\u003e# cause why not\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow point Android Studio to use this jdk like so:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/as-same-jdk.png\" alt=\"Android Studio Project Settings \u0026gt; SDK Location\"\u003e\u003c/p\u003e\n\u003cp\u003e💥 now we\u0026rsquo;re in business.\u003c/p\u003e\n\u003ch1 id=\"disable-any-useless-plugins-or-add-ons-that-you-dont-need\"\u003eDisable any useless plugins or add-ons that you don\u0026rsquo;t need\u003c/h1\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/as-plugins-disabled.png\" alt=\"Preference \u0026gt; Plugins \u0026gt; Installed\"\u003e\u003c/p\u003e\n\u003cp\u003eDon\u0026rsquo;t get carried away and disable \u003cem\u003eeverything\u003c/em\u003e here. It will hose your Android Studio. I know this cause I sure as hell tried.\u003c/p\u003e\n\u003cp\u003eThe only plugins I have enabled are:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e(Downloaded) IdeaVim\u003c/li\u003e\n\u003cli\u003eAndroid APK Suport\u003c/li\u003e\n\u003cli\u003eAndroid NDK Support\u003c/li\u003e\n\u003cli\u003eGit Integration (cause i like Intellij\u0026rsquo;s Differ)\u003c/li\u003e\n\u003cli\u003eGradle\u003c/li\u003e\n\u003cli\u003eGroovy\u003c/li\u003e\n\u003cli\u003eIl8n for Java\u003c/li\u003e\n\u003cli\u003eIntellij Configuration Script\u003c/li\u003e\n\u003cli\u003eIntelliLang\u003c/li\u003e\n\u003cli\u003eJava Bytecode Decompiler\u003c/li\u003e\n\u003cli\u003eJUnit\u003c/li\u003e\n\u003cli\u003eKotlin\u003c/li\u003e\n\u003cli\u003eProperties Support\u003c/li\u003e\n\u003cli\u003eSmali Support\u003c/li\u003e\n\u003cli\u003eYAML\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eEverything else is disabled. \u003ca href=\"https://www.reddit.com/r/androiddev/comments/7sxhig/android_studio_slower_when_using_kotlin/dt88pgn/\"\u003eThis crony from Bob\u0026rsquo;s Discount Action Bars\u003c/a\u003e apparently knows a thing or two about Android.\u003c/p\u003e\n\u003ch1 id=\"tweak-your-studiovmoptions-file\"\u003eTweak your \u003ccode\u003estudio.vmoptions\u003c/code\u003e file\u003c/h1\u003e\n\u003cp\u003eThe official \u003ca href=\"https://developer.android.com/studio/intro/studio-config.html\"\u003edeveloper docs\u003c/a\u003e talk about configuring this properly.\u003c/p\u003e\n\u003cp\u003etl;dr: in Android Studio head to \u003cem\u003e\u0026ldquo;Help \u0026gt; Edit Custom VM Options\u0026hellip;\u0026rdquo;\u003c/em\u003e and change it to the below:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#-Xms256m\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#-Xmx2048m\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-XX:ReservedCodeCacheSize\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e240m\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-XX:+UseCompressedOops\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-Dfile.encoding\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eUTF-8\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-XX:+UseConcMarkSweepGC\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-XX:SoftRefLRUPolicyMSPerMB\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e50\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-Dsun.io.useCanonCaches\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003efalse\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-Djava.net.preferIPv4Stack\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003etrue\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-Djdk.http.auth.tunneling.disabledSchemes\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-Djna.nosys\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003etrue\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-Djna.boot.library.path\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-da\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-Xverify:none\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-XX:ErrorFile\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e$USER_HOME/java_error_in_studio_%p.log\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-XX:HeapDumpPath\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e$USER_HOME/java_error_in_studio.hprof\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# ###############################################\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# custom settings from https://github.com/artem-zinnatullin/AndroidStudio-VM-Options/blob/master/studio.vmoptions\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# ###############################################\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Runs JVM in Server mode with more optimizations and resources usage\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# It may slow down the startup, but if you usually keep IDE running for few hours/days\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# JVM may profile and optimize IDE better. Feel free to remove this flag.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-server\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Sets the initial size of the heap, default value is 256m\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-Xms1G\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Max size of the memory allocation pool, default value is 1280m\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-Xmx2G\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Sets the size of the allocated class metadata space that will trigger a GC the first time it is exceeded, default max value is 350m\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-XX:MetaspaceSize\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e512m\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnything else you\u0026rsquo;ve come across that\u0026rsquo;s helped a lot? \u003ca href=\"https://twitter.com/kaushikgopal/status/1163684028651732995\"\u003eHit me up on Twitter\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"updates-since-my-post-was-originally-published\"\u003eUpdates since my post was originally published:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://twitter.com/TheSNAKY/status/1163703431237918720?s=20\"\u003e@TheSNAKY\u003c/a\u003e pointed me to an easier way to get to the Edit VM options.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://twitter.com/matthewcmckenna/status/1163834088509386754?s=20\"\u003e@matthewcmckenna\u003c/a\u003e reminded me that using sdk man, using the \u003ccode\u003e/current\u003c/code\u003e path is better as you upgrade versions. I\u0026rsquo;ve changed the commands here to mark the default installation and then just point to that within the Android Studio screenshots\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"useful-resources-and-reference-links\"\u003eUseful resources and reference links:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://medium.com/@mydogtom/tip-reduce-the-number-of-gradle-daemon-instances-by-using-local-distribution-56f645cf2c97\"\u003eTip: Use local Gradle distribution instead of wrapper\u003c/a\u003e and \u003ca href=\"https://medium.com/@mydogtom/tip-how-to-reuse-gradle-daemon-between-android-studio-and-terminal-df5232d63f38\"\u003eTip: How to reuse Gradle daemon between Android Studio and terminal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://medium.com/@championswimmer/bringing-android-app-build-times-down-by-95-at-zomato-a505d938e9b8\"\u003eBringing Android app build times down by 95% at Zomato\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
    },
    {
        "title" : "assertLastValue for RxJava TestObservers",
        "date_published" : "2019-08-18T00:00:00-07:00",
        "id" : "https://kau.sh/blog/rxjava-test-observer-assert-last-value/",
        "file_path" : "blog/2019-08-18-rxjava-test-observer-assert-last-value.md",
        "url" : "https://kau.sh/blog/rxjava-test-observer-assert-last-value/",
        "content_html" : "\u003cp\u003eThe \u003ca href=\"http://reactivex.io/RxJava/javadoc/io/reactivex/observers/TestObserver.html\"\u003eTestObserver\u003c/a\u003e is an RxJava staple for testing.\u003c/p\u003e\n\u003cp\u003eIt allows you to assert values in a stream, in the specific order they were emitted. Here\u0026rsquo;s a quick code snippet from the \u003ca href=\"https://github.com/kaushikgopal/movies-usf\"\u003emovies-usf repository\u003c/a\u003e \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kotlin\" data-lang=\"kotlin\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@Test\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonSearchingForMovieBladeRunner\u003c/span\u003e_shouldSeeSearchResult() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    viewModel = MSMainVm(mockApp, mockMovieRepo)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e viewStateTester = viewModel.viewState.test()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    viewModel.processInput(SearchMovieEvent(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;blade runner 2049\u0026#34;\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    viewStateTester.assertValueAt(\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        assertThat(\u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e.searchedMovieTitle).isEqualTo(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Searching Movie...\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    viewStateTester.assertValueAt(\u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        assertThat(\u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e.searchedMovieTitle).isEqualTo(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Blade Runner 2049\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf you look at \u003ca href=\"http://reactivex.io/RxJava/javadoc/io/reactivex/observers/BaseTestConsumer.html\"\u003ethe source for the base TestObserver\u003c/a\u003e, there are a bunch of these useful methods:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eassertValue(Predicate\u003c!-- raw HTML omitted --\u003e valuePredicate):\nAsserts that this TestObserver/TestSubscriber received exactly one onNext value for which the provided predicate returns true.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eassertValue(T value):\nAssert that this TestObserver/TestSubscriber received exactly one onNext value which is equal to the given value with respect to Objects.equals.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eassertValueAt(int index, Predicate\u003c!-- raw HTML omitted --\u003e valuePredicate):\nAsserts that this TestObserver/TestSubscriber received an onNext value at the given index for the provided predicate returns true.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eassertValueAt(int index, T value)\nAsserts that this TestObserver/TestSubscriber received an onNext value at the given index which is equal to the given value with respect to null-safe Object.equals.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eassertValues(T\u0026hellip; values)\nAssert that the TestObserver/TestSubscriber received only the specified values in the specified order.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eassertValuesOnly(T\u0026hellip; values)\nAssert that the TestObserver/TestSubscriber received only the specified values in the specified order without terminating.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eWhile all these operators are useful, most of them require you to know the precise index of the value you\u0026rsquo;re testing. Typically though when i\u0026rsquo;m testing a feature built with a USF architecture, I really only care about the last value emitted in my test case.\u003c/p\u003e\n\u003cp\u003eWhen working with a \u003ca href=\"https://github.com/kaushikgopal/movies-usf/blob/kg/feat/checklist-zone-demo/app/src/test/java/co/kaush/msusf/genres/DemoGenreVMTest.kt\"\u003emore recent example\u003c/a\u003e in my demo app: I had a checklist that I would toggle multiple times in different permutations and combinations. Depending on the final state of the checklist, a save button would be enabled/disabled. So my test really cares only about the very last value viz. the state of the save button. Knowing the precise index value of the final result started to get tiring.\u003c/p\u003e\n\u003cp\u003eAn argument could also be made that for this test, testing with the precise index value actually makes it a little brittle. Say I introduced an additional loading state (for some reason), I would have to go back and change all my tests to update the precise index number. \u003cem\u003eI fully understand this is tricky territory cause some would argue you would also want to test the intermediate loading states\u003c/em\u003e. All I\u0026rsquo;m saying is that for these specific tests, I didn\u0026rsquo;t care about the intermediate loading state, just the final output.\u003c/p\u003e\n\u003cp\u003eSo if we ran with that idea, how do you make the test less brittle?\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kotlin\" data-lang=\"kotlin\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003evsTester.assertValueAt(vsTester.valueCount() - \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// predicate condition tested\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs simple as that, just test the last value using \u003ccode\u003evalueCount\u003c/code\u003e. But if you\u0026rsquo;re in Kotlin land, you\u0026rsquo;re spoilt with all those tasty elegant apis, so you definitely want to make this easier by adding an extension function like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kotlin\" data-lang=\"kotlin\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u0026lt;\u003cspan style=\"color:#a6e22e\"\u003eT\u003c/span\u003e\u0026gt; \u003cspan style=\"color:#a6e22e\"\u003eTestObserver\u003c/span\u003e\u0026lt;T\u0026gt;.assertLastValue(predicate: (T) \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e Boolean) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    assertValueAt(valueCount() - \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e) { predicate.invoke(\u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e) }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e💥\u003c/p\u003e\n\u003cp\u003eNow these tests read much more fluidly:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kotlin\" data-lang=\"kotlin\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003evsTester.assertLastValue {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// predicate condition tested\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTake a look at the \u003ca href=\"https://github.com/kaushikgopal/movies-usf/blob/kg/feat/checklist-zone-demo/app/src/test/java/co/kaush/msusf/genres/DemoGenreVMTest.kt\"\u003eDemoGenreVmTest\u003c/a\u003e class if you\u0026rsquo;re interested to see a bunch of these in full action.\u003c/p\u003e\n\u003cp\u003eRemember the ABC of programming - Always Be CTesting\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003emovies-usf is a simple open source Android demo app where I demonstrate how one can build features using a \u003ca href=\"https://speakerdeck.com/kaushikgopal/unidirectional-state-flow-patterns-a-refactoring-story\"\u003eUnidirectional State Flow (MVI)\u003c/a\u003e pattern\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "Is iOS starting to get fragmented?",
        "date_published" : "2019-06-13T00:00:00-07:00",
        "id" : "https://kau.sh/blog/ios-might-be-fragmented/",
        "file_path" : "blog/2019-06-13-ios-might-be-fragmented.md",
        "url" : "https://kau.sh/blog/ios-might-be-fragmented/",
        "content_html" : "\u003cp\u003eI\u0026rsquo;ve been dipping my toes into some iOS development recently. Nothing too crazy, just pairing with some colleagues and trying to see how we can jointly improve the technical design on both platforms \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003cp\u003eIt so happens that Apple just finished it\u0026rsquo;s annual conference \u003ca href=\"https://developer.apple.com/wwdc/\"\u003eWWDC\u003c/a\u003e, so I\u0026rsquo;ve been following the announcements closer this timer around. In that process, I ran across a tweet (from \u003ca href=\"https://twitter.com/jnadeau\"\u003eJeff Nadeau\u003c/a\u003e who\u0026rsquo;s a developer working at Apple):\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSort of blown away by the take that a min OS target is harmful to a new framework. It’s absurdly small-minded; one or two years of adoption lag is nothing when the arc of such a system is measured in decades.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eTo set a little more context: the system Jeff talks about here is \u003ca href=\"https://developer.apple.com/xcode/swiftui/\"\u003eSwiftUi\u003c/a\u003e, a new framework library that will truly change the way iOS developers write their UI code. The niggle here is that SwiftUI is limited to just adopters of iOS 13.\u003c/p\u003e\n\u003cp\u003eThis basically means:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSince the adoption rate for new OS updates is about 2 years for iOS, iOS 13 (newest version) will take 2 years to roll out to most iPhones\u003c/li\u003e\n\u003cli\u003eiPhones 6 and below will never be able to run apps built with SwiftUi (as iOS 13 will run on iPhone 6S and later only)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI found this bizarrely familiar since this was the exact same problem Google had with Android\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e for the longest time. It was frustrating for Android developers because we would come back all excited from \u003ca href=\"https://events.google.com/io/\"\u003eGoogle I/O\u003c/a\u003e, only to have the winds promptly taken out of our sails after we reviewed the horrendous state of \u003ca href=\"https://developer.android.com/about/dashboards\"\u003eOS adoption\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIt would be pretty irresponsible to start using SwiftUi right now for app developers building apps today.\u003c/p\u003e\n\u003cp\u003eI do want to make it clear: this is not what Jeff is saying. He\u0026rsquo;s not suggesting everyone start using SwiftUi right now. The latter part of the tweet clarifies this:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026hellip; when the arc of such a system is measured in decades\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e2 years might just be the cost to pay for iOS developers to have an amazing framework like SwiftUi that will eventually make development cycles 4x better. Especially since a sea of change is measured in longer cycles (10 years?).\u003c/p\u003e\n\u003cp\u003eThat being said, this is painful to hear for app developers today. 2 years is excruciatingly painful. Trust me, us Android developers have been there \u003ca href=\"https://twitter.com/minsdkversion\"\u003emultiple times\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eBut this fragmentation problem is something that the Android team has experienced and countered. From the \u003ca href=\"https://android.googlesource.com/platform/frameworks/support/+/androidx-master-dev/README.md\"\u003eAndroid Jetpack\u003c/a\u003e docs:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eJetpack comprises the androidx.* package libraries, \u003cstrong\u003eunbundled from the platform APIs\u003c/strong\u003e. This means that it offers backward compatibility and is updated more frequently than the Android platform, making sure you always have access to the latest and greatest versions of the Jetpack components.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis means that when \u003ca href=\"https://developer.android.com/jetpack/compose\"\u003eJetpack Compose\u003c/a\u003e (Android\u0026rsquo;s SwiftUi) comes out, developers can start using it right away. They won\u0026rsquo;t have to wait for their users to adopt the newest OS update.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;m curious if the existing iOS infrastructure didn\u0026rsquo;t allow such a mechanism or it was just a conscious decision to take SwiftUi forward faster, without being held back by the burdern of backwards compatibility.\u003c/p\u003e\n\u003cp\u003eClosing remarks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eEven though Jetpack Compose was announced earlier, SwiftUi looks to be in far better shape as of today. Just \u003ca href=\"https://developer.apple.com/tutorials/swiftui/tutorials\"\u003elook at the examples and documentation\u003c/a\u003e (\u003cem\u003ealso @\u003ca href=\"https://twitter.com/RunChristinaRun/status/1138987880674521088\"\u003eRunChristinaRun\u003c/a\u003e says so\u003c/em\u003e)\u003c/li\u003e\n\u003cli\u003eSwiftUi will works on iOS, MacOS, iPadOS, watchOS and tvOS. That\u0026rsquo;s incredible. Google hasn\u0026rsquo;t confirmed yet if JetPack Compose will work on more platforms, but the way it\u0026rsquo;s being built, it sounds like it \u003cem\u003emight be possible\u003c/em\u003e\u003c/li\u003e\n\u003cli\u003eIf you know me, you\u0026rsquo;ll know why this title is kind of funny\u003c/li\u003e\n\u003cli\u003eSee \u003ca href=\"https://mjtsai.com/blog/2019/06/10/supporting-the-iphone-se-resolution/\"\u003esupporting the iPhone SE resolution\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003e\u003cem\u003eI also diligently throw shade every time I see them struggle with Xcode trying to autocomplete something. It\u0026rsquo;s almost laughable how far ahead Android studio is.\u003c/em\u003e\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eGranted the case of OS fragmentation on Android is exacerbated by the fact that OEMs control when the device gets an OS update (if at all).\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "Processing a sorted array is faster than an unsorted one?",
        "date_published" : "2019-06-08T00:00:00-07:00",
        "id" : "https://kau.sh/blog/processing-sorted-array-is-faster-than-processing-unsorted-array/",
        "file_path" : "blog/2019-06-08-processing-sorted-array-is-faster-than-processing-unsorted-array.md",
        "url" : "https://kau.sh/blog/processing-sorted-array-is-faster-than-processing-unsorted-array/",
        "content_html" : "\u003cp\u003eThis super intesting \u003ca href=\"https://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-processing-an-unsorted-array\"\u003estack overflow answer\u003c/a\u003e explains why -in programming- if you have a sorted array, somehow magically it can seem like it\u0026rsquo;s easier to process each element vs processing the same array if it were unsorted.\u003c/p\u003e\n\u003cp\u003etl;dr - branch prediction\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWith a sorted array, the condition data[c] \u0026gt;= 128 is first false for a streak of values, then becomes true for all later values. That\u0026rsquo;s easy to predict. With an unsorted array, you pay for the branching cost.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
    },
    {
        "title" : "Space Shuttle style programming",
        "date_published" : "2019-06-05T00:00:00-07:00",
        "id" : "https://kau.sh/blog/space-shuttle-style-programming/",
        "file_path" : "blog/2019-06-05-space-shuttle-style-programming.md",
        "url" : "https://kau.sh/blog/space-shuttle-style-programming/",
        "content_html" : "\u003cp\u003eSometime back I ran across a thread where folks talked about this programming style called \u0026ldquo;Space Shuttle style\u0026rdquo; that the Kubernetes codebase followed.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kotlin\" data-lang=\"kotlin\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// ==================================================================\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// PLEASE DO NOT ATTEMPT TO SIMPLIFY THIS CODE.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// KEEP THE SPACE SHUTTLE FLYING.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// ==================================================================\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e//\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// This controller is intentionally written in a very verbose style.  You will\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// notice:\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e//\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// 1.  Every \u0026#39;if\u0026#39; statement has a matching \u0026#39;else\u0026#39; (exception: simple error\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e//     checks for a client API call)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// 2.  Things that may seem obvious are commented explicitly\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e//\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// We call this style \u0026#39;space shuttle style\u0026#39;.  Space shuttle style is meant to\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// ensure that every branch and condition is considered and accounted for -\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// the same way code is written at NASA for applications like the space\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// shuttle.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e//\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Originally, the work of this controller was split amongst three\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// controllers.  This controller is the result a large effort to simplify the\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// PV subsystem.  During that effort, it became clear that we needed to ensure\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// that every single condition was handled and accounted for in the code, even\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// if it resulted in no-op code branches.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e//\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// As a result, the controller code may seem overly verbose, commented, and\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// \u0026#39;branchy\u0026#39;.  However, a large amount of business knowledge and context is\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// recorded here in order to ensure that future maintainers can correctly\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// reason through the complexities of the binding behavior.  For that reason,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// changes to this file should preserve and add to the space shuttle style.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e//\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// ==================================================================\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// PLEASE DO NOT ATTEMPT TO SIMPLIFY THIS CODE.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// KEEP THE SPACE SHUTTLE FLYING.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// ==================================================================\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo be clear: I don\u0026rsquo;t follow the Space Shuttle style programming with my own code. However, I\u0026rsquo;ve noticed now that when I do comment my code, I\u0026rsquo;m a little more liberal with my explanations. It\u0026rsquo;s made me realize that commenting your code doesn\u0026rsquo;t necessarily always mean bastardizing it.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eOriginally, the work of this controller was split amongst three controllers. This controller is the result a large effort to simplify the PV subsystem.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHowever, a large amount of business knowledge and context is recorded here in order to ensure that future maintainers can correctly reason through the complexities of the binding behavior.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis is how I feel sometimes when people abuse abstraction. Yes, composition is important but long files are sometimes ok if it makes the code easier to comprehend by preventing that extra cognitive jump (required to first understand the name of the newly abstracted component).\u003c/p\u003e\n\u003cp\u003eFrom the \u003ca href=\"https://github.com/kubernetes/kubernetes/blob/ec2e767e59395376fa191d7c56a74f53936b7653/pkg/controller/volume/persistentvolume/pv_controller.go\"\u003eKubernetes source code\u003c/a\u003e.\u003c/p\u003e\n"
    },
    {
        "title" : "IO vs CPU operations",
        "date_published" : "2019-06-03T00:00:00-07:00",
        "id" : "https://kau.sh/blog/io-cpu-bound-threads/",
        "file_path" : "blog/2019-06-03-io-cpu-bound-threads.md",
        "url" : "https://kau.sh/blog/io-cpu-bound-threads/",
        "content_html" : "\u003cp\u003eThis is a fantastic post by Erik where he explains the nuance between \u003ca href=\"https://en.wikipedia.org/wiki/I/O_bound\"\u003eIO-bound\u003c/a\u003e and \u003ca href=\"https://en.wikipedia.org/wiki/CPU_bound\"\u003eCPU-bound\u003c/a\u003e operations in programming.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026hellip; libraries have dedicated APIs for I/O scheduling work, separate from other types of operations\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026hellip;. but why is this the case? Why don’t we use a single thread pool for all background operations? The operating system will handle the scheduling of these threads the same\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI love how this specific question is framed (a good interview question for advanced mobile developers):\u003c/p\u003e\n\u003cdiv class='callout left'\u003e\n    \u003cp\u003eWhy can\u0026rsquo;t we just split work into:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003emain (or UI) thread and\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;all other background work\u0026rdquo; thread pool?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003c/div\u003e\n\u003cp\u003eThis way the UI shouldn\u0026rsquo;t stutter and if you have a pool of threads running in the background, all that background work will conveniently be executed, no problem. Right?\u003c/p\u003e\n\u003cp\u003eEven though both I/O-bound and CPU-bound work need to be executed in the background for mobile development, they have different demands and stress the operating system (OS) differently. Hence the need for different thread pool types to handle this kind of work differently.\u003c/p\u003e\n\u003cdiv class='callout left'\u003e\n    \u003cul\u003e\n\u003cli\u003eCPU operations (like number crunching, computation etc.) run incredibly fast\u003c/li\u003e\n\u003cli\u003eI/O operations on the other hand (reading from a database, network etc.) take longer as the OS has to wait for underlying hardware to retrieve and deliver the data\u003c/li\u003e\n\u003cli\u003eTypically the underlying hardware sends out a signal \u003ccode\u003eIOWait\u003c/code\u003e to the OS while the underlying hardware is out and about doing the IO work\u003c/li\u003e\n\u003cli\u003eInstead of sitting and twiddling its thumbs, the OS should be finishing other tasks in the meantime (especially ones that are not waiting on underlying hardware) through other threads\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWhen the operating system encounters an IOwait, it pauses the execution of that thread and is free to pick up another thread that is ready to run. Theoretically, an operating system can have an unlimited number of threads that are sleeping due to IOwait, without the user noticing any difference\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThat last point is subtle: this is why \u003cem\u003eyou don\u0026rsquo;t want to mix CPU and I/O threads in the same pool\u003c/em\u003e. You could potentially have a whole bunch of them \u003ccode\u003eIOWait\u003c/code\u003eing and precious CPU work that could otherwise be done in the meantime, will also hang in the process waiting for that I/O work. Armed with this knowledge, if you\u0026rsquo;re into Rx you might ask:\u003c/p\u003e\n\u003cp\u003eHow many maximum threads can the \u003ca href=\"http://reactivex.io/RxJava/javadoc/io/reactivex/schedulers/Schedulers.html#io--\"\u003eIO Scheduler\u003c/a\u003e have?\u003c/p\u003e\n\u003cp\u003eUnbounded! This should also makes sense now since we don\u0026rsquo;t want one I/O thread ever waiting on another since \u003ccode\u003eIOWait\u003c/code\u003eing can take quite some time. Note that this is still a \u0026ldquo;pool\u0026rdquo; so threads are recycled but if all them are currently doing some work, Rx will spawn a new one everytime.\u003c/p\u003e\n\u003cp\u003eHow many maximum threads can the \u003ca href=\"http://reactivex.io/RxJava/javadoc/io/reactivex/schedulers/Schedulers.html#computation--\"\u003eComputation Scheduler\u003c/a\u003e spawn?\u003c/p\u003e\n\u003cp\u003eBasically, the number of processors your CPU has. My Pixel for example has a quad core processor, so that\u0026rsquo;s 4. This should also make sense now because CPU work should run blazingly fast, you probably don\u0026rsquo;t want an unbounded pool but some kind of optimum upper limit. That upper limit is the number of cores you have handy.\u003c/p\u003e\n\u003cp\u003eErik\u0026rsquo;s a really smart guy. You should \u003ca href=\"https://twitter.com/ErikHellman\"\u003efollow him\u003c/a\u003e on Twitter.\u003c/p\u003e\n"
    },
    {
        "title" : ".hide() your Subjects - RxJava tip",
        "date_published" : "2019-03-30T00:00:00-07:00",
        "id" : "https://kau.sh/blog/rx-tip-hide-your-subjects/",
        "file_path" : "blog/2019-03-30-rx-tip-hide-your-subjects.md",
        "url" : "https://kau.sh/blog/rx-tip-hide-your-subjects/",
        "content_html" : "\u003cp\u003eA not so well known api in RxJava is the \u003ca href=\"http://reactivex.io/RxJava/javadoc/io/reactivex/Observable.html#hide--\"\u003e\u003ccode\u003e.hide()\u003c/code\u003e\u003c/a\u003e operator.\u003c/p\u003e\n\u003ch2 id=\"when-does-one-use-the-hide-operator-in-rx\"\u003eWhen does one use the hide operator in Rx?\u003c/h2\u003e\n\u003cp\u003eFrom the docs:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHides the identity of this Observable and its Disposable.\u003c/p\u003e\n\u003cp\u003eAllows hiding extra features such as Subject\u0026rsquo;s Observer methods or preventing certain identity-based optimizations (fusion). there are a lot of complex operations that take place internally in RxJava (like internal queue creation, worker instantiation + release, numerous atomic variables being created and modified.)\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIf this doesn\u0026rsquo;t make too much sense, let\u0026rsquo;s look at examples to make this clear. Consider a typical MVVM usecase:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kotlin\" data-lang=\"kotlin\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMyAndroidVm\u003c/span\u003e : ViewModel() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e outputSubject = \u003cspan style=\"color:#a6e22e\"\u003eBehaviorSubject\u003c/span\u003e.createOnDefault(initialViewState())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003einit\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eObservable\u003c/span\u003e.just(service.pollModelData())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            .map {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#75715e\"\u003e// ... do something with the Event that pipes a result\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e                \u003cspan style=\"color:#75715e\"\u003e//     or view state eventually\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e            }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            .subscribe { viewState \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                outputSubject.onNext(viewState)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003elistenToViewState\u003c/span\u003e(): BehaviorSubject\u0026lt;ViewState\u0026gt; {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e outputSubject\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn this sample code, the ViewState is basically what the Activity would consume. So within the ViewModel, we pipe the data into a Subject, which is then exposed to the Activity like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kotlin\" data-lang=\"kotlin\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMyAndroidActivity\u003c/span\u003e: Activity {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eoverride\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonResume\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            viewModel.listenToViewState()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                .observeOn(\u003cspan style=\"color:#a6e22e\"\u003eAndroidSchedulers\u003c/span\u003e.mainThread())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                .subscribe { viewState \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                   \u003cspan style=\"color:#75715e\"\u003e// bind Android Views and ViewState object\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e                }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis is all great, however the trouble with exposing a Subject is that it allows the activity to modify the internal state of the Behavior Subject from the outside. This is non-ideal as we only want the ViewModel controlling this.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kotlin\" data-lang=\"kotlin\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMyAndroidActivity\u003c/span\u003e: Activity {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eoverride\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonResume\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        viewModel.listenToViewState()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            .onNext(badViewState()) \u003cspan style=\"color:#75715e\"\u003e// we want to avoid this\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e            .observeOn(\u003cspan style=\"color:#a6e22e\"\u003eAndroidSchedulers\u003c/span\u003e.mainThread())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            .subscribe { viewState \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#75715e\"\u003e// bind Android Views and ViewState object\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e            }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo we don\u0026rsquo;t want to expose the Subject directly. It would make more sense instead to just expose an Observable.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis is where the \u003ccode\u003e.hide()\u003c/code\u003e operator comes in handy. It basically converts a Subject into an Observable.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kotlin\" data-lang=\"kotlin\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// inside the ViewModel\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003elistenToViewState\u003c/span\u003e(): Observable\u0026lt;ViewState\u0026gt; {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    outputSubject.hide()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// this returns an Observable (instead of a Subject)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBut there\u0026rsquo;s actually more to the hide operator. It\u0026rsquo;s not as simple as merely converting a Subject -\u0026gt; Observable. If i merely wanted to just convert the Subject to an Observable, I could have just used the cast operator:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kotlin\" data-lang=\"kotlin\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eoutputSubject.cast(ViewState\u003cspan style=\"color:#f92672\"\u003e::\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e.java) \u003cspan style=\"color:#75715e\"\u003e// this returns an Observable\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo you may ask when should one use \u003ccode\u003e.hide\u003c/code\u003e vs just a \u003ccode\u003e.cast\u003c/code\u003e\u003c/p\u003e\n\u003ch2 id=\"operator-fusion-and-performance\"\u003eOperator fusion and performance\u003c/h2\u003e\n\u003cp\u003eLet\u0026rsquo;s revisit the documentation for \u003ccode\u003e.hide\u003c/code\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAllows hiding extra features such as Subject\u0026rsquo;s Observer methods or preventing certain identity-based optimizations (fusion).\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis is where things get interesting. We\u0026rsquo;ve already seen the \u0026ldquo;hiding extra features such as Subject\u0026rsquo;s Observer methods\u0026rdquo; bit through our example.\u003c/p\u003e\n\u003cp\u003eBut apparently, there are also some identity-based optimizations that are avoided. I wasn\u0026rsquo;t aware of what these optimizations were but RxJava savante and maintainer David Karnok has written a couple of \u003ca href=\"http://akarnokd.blogspot.com/2016/03/operator-fusion-part-1.html\"\u003egreat\u003c/a\u003e \u003ca href=\"http://akarnokd.blogspot.com/2016/04/operator-fusion-part-2-final.html\"\u003eposts\u003c/a\u003e on operator fusion.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;m not going to regurgitate his content here but the tl;dr version is - for all the thread hopping and asynchronous magic that RxJava enables, there are some internal costs to pay (obviously). When you combine a sequence of operators (which you\u0026rsquo;re bound to do for any Rx call), there are times where we incur an overhead.\u003c/p\u003e\n\u003cp\u003eOperator fusion is the idea that we can fuse or combine some of the internal operations to help reduce some of that overhead. If you want a more detailed (and accurate) description of the details, head on over to \u003ca href=\"http://akarnokd.blogspot.com/2016/03/operator-fusion-part-1.html\"\u003eDavid\u0026rsquo;s blog\u003c/a\u003e for some of those details.\u003c/p\u003e\n\u003cp\u003eSo if you don\u0026rsquo;t need some of these additional optimizations, use the \u003ca href=\"http://reactivex.io/RxJava/javadoc/io/reactivex/Observable.html#hide--\"\u003e\u003ccode\u003e.hide()\u003c/code\u003e\u003c/a\u003e operator.\u003c/p\u003e\n\u003cp\u003eI also love looking at the \u003ca href=\"https://github.com/ReactiveX/RxJava/blob/2.x/src/main/java/io/reactivex/Observable.java#L9459\"\u003esource code\u003c/a\u003e, so i did just that for \u003ccode\u003e.hide\u003c/code\u003e and noticed it simply wraps and sends the observable with \u003ca href=\"https://github.com/ReactiveX/RxJava/blob/579e90dc21937b900877a8baf3918cdca22d3a91/src/main/java/io/reactivex/internal/operators/observable/ObservableHide.java\"\u003e\u003ccode\u003eObservableHide\u003c/code\u003e\u003c/a\u003e. This proces of re-creating a wrapped version of the \u003ccode\u003eObservableHide\u003c/code\u003e pares down a lot of the operator functionality. Reading the source also made me realize that this would work:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kotlin\" data-lang=\"kotlin\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eoutputSubject.hide().hide().hide().hide().hide()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBut I wouldn\u0026rsquo;t be worrying about performance and functionality at that point.\u003c/p\u003e\n"
    },
    {
        "title" : "Japanese Manhole art",
        "date_published" : "2019-03-18T00:00:00-07:00",
        "id" : "https://kau.sh/blog/japanese-manhole-art/",
        "file_path" : "blog/2019-03-18-japanese-manhole-art.md",
        "url" : "https://kau.sh/blog/japanese-manhole-art/",
        "content_html" : "\u003cp\u003eThe Japanese can chalk this up to their creative laurels along with:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ethe \u003ca href=\"https://www.youtube.com/watch?v=35zY-UnrY6s\"\u003eFujifilm X100S\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ethe \u003ca href=\"https://en.wikipedia.org/wiki/Walkman\"\u003eSony walkmans\u003c/a\u003e and\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=HBNqOHX57Qg\"\u003eone of my favorite Anime\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure class=\"full-bleed\"\u003e\n\n    \n        \n            \u003cimg src=\"https://assets.atlasobscura.com/media/W1siZiIsInVwbG9hZHMvYXNzZXRzLzllMTAyMGM4NWI1YmEyNWM3OF9HZXR0eUltYWdlcy05MDQ2NDU1OTQuanBnIl0sWyJwIiwiY29udmVydCIsIiJdLFsicCIsImNvbnZlcnQiLCItcXVhbGl0eSA4MSAtYXV0by1vcmllbnQiXSxbInAiLCJ0aHVtYiIsIjEyODB4PiJdXQ/GettyImages-904645594.jpg\"\n                class=\"full-bleed\"\n                \n                    alt=\"Japanese Manhole Art\"\n                \n                \n                \n            /\u003e\n\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n"
    },
    {
        "title" : "Kotlin 1.3.20 released",
        "date_published" : "2019-01-27T00:00:00-07:00",
        "id" : "https://kau.sh/blog/kotlin-1.3.2-released/",
        "file_path" : "blog/2019-01-27-kotlin-1.3.2-released.md",
        "url" : "https://kau.sh/blog/kotlin-1.3.2-released/",
        "content_html" : "\u003cblockquote\u003e\n\u003cp\u003eThis feature is beneficial for projects defining custom source sets, since the compilation of independent source sets can be parallelized. In the case of multiplatform projects, targets for different platforms can also be built in parallel. For Android, the debug and release build types can be compiled in parallel.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis sounds pretty cool, however I paused to think how often would i need the \u003ccode\u003edebug\u003c/code\u003e and \u003ccode\u003erelease\u003c/code\u003e build types to be compiled in parallel? Probably CI like environment? oooo but with \u003ccode\u003eandroidTest\u003c/code\u003e and \u003ccode\u003etest\u003c/code\u003e ? that might help.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eBrings improvements for inline classes\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003einline classes imho, is one of those things developers should jump on to right away. It can have a significant impact on the way you do development especially as it relates to Type driven design. I did a \u003ca href=\"https://fragmentedpodcast.com/episodes/149/\"\u003efragmented episode\u003c/a\u003e on the subject recently.\u003c/p\u003e\n\u003cp\u003eAll improvements to inline classes, highly welcome 🙏.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSince Kotlin 1.3, you can use the main function without parameters.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eFor the \u003ca href=\"https://github.com/holgerbrandl/kscript\"\u003ekscript\u003c/a\u003eers, this is actually pretty nifty. I missed the introduction of this feature in 1.3.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA new intention allows to convert constructs using lambdas with SAM to anonymous objects.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIf you understand this well, you\u0026rsquo;ll realize this almost seems backwards. Why would i ever want SAM -\u0026gt; anonymous you ask? Hello dear RxJava Kotlin users, read \u003ca href=\"https://readyset.build/kotlins-sam-problem-f315ffe6be3a\"\u003ethis blog post on Kotlin\u0026rsquo;s SAM problem\u003c/a\u003e to understand the specifics better.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn addition, we’ve added support for Compile Avoidance for kaptKotlin tasks in Gradle, improving build performance times.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI hate on kapt a lot for affecting my build times. Any improvement here is always welcome.\u003c/p\u003e\n\u003cp\u003eIn closing, how cool is it, my chosen programming language gets an update, and i can start using it almost right away? (let the Java-writing-old-timers from the early Android world envy).\u003c/p\u003e\n"
    },
    {
        "title" : "Unidirectional State Flow patterns – a refactoring story",
        "date_published" : "2018-09-28T00:00:00Z",
        "id" : "https://kau.sh/ppt/unidirectional-state-flow-patterns-a-refactoring-story/",
        "file_path" : "ppt/2018-09-28-mblt-dev.md",
        "url" : "https://kau.sh/ppt/unidirectional-state-flow-patterns-a-refactoring-story/",
        "content_html" : "\u003cp\u003e\u003ca href=\"https://mbltdev.ru/en\"\u003eMBLT Dev 2018\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eLearn how to go to your existing old mobile app and refactor it into one with a powerful architecture.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ch2 id=\"slides\"\u003eSlides\u003c/h2\u003e\n\u003cscript async class=\"speakerdeck-embed\" data-id=\"752cc3f1d2964cf8858feb6943641afa\" data-ratio=\"\" src=\"//speakerdeck.com/assets/embed.js\"\u003e\u003c/script\u003e\n"
    },
    {
        "title" : "Free hackathon vote tabulation using Google Forms \u0026 Kotlin",
        "date_published" : "2018-09-09T00:00:00-07:00",
        "id" : "https://kau.sh/blog/free-hackathon-voting-google-form-with-kotlin/",
        "file_path" : "blog/2018-09-09-free-hackathon-voting-google-form-with-kotlin.md",
        "url" : "https://kau.sh/blog/free-hackathon-voting-google-form-with-kotlin/",
        "content_html" : "\u003cp\u003eWe recently held our semi-annual hackathon at Instacart - the Carrot Wars 2018!\u003c/p\u003e\n\u003cp\u003eIn putting this hackathon together, I noticed a pretty blaring gap - there wasn\u0026rsquo;t a simple (and free) online service that would quickly tabulate the results for a hackathon event. We looked around and found some nifty options, but most of them were a tad bit too expensive for our liking. They also were not setup for a single event use or required a monthly subscription. There other usage restrictions, too - max vote count, concurrent user count, etc.\u003c/p\u003e\n\u003cp\u003eYou\u0026rsquo;d think there would be at least some option out there, given how popular hackathons are these days. We did some cursory searching but couldn\u0026rsquo;t find something that would work for us.\u003c/p\u003e\n\u003cp\u003eMy co-organizer , admittedly wiser about such things, made it super clear to me, \u0026ldquo;No KG, we ARE NOT building our own hackathon voting website 2 days before the event! You have more important things to do!\u0026rdquo;. So I set out to do exactly (½ of) just that.\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re on a time crunch and just want to use this post for a hackathon you\u0026rsquo;re about to run, jump to the \u0026ldquo;How to use this form for your hackathon\u0026rdquo; section below.\u003c/p\u003e\n\u003cp\u003eFor the juicy details, please continue reading!\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ch1 id=\"solution-choice\"\u003eSolution choice\u003c/h1\u003e\n\u003ch2 id=\"google-forms\"\u003eGoogle Forms\u003c/h2\u003e\n\u003cp\u003eI wasn\u0026rsquo;t too thrilled about building an online voting form website (hi 2018!) so instead I chose to just leverage Google Forms. Google Forms is pretty easy to use, can handle a bunch of users slamming your form at the same time, provides a decent enough UI and is ridiculously easy to create and get going.\u003c/p\u003e\n\u003ch2 id=\"kotlin-script\"\u003eKotlin script\u003c/h2\u003e\n\u003cp\u003eThe part I found more interesting about this process was the result tabulation. I could have probably gotten Google Forms to dump the results in a Google Sheet. But my excel/sheets expression fu was not strong enough to conconct the required mathematical expression to get the results I wanted.\u003c/p\u003e\n\u003cp\u003eSo instead of a seizure inducing mathematical sheet expression, I did what came more naturally to me and wrote a script in Kotlin to tabulate the votes and \u003ccode\u003eprintln\u003c/code\u003e the results nice and cleanly 😎.\u003c/p\u003e\n\u003cp\u003eI chose Kotlin cause I\u0026rsquo;m an Android developer and we love Kotlin here at Instacart. Interestingly the hackathon also coincided with the \u003ca href=\"https://blog.jetbrains.com/kotlin/2018/06/kotlin-1-2-50-is-out/\"\u003erelease of Kotlin 1.2.50\u003c/a\u003e where the Kotlin scripting support was supposed to have been improved.\u003c/p\u003e\n\u003cp\u003eThere\u0026rsquo;s something very satisfying about running a script in a terminal prompt like you would with bash, but without all the unpleasantness of the bash syntax and all the pleasantness of the Kotlin language.\u003c/p\u003e\n\u003ch1 id=\"voting-process\"\u003eVoting process:\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eThe hackathon had 5 categories (based on our core company values) that folks could participate in\u003c/li\u003e\n\u003cli\u003eOn presentation day, we sent out a google form to all hackathon attendees with the list of final projects. They would pick the 1st, 2nd and 3rd places for each category\u003c/li\u003e\n\u003cli\u003eGoogle Forms allows a pretty convenient way to export these results as a CSV file\u003c/li\u003e\n\u003cli\u003eThis \u003ca href=\"https://github.com/kaushikgopal/kotlin-scripts/blob/master/carrot-wars-tabulate.kts\"\u003eKotlin script\u003c/a\u003e ingests the CSV, tabulate the results, does some weighting math and prints the results for each category\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"how-to-use-this-form-for-your-hackathon\"\u003eHow to use this form for your hackathon\u003c/h1\u003e\n\u003ch2 id=\"1-building-the-google-form\"\u003e1. Building the Google Form\u003c/h2\u003e\n\u003cp\u003eI can\u0026rsquo;t recommend enough this Google Forms add-on called \u003ca href=\"https://workspace.google.com/marketplace/app/form_ranger/387838027286\"\u003e\u003cstrong\u003eformRanger\u003c/strong\u003e\u003c/a\u003e. formRanger allows you to populate your form from a simple google sheet. \u003c/p\u003e\n\u003cp\u003eThis was particularly useful for us because we had folks signing up right at the very last moment, wanting to pitch their hackathon project. So up until the very last presentation, the project list was in flux and so the form needed to constantly be modified (we had 5 categories and about 30 pitches. That\u0026rsquo;s 150 entrees that we would have had to keep consistent - no bueno). With formRanger setup this was a single list in a simple google sheet.\u003c/p\u003e\n\u003cp\u003eYou want your questions to be of type \u003cstrong\u003emultiple choice grid\u003c/strong\u003e. This way you can link a project (rows) to a position i.e. 1st, 2nd and 3rd place (columns).\u003c/p\u003e\n\u003cp\u003eThere\u0026rsquo;s another important option you want set for each question - \u0026ldquo;\u003cstrong\u003eLimit to one response per column\u003c/strong\u003e\u0026rdquo;. This will make sure you don\u0026rsquo;t have more than one 1st, 2nd or 3rd place.\u003c/p\u003e\n\u003ch2 id=\"2-installing-kotlin-script\"\u003e2. Installing kotlin script\u003c/h2\u003e\n\u003cp\u003eYou can find most of the \u003ca href=\"https://github.com/kaushikgopal/kotlin-scripts\"\u003einstructions for setting up the Kotlin script in the github project\u003c/a\u003e. tl;dr:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# install sdkman (if you haven\u0026#39;t already)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl -s \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;https://get.sdkman.io\u0026#34;\u003c/span\u003e | bash\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esdk install maven\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esdk install kotlin\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esdk install kscript\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# alternatively with homebrew\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew install maven\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew install holgerbrandl/tap/kscript\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"3-generate-the-csv-results-file\"\u003e3. Generate the CSV results file\u003c/h2\u003e\n\u003cp\u003eIn your google form, you should see a tab called \u0026ldquo;Reponses\u0026rdquo;. From there you should be able to \u0026ldquo;download responses (.csv)\u0026rdquo;.\u003c/p\u003e\n\u003cp\u003eGoogle Forms has a pretty decent visualization, which might just work for you, but I wanted to add some more sophistication in the tabulation of the results like weighting and maybe filtering based on categories. Basically, moving this to an actual program opens up a whole bunch of possibilities.\u003c/p\u003e\n\u003ch2 id=\"4-running-the-command\"\u003e4. Running the command\u003c/h2\u003e\n\u003cp\u003eFrom a terminal prompt run the command like so:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ekscript kscript carrot-wars-tabulate.kts ~/Downloads/star-wars-demo-results.csv\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cem\u003eThe very first time you run the script, it\u0026rsquo;ll take sometime as it pulls the necessary dependencies via maven. Give it some time; subsequent runs should be pretty snappy.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eHere\u0026rsquo;s what it should look like:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ kscript carrot-wars-tabulate.kts ~/Downloads/star-wars-demo-results.csv\n\n******* PROGRAM START *****************\n1 folk(s) voted!\n-----------------------\nCategory: \u0026quot;Which is your favorite star wars movie overall?\n----\nSTAR WARS: EPISODE IV A NEW HOPE                   ----\u0026gt; 6    \u0026lt;- [1]\nSTAR WARS: EPISODE VII THE FORCE AWAKENS           ----\u0026gt; 3    \u0026lt;- [2]\nROGUE ONE: A STAR WARS STORY                       ----\u0026gt; 2    \u0026lt;- [3]\n-----------------------\nCategory: \u0026quot;Which was your favorite SW movie from the original episodes?\n----\nSTAR WARS: EPISODE IV A NEW HOPE                   ----\u0026gt; 6    \u0026lt;- [1]\nSTAR WARS: EPISODE VII THE FORCE AWAKENS           ----\u0026gt; 3    \u0026lt;- [2]\nSTAR WARS: EPISODE V THE EMPIRE STRIKES BACK       ----\u0026gt; 2    \u0026lt;- [3]\n-----------------------\nCategory: \u0026quot;Which was your favorite standalone SW movie?\n----\nROGUE ONE: A STAR WARS STORY                       ----\u0026gt; 6    \u0026lt;- [1]\nSOLO: A STAR WARS STORY                            ----\u0026gt; 3    \u0026lt;- [2]\n******* PROGRAM END *****************\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cstrong\u003eHaters hate all you want, but those are my movie choices!\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"4-resources\"\u003e4. Resources\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://goo.gl/forms/hVl7afuKAKgPFhxy1\"\u003eDemo Google voting form\u003c/a\u003e (go ahead and vote for your choice!)\u003c/li\u003e\n\u003cli\u003eSample \u003ca href=\"https://raw.githubusercontent.com/kaushikgopal/kotlin-scripts/master/star-wars-demo-results.csv\"\u003eCSV responses file\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.google.com/spreadsheets/d/1v94s9nIrJcO53ohKke9nTELWOv9wByWfsTyn-Snw_cI/edit?usp=sharing\"\u003eGoogle sheet\u003c/a\u003e used to populate above form\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/kaushikgopal/kotlin-scripts#tabulate-hackathon-votes\"\u003eSource repo\u003c/a\u003e for Kotlin script that tabulates and prints out the results\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003cp\u003e\u003cem\u003eOriginally posted this article on the \u003ca href=\"https://tech.instacart.com/free-hackathon-vote-tabulation-using-google-forms-kotlin-3c7b7080ea\"\u003eInstacart tech blog\u003c/a\u003e. Reproduced here for posterity.\u003c/em\u003e\u003c/p\u003e\n"
    },
    {
        "title" : "Supercharging your workflow with App Center and Azure",
        "date_published" : "2018-05-07T00:00:00Z",
        "id" : "https://kau.sh/ppt/supercharging-your-workflow-with-app-center-and-azure/",
        "file_path" : "ppt/2018-05-07-microsoft-build.md",
        "url" : "https://kau.sh/ppt/supercharging-your-workflow-with-app-center-and-azure/",
        "content_html" : "\u003cp\u003eDiscover how to break down the barrier between your hopes for a mobile CI/CD system and what\u0026rsquo;s available today using the powerful Azure toolset and App Center API\u0026rsquo;s. Go from an idea to a multi-platform React Native app powered by CI/CD in just a few steps. We’ll continue from there to learn how Logic Apps and Azure Functions helped power Instacart\u0026rsquo;s mobile development workflow from commit to a release to the store.\u003c/p\u003e\n\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n  \u003ciframe src=\"https://www.youtube.com/embed/HG3FD_gdTCo\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" allowfullscreen title=\"YouTube Video\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\n"
    },
    {
        "title" : "Squircle and sweating the design details",
        "date_published" : "2018-03-15T00:00:00-07:00",
        "id" : "https://kau.sh/blog/squircle-and-sweating-the-design-details/",
        "file_path" : "blog/2018-03-15-squircle-and-sweating-the-design-details.md",
        "url" : "https://kau.sh/blog/squircle-and-sweating-the-design-details/",
        "content_html" : "\u003cp\u003eThis is such a fantastic post on how Apple sweats certain \u003cem\u003ealmost\u003c/em\u003e unnoticeable design details.\u003c/p\u003e\n\u003cp\u003eI picked up a whole bunch of nuggets reading this article:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026hellip;iPhone X rounded screen corners don’t use the classic rounding method where you move in a straight line and then arc using a single quadrant of a circle. Instead, the math is a bit more complicated. Commonly called a squircle, the slope starts sooner, but is more gentle.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eHere\u0026rsquo; the wikipedia link to the mathematical shape \u003ca href=\"https://en.wikipedia.org/wiki/Squircle\"\u003eSquircle\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe aforementioned article follows \u003ca href=\"https://hackernoon.com/apples-icons-have-that-shape-for-a-very-good-reason-720d4e7c8a14\"\u003eanother link\u003c/a\u003e which has more gems:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eApple doesn’t have the patent on this. Any company can bring their surfaces to this degree of quality. So why don’t they? Companies used to have more excuses. It used to be that engineering CAD tools weren’t as concerned about this sort of thing. Or engineers might not have been expert in that module of their CAD tools. Or surface design tools and engineering tools didn’t play well together. Or its importance to the bottom line wasn’t recognized.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI got to admit, once I learnt of this shape —and how beautiful it looks when applied to hardware— I can\u0026rsquo;t stop seeing the absence of this shape in competing products.\u003c/p\u003e\n\u003cp\u003eKeep your friends close \u003ca href=\"https://www.youtube.com/watch?v=DfHJDLoGInM\"\u003e;)\u003c/a\u003e\u003c/p\u003e\n"
    },
    {
        "title" : "Smarter ToDos with Kotlin",
        "date_published" : "2018-03-14T00:00:00-07:00",
        "id" : "https://kau.sh/blog/smarter-todos-with-kotlin/",
        "file_path" : "blog/2018-03-14-smarter-todos-with-kotlin.md",
        "url" : "https://kau.sh/blog/smarter-todos-with-kotlin/",
        "content_html" : "\u003cp\u003eCheckout this quick blog post I wrote for my company, tweaking the existing Kotlin TODO to work towards our requirements.\u003c/p\u003e\n\u003cp\u003eWhile I don\u0026rsquo;t think this solution is a panacea for all your missing code snippets, I have found some luck with this method, in adding accountability for those PR review feedback comments you say you\u0026rsquo;ll get to, but conveniently forget :)\u003c/p\u003e\n\u003cp\u003eHere\u0026rsquo;s a bonus if you\u0026rsquo;re reading this article from here:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kotlin\" data-lang=\"kotlin\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e/**\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * @param month - regular month (so 3 = March)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e */\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@JvmOverloads\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eISDate\u003c/span\u003e(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    day: Int? = \u003cspan style=\"color:#66d9ef\"\u003enull\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    month: Int? = \u003cspan style=\"color:#66d9ef\"\u003enull\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    year: Int? = \u003cspan style=\"color:#66d9ef\"\u003enull\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    hour: Int? = \u003cspan style=\"color:#66d9ef\"\u003enull\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    minute: Int? = \u003cspan style=\"color:#66d9ef\"\u003enull\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    second: Int? = \u003cspan style=\"color:#66d9ef\"\u003enull\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    date: Date? = \u003cspan style=\"color:#66d9ef\"\u003enull\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e): Date = Date().apply {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e cal = \u003cspan style=\"color:#a6e22e\"\u003eCalendar\u003c/span\u003e.getInstance()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    date\u003cspan style=\"color:#f92672\"\u003e?.\u003c/span\u003elet { cal.time = \u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    day\u003cspan style=\"color:#f92672\"\u003e?.\u003c/span\u003elet { cal.\u003cspan style=\"color:#66d9ef\"\u003eset\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eCalendar\u003c/span\u003e.DAY_OF_MONTH, \u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e) }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    month\u003cspan style=\"color:#f92672\"\u003e?.\u003c/span\u003elet { cal.\u003cspan style=\"color:#66d9ef\"\u003eset\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eCalendar\u003c/span\u003e.MONTH, \u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e - \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e) }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    year\u003cspan style=\"color:#f92672\"\u003e?.\u003c/span\u003elet { cal.\u003cspan style=\"color:#66d9ef\"\u003eset\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eCalendar\u003c/span\u003e.YEAR, \u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e) }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    hour\u003cspan style=\"color:#f92672\"\u003e?.\u003c/span\u003elet { cal.\u003cspan style=\"color:#66d9ef\"\u003eset\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eCalendar\u003c/span\u003e.HOUR_OF_DAY, \u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e) }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    minute\u003cspan style=\"color:#f92672\"\u003e?.\u003c/span\u003elet { cal.\u003cspan style=\"color:#66d9ef\"\u003eset\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eCalendar\u003c/span\u003e.MINUTE, \u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e) }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    second\u003cspan style=\"color:#f92672\"\u003e?.\u003c/span\u003elet { cal.\u003cspan style=\"color:#66d9ef\"\u003eset\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eCalendar\u003c/span\u003e.SECOND, \u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e) }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e cal.time\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt’s a pretty straightforward date builder with minor tweaks (for e.g. 3 = March cause what are we, Monsters ?).\u003c/p\u003e\n"
    },
    {
        "title" : "My New Programming Font - IBM Plex Mono",
        "date_published" : "2018-03-02T00:00:00-07:00",
        "id" : "https://kau.sh/blog/my-new-programming-font/",
        "file_path" : "blog/2018-03-02-my-new-programming-font.md",
        "url" : "https://kau.sh/blog/my-new-programming-font/",
        "content_html" : "\u003cp\u003eI\u0026rsquo;m obsessed with typefaces and fonts \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003cp\u003eMy programming productivity is irrationally dependent on the font I pick for my IDE. I have spent \u003cem\u003eunhealthy\u003c/em\u003e amounts of time experimenting and trying different fonts for programming.\u003c/p\u003e\n\u003cp\u003eI usually prefer a monospaced font and I\u0026rsquo;ve bounced between \u003ca href=\"https://fonts.google.com/specimen/Inconsolata\"\u003eInconsolata\u003c/a\u003e and \u003ca href=\"https://www.fonts.com/font/microsoft-corporation/consolas/regular\"\u003eConsolas\u003c/a\u003e in the past – both truly beautiful typefaces.\u003c/p\u003e\n\u003cp\u003eRecently though, a design director at Instacart shared this link on the \u003ca href=\"https://lawsofux.com/\"\u003elaws of UX\u003c/a\u003e (a fantastic read btw).\u003c/p\u003e\n\u003cp\u003eBut —hot damn— I was smitten after looking at that website. The font used there was \u003cstrong\u003eGORGEOUS\u003c/strong\u003e! I knew it was monospaced just from looking at it. I didn\u0026rsquo;t get past the first law, without first finding out which font was being used.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ibm_plex_mono.png\" alt=\"IBM Plex Mono used on lawsofux.com\" title=\"IBM Plex Mono sample\"\u003e\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eThus I stumbled upon my new programming font – IBM Plex Mono. I don\u0026rsquo;t make a font change in my IDE that casually, without first putting it through the paces.\u003c/p\u003e\n\u003cp\u003eI give it a glowing recommendation for your IDE. There\u0026rsquo;s an interesting back story behind the making of the font on \u003ca href=\"https://medium.com/@Uxtrending/ibm-plex-a-typeface-and-a-story-e01b2e502aab\"\u003eMedium\u003c/a\u003e too.\u003c/p\u003e\n\u003cp\u003eBtw, just changing the font is not enough – you have to pick the right size and line spacing (I\u0026rsquo;ve found a size of 15 and line-spacing of 1.15 works best for me).\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/IBM/plex\"\u003eDownload IBM Plex Mono\u003c/a\u003e absolutely for free.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eDid you know – fonts and typefaces aren\u0026rsquo;t \u003ca href=\"https://graphicdesign.stackexchange.com/questions/12717/what-is-the-difference-between-a-font-and-a-typeface\"\u003enecessarily interchangeable\u003c/a\u003e. You use \u0026ldquo;typeface\u0026rdquo; when you’d use \u0026ldquo;song\u0026rdquo; (e.g. \u0026ldquo;I love that song/typeface …\u0026rdquo;), and \u0026ldquo;font\u0026rdquo; when you’d use \u0026ldquo;track\u0026rdquo; (\u0026quot;… so I’m going to buy the track/font for it\u0026quot;).\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "Kindness and Positivity",
        "date_published" : "2017-08-08T00:00:00-07:00",
        "id" : "https://kau.sh/blog/more-kindness-and-positivity/",
        "file_path" : "blog/2017-08-08-more-kindness-and-positivity.md",
        "url" : "https://kau.sh/blog/more-kindness-and-positivity/",
        "content_html" : "\u003cp\u003eWe need more kindness and positivity in our online lives today. There is no side, that cannot benefit from that.\u003c/p\u003e\n\u003cp\u003eBeing rational or correct is futile without empathy.\u003c/p\u003e\n\u003cp\u003eYou can have opposing (or even incorrect) views but you have to find a kind and positive way to express that.\u003c/p\u003e\n\u003cp\u003eYou either learn you\u0026rsquo;re wrong or convince the other of your point of view. But everyone is more willing to have the conversation, if approached with kindness and positivity.\u003c/p\u003e\n\u003cp\u003eA good first step for me is surrounding myself with kinder and positive people.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\n"
    },
    {
        "title" : "Rx by example – Volume 3 (the multicast edition)",
        "date_published" : "2017-07-14T00:00:00Z",
        "id" : "https://kau.sh/ppt/rx-by-example-volume-3-the-multicast-edition/",
        "file_path" : "ppt/2017-07-14-360-andev.md",
        "url" : "https://kau.sh/ppt/rx-by-example-volume-3-the-multicast-edition/",
        "content_html" : "\u003cp\u003eThe Android development community today has embraced Rx(Java) in all it’s glory. But as developer’s understanding of RxJava has matured, they’ve started to peel back the layers and unleash its true power and potential.\u003c/p\u003e\n\u003cp\u003eOne such power is \u0026ldquo;Multicasting\u0026rdquo; where you get to share work across your app and reuse a whole bunch of stuff. This is really hard to do in general but Rx makes it really really easy.\u003c/p\u003e\n\u003cp\u003eRx itself though has a steep learning curve. But the easiest way to grasp the concepts and features of Rx, is through examples. I’ve given talks in the past explaining Rx usage purely through examples and folks have found this to be the easiest way to warm up to Rx.\u003c/p\u003e\n\u003cp\u003eSo that is what we’ll do today, learn by examples! In this talk, we look at fresh set of examples, all demonstrating the powerful concept of multicasting, but in the comfortable playground of simple and practical examples.\u003c/p\u003e\n\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n  \u003ciframe src=\"https://www.youtube.com/embed/wxx9hEi_E8c\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" allowfullscreen title=\"YouTube Video\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\n\u003c!-- raw HTML omitted --\u003e\n\u003ch2 id=\"slides\"\u003eSlides\u003c/h2\u003e\n\u003cscript async class=\"speakerdeck-embed\" data-id=\"8206ef736b694a5d903091dc260e502b\" data-ratio=\"\" src=\"//speakerdeck.com/assets/embed.js\"\u003e\u003c/script\u003e\n"
    },
    {
        "title" : "RxJava 1 -\u003e RxJava 2 (Disposing Subscriptions)",
        "date_published" : "2017-06-21T00:00:00-07:00",
        "id" : "https://kau.sh/blog/rxjava-1-rxjava-2-disposing-subscriptions/",
        "file_path" : "blog/2017-06-21-rxjava-1-rxjava-2-disposing-subscriptions.md",
        "url" : "https://kau.sh/blog/rxjava-1-rxjava-2-disposing-subscriptions/",
        "content_html" : "\u003cdiv class='callout start'\u003e\n    \u003cp\u003eThis is a continuation post in a 2 part series:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"../rxjava1-rxjava2-migration-understanding-changes/\"\u003eUnderstanding the changes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../rxjava-1-rxjava-2-disposing-subscriptions/\"\u003eDisposing subscriptions\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003c/div\u003e\n\u003ch1 id=\"disposing-subscriptions\"\u003eDisposing Subscriptions\u003c/h1\u003e\n\u003cp\u003eThis was the part that I initially found most tricky to grasp but also most important to know as an AndroidDev (memory leak and all).\u003c/p\u003e\n\u003cp\u003eJedi master Karnok explains this best in the wiki:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn RxJava 1.x, the interface rx.Subscription was responsible for stream and resource lifecycle management, namely unsubscribing a sequence and releasing general resources such as scheduled tasks. The Reactive-Streams specification took this name for specifying an interaction point between a source and a consumer: org.reactivestreams.Subscription allows requesting a positive amount from the upstream and allows cancelling the sequence.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eFrom that definition alone, it would appear like nothing\u0026rsquo;s changed but that is definitely not the case. In my first post, I pointed out:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ePublisher\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eSubscriber\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u0026gt;\u003c/span\u003e Subscription\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe use of =\u0026gt; vs = was intentional. If you look at the \u003ca href=\"https://github.com/reactive-streams/reactive-streams-jvm/blob/v1.0.0/api/src/main/java/org/reactivestreams/Publisher.java#L28\"\u003esource code for \u003ccode\u003ePublisher\u003c/code\u003e\u0026rsquo;s subscribe method\u003c/a\u003e again, you\u0026rsquo;ll notice a return type of \u003ccode\u003evoid\u003c/code\u003e viz. it doesn\u0026rsquo;t return a Subscription for you to tack on to a CompositeSubscription (which you can then conveniently dispose of onStop/onDestroy).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePublisher\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eT\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// return type void (not Subscription like before)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eSubscriber\u003cspan style=\"color:#f92672\"\u003e\u0026lt;?\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003esuper\u003c/span\u003e T\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e s\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eKarnok again:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eBecause Reactive-Streams base interface, org.reactivestreams.Publisher defines the subscribe() method as void, Flowable.subscribe(Subscriber) no longer returns any Subscription (or Disposable). The other base reactive types also follow this signature with their respective subscriber types.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSo if you look at the declarations again\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// RxJava specific constructs\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Observable implements \u0026#34;ObservableSource\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eObservableSource\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eT\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eObserver\u003cspan style=\"color:#f92672\"\u003e\u0026lt;?\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003esuper\u003c/span\u003e T\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e observer\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Single implements SingleSource\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eSingleSource\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eT\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eSingleObserver\u003cspan style=\"color:#f92672\"\u003e\u0026lt;?\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003esuper\u003c/span\u003e T\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e observer\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eCompletableSource\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eCompletableObserver observer\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMaybeSource\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eT\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eMaybeObserver\u003cspan style=\"color:#f92672\"\u003e\u0026lt;?\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003esuper\u003c/span\u003e T\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e observer\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNotice the return type \u003ccode\u003evoid\u003c/code\u003e in all of them.\u003c/p\u003e\n\u003ch2 id=\"getting-hold-of-subscriptions\"\u003eGetting hold of Subscriptions\u003c/h2\u003e\n\u003cp\u003eSo you may ask how do I get a hold off that Subscription then (so that you might rightly cancel or dispose it off like a responsible citizen)?\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s take a look at the \u003ca href=\"https://github.com/reactive-streams/reactive-streams-jvm/blob/v1.0.0/api/src/main/java/org/reactivestreams/Subscriber.java#L31\"\u003ethe \u003ccode\u003eSubscriber\u003c/code\u003e\u0026rsquo;s onSubscribe\u003c/a\u003e method:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eSubscriber\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eT\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonSubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eSubscription s\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// Subscriptions are additionally cool cause they have:\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#75715e\"\u003e// s.request(n) -\u0026gt; request data\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#75715e\"\u003e// s.cancel()   -\u0026gt; cancel this connection\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonNext\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eT t\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonError\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eThrowable t\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonComplete\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou are now given the Subscription class as a parameter in your \u003ccode\u003eonSubscribe\u003c/code\u003e callback. So within the OnSubscribe method, you have a hold of the subscription and can then conveniently dispose of the Subscription inside the \u003ccode\u003eonSubscribe\u003c/code\u003e callback.\u003c/p\u003e\n\u003cp\u003eThis was actually a pretty well thought off change because this really makes the interface for a Subscriber lightweight. In RxJava 1 land, Subscribers were more \u0026ldquo;heavy\u0026rdquo; cause they had to deal with a lot of the internal state handling.\u003c/p\u003e\n\u003cp\u003e\u0026hellip; but who are we kidding: that is not convenient at all (atleast for those of us who need the subscriber to depend on our lifecycle). I\u0026rsquo;d rather just shove everything into a CompositeSubscription like before and be on my merry way. But such are the rulings of the Reactive Streams spec.\u003c/p\u003e\n\u003cp\u003eThankfully the maintainers of RxJava in all their benevolence realized this trade-off and have remedied this with convenient helpers.\u003c/p\u003e\n\u003cp\u003eBut first, some more definitions:\u003c/p\u003e\n\u003ch2 id=\"disposable-is-the-new-subscripton\"\u003e\u003ccode\u003eDisposable\u003c/code\u003e is the new \u003ccode\u003eSubscripton\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eWhat we called \u003ccode\u003eSubscription\u003c/code\u003e in RxJava 1 is now called \u003ccode\u003eDisposable\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eWhy couldn\u0026rsquo;t we just keep the name \u003ccode\u003eSubscription\u003c/code\u003e? (per my understanding):\u003c/strong\u003e\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eYou have to remember the Reactive Streams spec already has this name reserved and the maintainers of RxJava 2 are serious about the spec adherence. We don\u0026rsquo;t want confusion about there being more functionality with an Rx Subscription vs other Reactive Stream spec adhering libraries\u003c/li\u003e\n\u003cli\u003eWe still want some of the behaviors and conveniences of RxJava 1 like CompositeSubscriptions.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eSo if Disposables is what we\u0026rsquo;re using now, by that token we have a CompositeDisposable which is the object you want to be using and tacking all your Disposables onto. It functions pretty similarly to how we used CompositeSubscription before.\u003c/p\u003e\n\u003cp\u003eOk, back to the original question: how do I get a hold of the Disposable?\u003c/p\u003e\n\u003ch2 id=\"getting-hold-of-disposables\"\u003eGetting hold of Disposables\u003c/h2\u003e\n\u003cp\u003eNow before we go any further, if you\u0026rsquo;re adding your callbacks directly in the form of lambdas, this is not a problem as most observable sources return a Disposable with their subscribe method call when not provided with a subscriber object:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFlowable\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eSubscriber\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// void return type\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFlowable\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003enextEvent \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{},\u003c/span\u003e error \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{},\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// return Disposable so we\u0026#39;re good\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo if you look at some sample code, the below works fine no problem:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edisposable \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    myAwesomeFlowable\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eobserveOn\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eAndroidSchedulers\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003emainThread\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eevent \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#75715e\"\u003e// onNext\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#f92672\"\u003e},\u003c/span\u003e throwable \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#75715e\"\u003e// onError\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#f92672\"\u003e},\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#75715e\"\u003e// onComplete\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#f92672\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecompositeDisposable\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eadd\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003edisposable\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHowever if I rewrote that code just a little differently:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edisposable \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    myAwesomeFlowable\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eobserveOn\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eAndroidSchedulers\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003emainThread\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e FlowableSubscriber\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eTextViewTextChangeEvent\u003cspan style=\"color:#f92672\"\u003e\u0026gt;()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonSubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eSubscription subscription\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonNext\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eTextViewTextChangeEvent textViewTextChangeEvent\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonError\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eThrowable t\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonComplete\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// ^ THIS IS WRONG. Won\u0026#39;t work\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// compositeDisposable.add(disposable);\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe above code won\u0026rsquo;t compile. If you want to pass a Subscriber object (like the above \u003ccode\u003eFlowableSubscriber\u003c/code\u003e, \u003ccode\u003eObservableSource\u003c/code\u003e or an \u003ccode\u003eObserver\u003c/code\u003e) then this strategy won\u0026rsquo;t work.\u003c/p\u003e\n\u003cp\u003eA lot of existing RxJava 1 code uses this strategy a lot, so the RxJava maintainers very kindly added a handy method on most Publishers called \u003ccode\u003esubscribeWith\u003c/code\u003e. From the wiki:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eDue to the Reactive-Streams specification, Publisher.subscribe returns void and the pattern by itself no longer works in 2.0. To remedy this, the method E subscribeWith(E subscriber) has been added to each base reactive class which returns its input subscriber/observer as is.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eE \u003cspan style=\"color:#a6e22e\"\u003esubscribeWith\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eE subscriber\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf you\u0026rsquo;re still following closely, you\u0026rsquo;d ask\u0026hellip; wait! that doesn\u0026rsquo;t return a Disposable! why the hell is this even remotely more convenient?\u003c/p\u003e\n\u003cp\u003eWell\u0026hellip; it says that the \u003ccode\u003eSubscriber\u003c/code\u003e you pass is sent back to you with \u003ccode\u003esubscribeWith\u003c/code\u003e. But what if your Subscriber itself \u0026ldquo;implemented\u0026rdquo; the Disposable interface? If you had a DisposableSubscriber, you could for all practical purposes treat it as a disposable and tack it on to a CompositeDisposable, while still using it as a Subscriber. That\u0026rsquo;s typically the pattern you want to adopt. Here\u0026rsquo;s some code that should make these techniques clear:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edisposable \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    myAwesomeFlowable\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eobserveOn\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eAndroidSchedulers\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003emainThread\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003esubscribeWith\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e getDisposableSubscriber\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eTextViewTextChangeEvent\u003cspan style=\"color:#f92672\"\u003e\u0026gt;()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonNext\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eTextViewTextChangeEvent event\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonError\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eThrowable e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonComplete\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecompositeDisposable\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eadd\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003edisposable\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eApart from \u003ccode\u003eDisposableSubscriber\u003c/code\u003e, there\u0026rsquo;s also a \u003ccode\u003eResourceSubscriber\u003c/code\u003e which implements Disposable. There\u0026rsquo;s also a \u003ccode\u003eDefaultSubscriber\u003c/code\u003e which doesn\u0026rsquo;t implement the Disposable interface, so you can\u0026rsquo;t use it with \u003ccode\u003esubscribeWith\u003c/code\u003e (you could use it but you wouldn\u0026rsquo;t get anything \u0026ldquo;disposable\u0026rdquo; out of it).\u003c/p\u003e\n\u003cp\u003eIt seems like both DisposableSubscriber and ResourceSubscriber do the same thing. Why do both of these exist you ask?\u003c/p\u003e\n\u003cp\u003eThe original 1.x Subscriber had the ability to take Subscriptions which allowed \u0026ldquo;disposing\u0026rdquo; the additional resources that particular Subscriber needed when the lifecycle ended or the Subscriber got unsubscribed. Since 2.x Subscriber is an interface declared externally, the old functionality had to be implemented via a separate abstract class: \u0026ldquo;ResourceSubscriber\u0026rdquo;. A key difference is you can create and associate Disposable resources with it and dispose them together from within the onError() and onComplete() methods you implement. Have a look at the example from \u003ca href=\"http://reactivex.io/RxJava/2.x/javadoc/io/reactivex/subscribers/ResourceSubscriber.html\"\u003ewithin the docs\u003c/a\u003e\u003c/p\u003e\n\u003ch1 id=\"to-clear-or-to-dispose\"\u003eto .clear or to .dispose\u003c/h1\u003e\n\u003cp\u003eThere\u0026rsquo;s no longer an \u003ccode\u003eunsubscribe\u003c/code\u003e call on CompositeDisposable. It\u0026rsquo;s been renamed to \u003ccode\u003edispose\u003c/code\u003e ☝️️ but you don\u0026rsquo;t want to be using either of those anyway. The \u003ccode\u003eclear\u003c/code\u003e method remains, and is most likely the method you want to use.\u003c/p\u003e\n\u003ch2 id=\"whats-the-difference\"\u003eWhat\u0026rsquo;s the difference?\u003c/h2\u003e\n\u003cp\u003eunsubscribe/dispose \u003ca href=\"https://github.com/kaushikgopal/RxJava-Android-Samples/commit/1e7d4b2f867a97b32a0cde81cb488c3d17d4952f\"\u003eterminates even future subscriptions while clear doesn\u0026rsquo;t\u003c/a\u003e allow you to reuse the CompositeDisposable.\u003c/p\u003e\n\u003cp\u003eIn the next and final part, we\u0026rsquo;ll look at some of the miscellaneous changes.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eMy thanks to Donn Felker \u0026amp; David Karnok for reviewing this post. Special thanks to David for correcting some of my misconceptions.\u003c/em\u003e\u003c/p\u003e\n"
    },
    {
        "title" : "RxJava 1 -\u003e RxJava 2 (Understanding the changes)",
        "date_published" : "2017-06-21T00:00:00-07:00",
        "id" : "https://kau.sh/blog/rxjava1-rxjava2-migration-understanding-changes/",
        "file_path" : "blog/2017-06-21-rxjava1-rxjava2-migration-understanding-changes.md",
        "url" : "https://kau.sh/blog/rxjava1-rxjava2-migration-understanding-changes/",
        "content_html" : "\u003cp\u003eIn case you haven\u0026rsquo;t heard: \u003ca href=\"https://github.com/ReactiveX/RxJava/wiki/What%27s-different-in-2.0https://github.com/ReactiveX/RxJava/wiki/What%27s-different-in-2.0\"\u003eRxJava2\u003c/a\u003e was released sometime back. RxJava 2 was a massive rewrite with  breaking apis (but for good reasons). Most dependent libraries have upgraded by now though, so you\u0026rsquo;re safe to pull that migration trigger with your codebases.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eFolks starting out directly with Rx2 might enjoy this guide but it\u0026rsquo;s the ones that started with Rx 1 that will probably appreciate it the most\u003c/em\u003e.\u003c/p\u003e\n\u003cdiv class='callout start'\u003e\n    \u003cp\u003eThis is a continuation post in a 2 part series:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"../rxjava1-rxjava2-migration-understanding-changes/\"\u003eUnderstanding the changes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../rxjava-1-rxjava-2-disposing-subscriptions/\"\u003eDisposing subscriptions\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003c/div\u003e\n\u003cp\u003eLet\u0026rsquo;s get started.\u003c/p\u003e\n\u003cp\u003eIn this first part, I want to dive into making sense of the Rx2 changes from the point of view of an Rx1 user.\u003c/p\u003e\n\u003ch1 id=\"why-things-changed-with-rxjava2\"\u003eWhy things changed with RxJava2\u003c/h1\u003e\n\u003ch2 id=\"tldr--reactive-streamshttpwwwreactive-streamsorg-spec\"\u003etl;dr- \u003ca href=\"http://www.reactive-streams.org/\"\u003eReactive Streams\u003c/a\u003e spec\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"http://www.reactive-streams.org/\"\u003eReactive Streams\u003c/a\u003e is a standard for doing \u0026ldquo;reactive\u0026rdquo; programming and RxJava now implements the Reactive Streams specs with version 2.x. RxJava was sort of a trailblazer in reactive programming land but it wasn\u0026rsquo;t the only library around. There were others that also dealt with reactive paradigms. But with all the libraries adhering to the Reactive Streams spec now, interop between the libraries is a tad bit easier.\u003c/p\u003e\n\u003cp\u003eThe \u003ca href=\"https://github.com/reactive-streams/reactive-streams-jvm/tree/v1.0.0/api/src/main/java/org/reactivestreams\"\u003espec\u003c/a\u003e per say is pretty straightforward with just 4 interfaces:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003ePublisher\u003c/strong\u003e (anything that publishes events, so \u003ccode\u003eObservable\u003c/code\u003e,\u003ccode\u003eFlowable\u003c/code\u003e etc. - more on this later)\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSubscriber\u003c/strong\u003e (anything that listens to a Publisher)\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSubscription\u003c/strong\u003e (\u003ccode\u003ePublisher.subscribe(Subscriber) =\u0026gt; Subscription\u003c/code\u003e when you join a Publisher and a Subscriber, you are given a connection also called a \u003ccode\u003eSubscription\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eProcessor\u003c/strong\u003e (a Publisher + a Subscriber, sound familiar? yep \u003ccode\u003eSubject\u003c/code\u003es for us RxJava 1 luddites)\u003c/li\u003e\n\u003c/ol\u003e\n\u003chr\u003e\n\u003cp\u003eIf you\u0026rsquo;re slightly more curious about the design goals, I also suggest the following resources:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ReactiveX/RxJava/wiki/What%27s-different-in-2.0\"\u003eWhat\u0026rsquo;s different in 2.0\u003c/a\u003e  wiki page - this is really the place I kept coming back to and referencing when I needed to understand the details\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://fragmentedpodcast.com/episodes/053-jake-wharton-on-rxjava-2/\"\u003eFragmented Ep #53 with JakeWharton\u003c/a\u003e (forgive the shameless promotion) - ultimate lazy person\u0026rsquo;s guide to understand why/what things changed with RxJava2, as explained by an actual demigod. This was the one that really made it first click for me.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ReactiveX/RxJava/issues/2787\"\u003eThought process behind the 2.0 design\u003c/a\u003e for the truly loyal\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/artem-zinnatullin/TheContext-Podcast/blob/master/show_notes/Episode_11.md\"\u003eEp 11 of The Context \u003c/a\u003e —  by my friends Hannes and Artem :)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003chr\u003e\n\u003cp\u003eWe should probably get one important change out of the way:\u003c/p\u003e\n\u003ch1 id=\"dependency-change\"\u003eDependency change\u003c/h1\u003e\n\u003cp\u003eSearch:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecompile \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;io.reactivex:rxjava:${rxJavaVersion}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecompile \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;io.reactivex:rxandroid:${rxAndroidVersion}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecompile \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.jakewharton.rxbinding:rxbinding:${rxBindingsVersion}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecompile \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.squareup.retrofit2:adapter-rxjava:${retrofit2Version}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eReplace:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecompile \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;io.reactivex.rxjava2:rxjava:${rxJavaVersion}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecompile \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecompile \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.jakewharton.rxbinding2:rxbinding:${rxBindingsVersion}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecompile \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.squareup.retrofit2:adapter-rxjava2:${retrofit2Version}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eA minor change in your gradle dependency pull (\u0026ldquo;2\u0026rdquo; suffix).\u003c/p\u003e\n\u003cp\u003eThe actual classes though have been moved to a new package internally \u003cem\u003eio.reactivex\u003c/em\u003e (vs \u003cem\u003erx\u003c/em\u003e). So you\u0026rsquo;ll have to change those import statements.\u003c/p\u003e\n\u003cp\u003eAlso you \u0026ldquo;could\u0026rdquo; theoretically have both Rx1 and Rx2 running simultaneously but this is a \u003cem\u003ebad\u003c/em\u003e idea because certain primary constructs like Observables have a very different notion of handling streams (backpressure). It can be a nightmare during that interim period where you have to remember the behavior differences. Also if you happen to use both Rx1 and Rx2 Observables you have to be careful about qualifying them explicitly with the right package name (\u003ccode\u003erx.Observable\u003c/code\u003e or \u003ccode\u003eio.reactivex.Observable\u003c/code\u003e). This is very easy to mix up and get wrong.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eBite the bullet and migrate it all in one shot.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAnother super important change:\u003c/p\u003e\n\u003ch1 id=\"observable---flowable\"\u003eObservable -\u0026gt; Flowable\u003c/h1\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eSearch : `import rx.Observable;`\nReplace: `import io.reactivex.Flowable;`\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eFlowable is the new Observable. Succinctly - it’s a backpressure-enabled base reactive class.\u003c/li\u003e\n\u003cli\u003eYou want to be using Flowable everywhere now, \u003cstrong\u003enot\u003c/strong\u003e Observable. Use this as your default.\u003c/li\u003e\n\u003cli\u003eObservables are still available for use, but unless you really understand backpressure, you probably don\u0026rsquo;t want to be using them anymore.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eFlowable = Observable + backpressure handling\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch1 id=\"note-on-publishers\"\u003eNote on \u0026ldquo;Publisher\u0026quot;s:\u003c/h1\u003e\n\u003cp\u003eRemember \u003ccode\u003ePublisher\u003c/code\u003e? it\u0026rsquo;s basically the Reactive Streams interface for anything that produces events (\u003cem\u003eReread the Reactive Streams spec section above if this is not making sense\u003c/em\u003e).\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eFlowable\u003c/code\u003e implements \u003ccode\u003ePublisher\u003c/code\u003e. This is our new base default reactive class and implements the Reactive Streams spec 1 \u0026lt;-\u0026gt; 1. Think of of Flowable as primero uno \u0026ldquo;Publisher\u0026rdquo; (this is also partly the reason I recommend Flowable as the new default, in the previous section).\u003c/p\u003e\n\u003cp\u003eThe other base reactive classes that are Publishers include Observable, Single, Completable and Maybe. But they don\u0026rsquo;t implement the \u003ccode\u003ePublisher\u003c/code\u003e interface directly.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eWhy you ask?\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eWell the other base classes are now considered \u0026ldquo;Rx\u0026rdquo; specific constructs with specialized behavior pertaining to Rx. These are not necessarily notions you would find in the Reactive Streams specs.\u003c/p\u003e\n\u003cp\u003eWe can look at the actual interface declarations and it\u0026rsquo;ll be clear.\u003c/p\u003e\n\u003ch1 id=\"note-on-subscribers\"\u003eNote on \u0026ldquo;Subscriber\u0026quot;s:\u003c/h1\u003e\n\u003cp\u003eSo if \u003ccode\u003ePublisher\u003c/code\u003e is the Reactive Streams event producer, \u003ccode\u003eSubscriber\u003c/code\u003e is the Reactive Streams event \u0026ldquo;listener\u0026rdquo; (it\u0026rsquo;s extremely helpful to keep these terms firmly grounded in our heads, hence the incessant repetition).\u003c/p\u003e\n\u003cp\u003eLooking at the actual interface code declaration should offer more clarity to the above two sections.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Reactive Streams spec\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Flowable implements Publisher\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePublisher\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eT\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eSubscriber\u003cspan style=\"color:#f92672\"\u003e\u0026lt;?\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003esuper\u003c/span\u003e T\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e s\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs noted before, \u003ccode\u003ePublisher\u003c/code\u003e and \u003ccode\u003eSubscriber\u003c/code\u003e are part of the Reactive Streams spec. Flowable -which is now numero uno base reactive class of choice- implements \u003ccode\u003ePublisher\u003c/code\u003e. All good so far.\u003c/p\u003e\n\u003cp\u003eBut what about the other base reactive classes like \u003ccode\u003eObservable\u003c/code\u003e and \u003ccode\u003eSingle\u003c/code\u003e that we\u0026rsquo;ve come to love and use?\u003c/p\u003e\n\u003cp\u003eOn the publishing side, instead of implementing the standard \u003ccode\u003ePublisher\u003c/code\u003e interface the other event producers implement a \u0026ldquo;similar\u0026rdquo; interface.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// RxJava specific constructs\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Observable implements \u0026#34;ObservableSource\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eObservableSource\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eT\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eObserver\u003cspan style=\"color:#f92672\"\u003e\u0026lt;?\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003esuper\u003c/span\u003e T\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e observer\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// notice \u0026#34;Observer\u0026#34; here vs the standard \u0026#34;Subscriber\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Single implements SingleSource\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eSingleSource\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eT\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eSingleObserver\u003cspan style=\"color:#f92672\"\u003e\u0026lt;?\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003esuper\u003c/span\u003e T\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e observer\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eCompletableSource\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eCompletableObserver observer\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMaybeSource\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eT\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eMaybeObserver\u003cspan style=\"color:#f92672\"\u003e\u0026lt;?\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003esuper\u003c/span\u003e T\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e observer\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNotice: instead of having the standard \u003ccode\u003eSubscriber\u003c/code\u003e (Reactive Streams standard) the other base reactive classes (\u003ccode\u003eObservable\u003c/code\u003e, \u003ccode\u003eSingle\u003c/code\u003e etc.) now have corresponding \u0026ldquo;special\u0026rdquo; Rx specific \u003ccode\u003eSubscriber\u003c/code\u003e or event listeners called \u0026ldquo;Observer\u0026quot;s.\u003c/p\u003e\n\u003cp\u003eThat\u0026rsquo;s it for Part 1. In the next part, we\u0026rsquo;ll look at disposing subscriptions.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eMy thanks to David Karnok \u0026amp; Donn Felker for reviewing this post.\u003c/em\u003e\u003c/p\u003e\n"
    },
    {
        "title" : "That Time I Met Andy Rubin",
        "date_published" : "2017-05-31T00:00:00-07:00",
        "id" : "https://kau.sh/blog/that-time-i-met-andy-rubin/",
        "file_path" : "blog/2017-05-31-that-time-i-met-andy-rubin.md",
        "url" : "https://kau.sh/blog/that-time-i-met-andy-rubin/",
        "content_html" : "\u003cp\u003eOne of the advantages of working in the Bay area is you tend to run in to tech celebrities every so often.\u003c/p\u003e\n\u003cp\u003eI was working in Palo Alto (late 2015) on a previous startup (Wedding Party). My colleagues and I decided to get coffee at the nearby cafe. I saw \u003ca href=\"https://en.wikipedia.org/wiki/Andy_Rubin\"\u003eAndy Rubin\u003c/a\u003e sitting outside casually talking to two other folks. I was certain it was him and told my buddies, \u0026ldquo;Hey, I think that\u0026rsquo;s Andy Rubin\u0026rdquo;. My colleagues (the lovable jerks that they were) said: \u0026ldquo;that\u0026rsquo;s the Android fanboy in you seeing things\u0026rdquo;. I obviously protested (with some casual bashing of their own phone choices).\u003c/p\u003e\n\u003cp\u003eAs we grabbed our lattes and headed out, one of my buddies told me, \u0026ldquo;if you\u0026rsquo;re so sure, why don\u0026rsquo;t you just go up to him and ask?\u0026rdquo;. To which I replied: \u0026ldquo;you know what? I bloody well will! just to prove you jerks wrong\u0026rdquo;. They thought I was being my kooky self and went back to the office.\u003c/p\u003e\n\u003cp\u003eAfter making sure I wasn\u0026rsquo;t intruding his conversation, I walked up to him and said, \u0026ldquo;I hate to bother you but would you by any chance be Andy Rubin?\u0026rdquo;. Seeing the giant Android developer tee I was wearing, he let out a small smile and said, \u0026ldquo;that would be me! I\u0026rsquo;m Andy. How are you doing?\u0026rdquo;.\u003c/p\u003e\n\u003cp\u003eI was so elated and star struck that speech began to fail me. I don\u0026rsquo;t recall exactly what I said but it was along the lines of \u0026ldquo;thank you so much for Android! Your work has made such a difference, more so than you can imagine, you\u0026rsquo;re awesome, i\u0026rsquo;ve seen some of the code you wrote, it\u0026rsquo;s also awesome\u0026hellip;etc etc (facepalm)\u0026rdquo;.\u003c/p\u003e\n\u003cp\u003eHe was incredibly humble and asked me to sit down and join him while we talked. He asked where I worked and what our startup was doing. You could tell the dude was incredibly smart; 5 minutes into the conversation, he had some really great questions, thoughts and insights. I was truly amazed how someone so incredibly intelligent and smart, could also be so humble and hold a conversation with a joe like me. It definitely left a mark.\u003c/p\u003e\n\u003cp\u003eI walked back to the office and triumphantly told my colleagues they were dum-dums and I was totally right and I had the most awesomest conversation with Andy Rubin. They were pretty excited too and one of my pals, H asked:\u003c/p\u003e\n\u003cp\u003eH: \u0026ldquo;Oh cool! so did you tell him you just started an Android developer podcast?\u0026rdquo;\u003c/p\u003e\n\u003cp\u003eme: \u0026ldquo;arr\u0026hellip; no, that\u0026hellip; oddly\u0026hellip; didn\u0026rsquo;t come up\u0026rdquo;\u003c/p\u003e\n\u003cp\u003eH: \u0026ldquo;did you tell him that our last office was the one where he started Android?\u0026rdquo; (this was true and probably a fantastic conversation starter)\u003c/p\u003e\n\u003cp\u003eme: \u0026ldquo;no\u0026hellip; but i told him where our current office is and what we did\u0026rdquo; (sheepish smile)\u003c/p\u003e\n\u003cp\u003eH: \u0026ldquo;jeez KG! did you atleast tell him you were an Android developer?\u0026rdquo;\u003c/p\u003e\n\u003cp\u003eme: \u0026ldquo;i think he might have figured that out from our conversation\u0026hellip; or my tshirt\u0026rdquo;\u003c/p\u003e\n\u003cp\u003eMy colleagues were facepalming and laughing so hard that my announcement didn\u0026rsquo;t seem so triumphant after all. Sigh\u0026hellip; to be star struck.\u003c/p\u003e\n\u003cp\u003eI still fondly remember the memory and am now fully armed with conversation points, for that next time I run into Andy.\u003c/p\u003e\n\u003cp\u003eAndy Rubin \u003ca href=\"https://en.wikipedia.org/wiki/Essential_Phone\"\u003ejust announced Essential\u003c/a\u003e and I\u0026rsquo;m super excited to see where this goes.\u003c/p\u003e\n"
    },
    {
        "title" : "New Year - 2017",
        "date_published" : "2017-01-31T00:00:00-07:00",
        "id" : "https://kau.sh/blog/new-year-2017/",
        "file_path" : "blog/2017-01-31-new-year-2017.md",
        "url" : "https://kau.sh/blog/new-year-2017/",
        "content_html" : "\u003cp\u003eI know it\u0026rsquo;s almost the end of January but I like to take my time with these posts. You can take a look at \u003ca href=\"/categories/#new-year\"\u003emy previous year-end posts here\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIn addition to just jotting things I was most proud/happy about this year, I also want to note down some of my learnings. There were many overwhelming moments that led to much introspection. I want to try and document some of those moments here (atleast the less embarrassing ones). So here goes:\u003c/p\u003e\n\u003ch1 id=\"stuff-i-did\"\u003eStuff I did:\u003c/h1\u003e\n\u003ch2 id=\"fun-stuff\"\u003eFun stuff:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003emet John Paul White : if you haven’t heard of the band \u003ca href=\"https://www.youtube.com/playlist?list=PLEUHxnpJL16K8MG1BEeDd3VXqKySs2veF\"\u003eCivil Wars, I plead you take a listen\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003elearnt how to make my own latte (like an actual barista would). Given how big a coffee addict I am, this was bound to happen. Also landed up buying a Keurig machine for my new place \u0026gt;\u0026lt; (don\u0026rsquo;t judge me, it\u0026rsquo;s been the best investment ever)\u003c/li\u003e\n\u003cli\u003ecleaned up the blog design yet again (did it in a Singapore lounge on an 8 hour layover)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"travels\"\u003eTravels:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003emade the pilgrimage to Disneyland again this year (twice). The night parade blew my socks away (twice!)\u003c/li\u003e\n\u003cli\u003ehiked Grand Canyon with some buddies. Grand doesn\u0026rsquo;t even close to describing this place\u003c/li\u003e\n\u003cli\u003eWent camping at Yellow Stone National Park. It was crazy fun and cold! (we didn\u0026rsquo;t anticipate the temperature drop and woke up one morning in our tent to subzero temperatures.. that part was not so fun)\u003c/li\u003e\n\u003cli\u003etravelled to Sweden for the first time (my first time to Europe). I \u003ca href=\"/ppt/\"\u003ewent to speak at a conference\u003c/a\u003e and the overall experience was simply amazing\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"android-stuff\"\u003eAndroid stuff:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://fragmentedpodcast.com\"\u003eFragmented\u003c/a\u003e hit ep.70: this may not seem like a big deal by regular podcasting standards but Donn and I try very hard to keep Fragmented rich with content. Coming up with new interesting content every week is not as easy as you would think. But it\u0026rsquo;s been a crazy and extremely rewarding journey so far\u003c/li\u003e\n\u003cli\u003eFragmented joins the Spec network. It\u0026rsquo;s an amazing team and the collaboration really helps us move faster\u003c/li\u003e\n\u003cli\u003ebecame a \u003ca href=\"https://developers.google.com/experts/people/kaushik-gopal\"\u003eGDE\u003c/a\u003e. I\u0026rsquo;m honored and extremely grateful to have been recognized by Google for this\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/instacart/truetime-android\"\u003eopen sourced TrueTime\u003c/a\u003e: as part of a really interesting and challenging project at Instacart, we landed up open sourcing this library for Android. \u003ca href=\"https://tech.instacart.com/offline-first-introducing-truetime-for-swift-and-android-15e5d968df96#.i8gncu83i\"\u003eRead more about it here\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"life-learnings\"\u003eLife learnings\u003c/h1\u003e\n\u003ch2 id=\"buffets-2-list-strategy\"\u003eBuffet\u0026rsquo;s 2 list strategy\u003c/h2\u003e\n\u003cp\u003eI found myself constantly interested in a gazillion projects but struggled for time. I achieved a lot but just found myself more depressed cause I couldn\u0026rsquo;t finish everyting on my admittedly unrealistic list. I then came across this fantastic \u003ca href=\"http://jamesclear.com/buffett-focus\"\u003epost by James Clear on Warren Buffett\u0026rsquo;s \u0026ldquo;2 list\u0026rdquo; strategy\u003c/a\u003e that explained how Warrent Buffett tackled this problem. It was eye opening and I now follow a similar routine to really whittle down my wishlist of projects.\u003c/p\u003e\n\u003ch2 id=\"highly-polarized-decisions\"\u003eHighly polarized decisions\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI knew we were on to something because it was so polarizing\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003ePicked this up in \u003ca href=\"http://pca.st/MgSK#t=530\"\u003ethe Presentable podcast\u003c/a\u003e. To paraphrase what\u0026rsquo;s said: You know you\u0026rsquo;re treading the right path if the decisions you take are highly polarized. If everyone is meh, that’s the most dangerous thing for your product. But if you have two groups both feeling very strongly about something, then you know you’re getting somewhere.\u003c/p\u003e\n\u003ch2 id=\"on-changing-your-mind\"\u003eOn changing your mind\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAnybody who doesn’t change their mind a lot is dramatically underestimating the complexity of the world we live in\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJeff Bezos\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eby way of \u003ca href=\"https://twitter.com/david_perell/status/792747921473171456\"\u003ethis tweet\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"mindfulness-and-observation\"\u003eMindfulness and observation\u003c/h2\u003e\n\u003cp\u003eMindfulness and keen observation just makes you a smarter person. One of my buddies is a top notch designer and all around super smart person. I noticed this quality about her and i\u0026rsquo;m convinced there\u0026rsquo;s a strong correlation between smarts and a good power of observation. If anything, being more aware just gives you the ammo to have smarter conversations.\u003c/p\u003e\n\u003cp\u003eHere\u0026rsquo;s an interesting exercise for you folks: if I asked you to draw the super ubiquitous USB symbol, how accurately would you be able to draw it? You\u0026rsquo;ve seen it countless times but have you stopped to observe that there\u0026rsquo;s actually a triangle, square and circle on each of the spokes of the trident? do you know what it signifies?\u003c/p\u003e\n\u003ch2 id=\"being-happy-and-enjoying-your-life\"\u003eBeing happy and enjoying your life\u003c/h2\u003e\n\u003cp\u003eI need to keep reminding myself of this more:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn the end, only three things matter:\u003c/p\u003e\n\u003cp\u003ehow much you loved,\u003c/p\u003e\n\u003cp\u003ehow gently you lived and\u003c/p\u003e\n\u003cp\u003ehow gracefully you let go of things not meant for you\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBuddha\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI draw my learning not just from scriptures but also the sanctimonious art form of TV: while watching a rerun of Boston Legal (James Spader at his best btw) I noticed this phrase, which just made me happy:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003ewake up every morning, with all the promise that morning conveys\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eBy way of an anecdote that Matt Damon mentioned, in an interview:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIt’s easy to be younger, just make time.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eStephen Hawking\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003ch1 id=\"software-engineering-learnings\"\u003eSoftware Engineering learnings\u003c/h1\u003e\n\u003cp\u003e\u003cem\u003eThese are more pertinent to software engineers and developers\u003c/em\u003e\u003c/p\u003e\n\u003ch2 id=\"yishan-tenets-of-growing-a-great-engineering-organizationhttpalgeri-wongcomyishanengineering-managementhtml\"\u003e\u003ca href=\"http://algeri-wong.com/yishan/engineering-management.html\"\u003eYishan tenets of growing a great engineering organization\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eI came across this article by Yishan (an ex Engineering Manager at Facebook). If you\u0026rsquo;re looking for advice and tips on being a better software leader, definitely \u003ca href=\"http://algeri-wong.com/yishan/engineering-management.html\"\u003eread this article\u003c/a\u003e. Key takeaways:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eHiring is number one\u003c/li\u003e\n\u003cli\u003eLet process be implemented by those who practice it\u003c/li\u003e\n\u003cli\u003ePromote from within\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://algeri-wong.com/yishan/engineering-management-tools-are-top-priority.html\"\u003eTools are top priority (devs should really read this one)\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"10-modern-software-engineering-mistakeshttpsmediumcomrdsubhas10-modern-software-engineering-mistakes-bc67fbef4fc8afede6t1i\"\u003e\u003ca href=\"https://medium.com/@rdsubhas/10-modern-software-engineering-mistakes-bc67fbef4fc8#.afede6t1i\"\u003e10 modern software engineering mistakes\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis was a great read and honestly more a reaffirmation of some core technical beliefs. Keep learning and adapting.\u003c/p\u003e\n\u003ch2 id=\"importance-of-vacation\"\u003eImportance of vacation\u003c/h2\u003e\n\u003cp\u003eMost of my career has been in startup land and I enjoy every moment of it. But make no mistake, it takes a toll. You\u0026rsquo;re driven by the energy around you and if you happen to have great colleagues, the excitement is compounded. I hadn\u0026rsquo;t taken a proper vacation in almost 2 and half years. I totally could have, but just never felt it was the right time. But I decided to take a good 3 weeks off for the holidays this time, and it was absolutely fabulous. I met up with old friends and made so many new ones.\u003c/p\u003e\n\u003cp\u003eMost importantly, I came back fresh and my productivity was 2x what it was. Definitely going to be slotting in proper vacation time moving forward.\u003c/p\u003e\n\u003cp\u003eI was reminded of this story about Pixar:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe most powerful example dates back to the making of Toy Story 2 in 1999. With only seven months to go before its scheduled release date, Pixar’s creative leadership felt that Toy Story 2 was not working creatively. Disney, Pixar’s distribution partner, knew that it took 3-4 years to make an animated film. They argued that it was too late to start over and that Pixar should release the film as is. But Pixar refused, deciding instead to tear up the story and re-write it from scratch. The studio pushed itself to the brink of collapse to complete the new version of Toy Story 2 on time, and the film was a huge commercial and critical success. And, when it was completed, the executive team took the extraordinary step of closing the studio for two entire months to let everyone recuperate.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e2016 was by far my most action packed year. 2017 has started with much trepidation and fear. But if there\u0026rsquo;s one thing these years have taught me, it\u0026rsquo;s never to lose hope and always to keep charging forward.\u003c/p\u003e\n\u003cp\u003eOnward and upward peeps!\u003c/p\u003e\n"
    },
    {
        "title" : "What I learnt using the Presenter pattern",
        "date_published" : "2016-11-10T00:00:00Z",
        "id" : "https://kau.sh/ppt/what-i-learnt-using-the-presenter-pattern/",
        "file_path" : "ppt/2016-11-10-oredev.md",
        "url" : "https://kau.sh/ppt/what-i-learnt-using-the-presenter-pattern/",
        "content_html" : "\u003cp\u003eWe recently did an overhaul for Instacart\u0026rsquo;s shopper app and committed to using a presenter pattern for this. It turned out awesome!\nPresenters are not a new concept. They\u0026rsquo;ve been around since the dawn of software engineering time. But the devil is in the implementation details. If you have an Activity, RecyclerView, Adapter etc. at how many levels would you have the presenter? How does the use of presenters enabled super fast testing? How does the use of presenters enable constantly changing user requirements?\nWe\u0026rsquo;ll discuss all the juicy war stories in this session\u003c/p\u003e\n\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n  \u003ciframe src=\"https://player.vimeo.com/video/191068122\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"vimeo video\" webkitallowfullscreen mozallowfullscreen allowfullscreen\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\n\u003c!-- raw HTML omitted --\u003e\n\u003ch2 id=\"slides\"\u003eSlides\u003c/h2\u003e\n\u003cscript async class=\"speakerdeck-embed\" data-id=\"9bc3d348bc7b4439ac31d6acc0639b05\" data-ratio=\"\" src=\"//speakerdeck.com/assets/embed.js\"\u003e\u003c/script\u003e\n"
    },
    {
        "title" : "Learning Rx by Example (Part 2)",
        "date_published" : "2016-11-09T00:00:00Z",
        "id" : "https://kau.sh/ppt/learning-rx-by-example-part-2/",
        "file_path" : "ppt/2016-11-09-oredev.md",
        "url" : "https://kau.sh/ppt/learning-rx-by-example-part-2/",
        "content_html" : "\u003cdiv class='callout center'\u003e\n    This is a revised version of a \u003ca href=\"/ppt/learning-rx-by-example-part-1/\"\u003etalk I first gave in 2015\u003c/a\u003e.\n\u003c/div\u003e\n\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n  \u003ciframe src=\"https://player.vimeo.com/video/190922794\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"vimeo video\" webkitallowfullscreen mozallowfullscreen allowfullscreen\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\n\u003c!-- raw HTML omitted --\u003e\n\u003ch2 id=\"slides\"\u003eSlides\u003c/h2\u003e\n\u003cscript async class=\"speakerdeck-embed\" data-id=\"26b6a98d0e6e4642ac8dfbd3b8a14f7f\" data-ratio=\"\" src=\"//speakerdeck.com/assets/embed.js\"\u003e\u003c/script\u003e\n"
    },
    {
        "title" : "New Year - 2016",
        "date_published" : "2016-01-01T00:00:00-07:00",
        "id" : "https://kau.sh/blog/new-year-2016/",
        "file_path" : "blog/2016-01-01-new-year-2016.md",
        "url" : "https://kau.sh/blog/new-year-2016/",
        "content_html" : "\u003cp\u003eI finished 2014 not having the slightest clue what would be in store. 2015 was a rollercoaster:\u003c/p\u003e\n\u003cp\u003eI started a new podcast \u003ca href=\"http://fragmentedpodcast.com/about/\"\u003eFragmented\u003c/a\u003e (with my cohost and now friend Donn Felker), bought my childhood dream car (a Mini Cooper), got a new job (Wedding Party was acquired by Instacart), visited NY for the first time (for a \u003ca href=\"https://speakerdeck.com/kaushikgopal/painless-ui-testing\"\u003etalk\u003c/a\u003e I gave at DroidCon NYC) and finally - this one really stumped me - moved to San Francisco.\u003c/p\u003e\n\u003cp\u003eThe new year brings in a sea of sweeping change. With it I gain a little insight about myself and the world (yes, even the goofball that you see has been chiseled with each passing year). There were lows but we should focus on the highs.\u003c/p\u003e\n\u003cp\u003eLife is good, people can be amazing, let\u0026rsquo;s surprise ourselves and here\u0026rsquo;s to a peaceful and amazing 2016!\u003c/p\u003e\n"
    },
    {
        "title" : "Painless UI Testing",
        "date_published" : "2015-08-28T00:00:00Z",
        "id" : "https://kau.sh/ppt/painless-ui-testing/",
        "file_path" : "ppt/2015-08-28-droidcon-nyc.md",
        "url" : "https://kau.sh/ppt/painless-ui-testing/",
        "content_html" : "\u003cp\u003eWhat if you could get your UI tests to run as fast as your unit tests?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eyou would write more tests\u003c/li\u003e\n\u003cli\u003eyou would feel happy writing the tests\u003c/li\u003e\n\u003cli\u003eyour managers would be pleased with you not goofing around with that new testing framework around the corner\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eUsing patterns of yore (like Martin Fowler\u0026rsquo;s supervising controller, effective use of presenters and view model state) we\u0026rsquo;re going to tackle everyday-real-annoying impediments to UI testing. We\u0026rsquo;ll address what parts of the UI need testing and effective ways of testing them.\u003c/p\u003e\n\u003cp\u003eThe objective of the talk is to prove to the world that the title of this talk is not an oxymoron.\u003c/p\u003e\n\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n  \u003ciframe src=\"https://www.youtube.com/embed/ZzXN6iV26wg\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" allowfullscreen title=\"YouTube Video\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\n\u003c!-- raw HTML omitted --\u003e\n\u003ch2 id=\"slides\"\u003eSlides\u003c/h2\u003e\n\u003cscript async class=\"speakerdeck-embed\" data-id=\"889a91b23088486b83cd7d868fe7e75c\" data-ratio=\"\" src=\"//speakerdeck.com/assets/embed.js\"\u003e\u003c/script\u003e\n"
    },
    {
        "title" : "A note about the warmth of the share and replay operators",
        "date_published" : "2015-07-11T00:00:00-07:00",
        "id" : "https://kau.sh/blog/a-note-about-the-warmth-share-operator/",
        "file_path" : "blog/2015-07-11-a-note-about-the-warmth-share-operator.md",
        "url" : "https://kau.sh/blog/a-note-about-the-warmth-share-operator/",
        "content_html" : "\u003cp\u003eA common question most android developers have when using RxJava is: how do I cache or persist the work done by my observables over a configuration change? If you start a network call and the user decides to rotate the screen, the work spent in executing that network call would have been in vain (considering the OS would re-create your activity).\u003c/p\u003e\n\u003cp\u003eThere are two widely accepted solutions to this problem:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003estore the observable somewhere as a singleton, possibly apply the \u003ca href=\"https://github.com/ReactiveX/RxJava/wiki/Observable-Utility-Operators\"\u003ecache\u003c/a\u003e operator and re-subscribe on activity recreation\u003c/li\u003e\n\u003cli\u003ehouse your observable in a retained \u0026ldquo;worker\u0026rdquo; fragments \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eI \u003ca href=\"https://github.com/kaushikgopal/RxJava-Android-Samples#12-persist-data-on-activity-rotations-using-subjects-and-retained-fragments\"\u003ewhipped up a quick example\u003c/a\u003e on \u003ca href=\"https://github.com/kaushikgopal/RxJava-Android-Samples\"\u003egithub\u003c/a\u003e to demonstrate the second technique (which is generally my choice of poison). Now I\u0026rsquo;ve used the technique of worker fragments (successfully) a bunch of times before so I was a little surprised to see the example not work.\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s go over the use case again:\u003c/p\u003e\n\u003cp\u003eYou have an observable that executes a long running network call. Before the call completes, you perform an activity rotation. After the activity is recreated, you continue the network call from where it left off or just use the result if it completes before your activity recreation process.\u003c/p\u003e\n\u003cp\u003eInstead of simulating this network call use case I decided to just fake it with a \u0026ldquo;hot\u0026rdquo; observable instead (which makes the use case a tad bit different but would help demonstrate the solution equally well). If you\u0026rsquo;re looking for a quick simple example that demonstrates the difference between a hot and cold observable, I strongly recommend watching this \u003ca href=\"https://egghead.io/lessons/rxjs-demystifying-cold-and-hot-observables-in-rxjs\"\u003eegghead.io video on the subject\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIn fact, I used the exact same concoction of operators for my example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eObservable\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003einterval\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e TimeUnit\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eSECONDS\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003emap\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Func1\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eLong\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e Integer\u003cspan style=\"color:#f92672\"\u003e\u0026gt;()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e Integer \u003cspan style=\"color:#a6e22e\"\u003ecall\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eLong aLong\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e aLong\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eintValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003etake\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e20\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eshare\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eA little more investigation revealed that the share operator I used to fake the source stream was not really hot but \u0026ldquo;warm\u0026rdquo;. This is easier explained with Marble diagrams:\u003c/p\u003e\n\u003cp\u003eHere\u0026rsquo;s how we expect share to behave (and it does):\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/marble_diag_share_1.jpg\" alt=\"share marble diag 1\" title=\"Marble Diagram share 1\"\u003e\u003c/p\u003e\n\u003cp\u003eBut owing to the activity recreation, what really happens is that the first subscriber (S1) unsubscribes from the source observable (O1 - housed in the worker fragment), after which a similar subscriber (S2) from the recreated activity subscribes again to O1 from the same worker fragment. So the marble diagram really lands up looking like this:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/marble_diag_share_2.jpg\" alt=\"share marble diag 2\" title=\"Marble Diagram share 2\"\u003e\u003c/p\u003e\n\u003cp\u003eNotice that re-subscription? That changes things a little.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/marble_diag_share_3.jpg\" alt=\"share marble diag 3\" title=\"Marble Diagram share 3\"\u003e\u003c/p\u003e\n\u003cp\u003eIn this way, the share operator is \u0026ldquo;warm\u0026rdquo;. It behaves cold to first time subscribers but hot to subsequent ones.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003ethe share operator behaves cold to first time subscribers but hot to subsequent ones\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"epilogue\"\u003eEpilogue:\u003c/h2\u003e\n\u003cp\u003eSo how did I circumvent the problem? I added a fake subscriber that never unsubscribes.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003estoreObservable \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    Observable\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003einterval\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e TimeUnit\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eSECONDS\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003emap\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Func1\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eLong\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e Integer\u003cspan style=\"color:#f92672\"\u003e\u0026gt;()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e Integer \u003cspan style=\"color:#a6e22e\"\u003ecall\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eLong aLong\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e aLong\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eintValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003etake\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e20\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eshare\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Do not do this in production!\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// this is a hack!\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003estoreObservable \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e storeObservable\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eClever but very hacky\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e. Think carefully before you write code like this in production.\u003c/p\u003e\n\u003ch2 id=\"epilogue-part-2\"\u003eEpilogue (Part 2):\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/fabioCollini/status/620664072770592768\"\u003e@fabioCollini\u003c/a\u003e on twitter said he preferred a replay().connect() approach over the publish().refcount() one which is \u003ca href=\"../rxjava-tip-for-the-day-share-publish-refcount-and-all-that-jazz/\"\u003ewhat the share operator really is\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis reminded me of a tip that \u003ca href=\"https://twitter.com/danlew42\"\u003eDan\u003c/a\u003e mentioned once, replay is similar to share in that it’s hot to the first subscriber and cold to every other subscriber after the first item emits\u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003ereplay is hot to the first subscriber and cold to every other subscriber after the first item emits\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eBecause marble diagrams are amazing:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/marble_diagram_replay.001.jpg\" alt=\"replay marble diag 1\" title=\"Marble Diagram replay 1\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/marble_diagram_replay.002.jpg\" alt=\"replay marble diag 1\" title=\"Marble Diagram replay 2\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/marble_diagram_replay.003.jpg\" alt=\"replay marble diag 1\" title=\"Marble Diagram replay 3\"\u003e\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;ve since \u003ca href=\"https://github.com/kaushikgopal/RxJava-Android-Samples/commit/1812c18064a1a508b3d704be21137b1e3ab868f0?diff=split\"\u003emodified the example to use a ConnectableObservable \u003c/a\u003e instead and it works pretty much the same way.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eAlex Lockwood wrote about \u003ca href=\"http://www.androiddesignpatterns.com/2013/04/retaining-objects-across-config-changes.html\"\u003ethis approach\u003c/a\u003e here.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:2\"\u003e\n\u003cp\u003eI can\u0026rsquo;t take credit for this idea. The comments in the code reveal the identity of the troublemaker.\u0026#160;\u003ca href=\"#fnref:2\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn:3\"\u003e\n\u003cp\u003eDepending on what it’s replaying, it could also be cold to the first subscriber (he is quick to point out)\u0026#160;\u003ca href=\"#fnref:3\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "Learning Rx by Example (Part 1)",
        "date_published" : "2015-06-04T00:00:00Z",
        "id" : "https://kau.sh/ppt/learning-rx-by-example-part-1/",
        "file_path" : "ppt/2015-06-04-sf-android.md",
        "url" : "https://kau.sh/ppt/learning-rx-by-example-part-1/",
        "content_html" : "\u003cp\u003eSo RxJava is this new kid on the block. But what can you the Android developer really use it for today? We\u0026rsquo;ll look at everyday use cases and solve them with RxJava.\u003c/p\u003e\n\u003cp\u003eRemember that first day when you tasted Nutella? RxJava is Nutella for Android… everything is awesome with RxJava.\u003c/p\u003e\n\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n  \u003ciframe src=\"https://www.youtube.com/embed/k3D0cWyNno4\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" allowfullscreen title=\"YouTube Video\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\n\u003c!-- raw HTML omitted --\u003e\n\u003ch2 id=\"slides\"\u003eSlides\u003c/h2\u003e\n\u003cscript async class=\"speakerdeck-embed\" data-id=\"80b39d4e61eb47af817549ec3d366377\" data-ratio=\"\" src=\"//speakerdeck.com/assets/embed.js\"\u003e\u003c/script\u003e\n"
    },
    {
        "title" : "The Audio Latency Problem on Android",
        "date_published" : "2015-04-16T00:00:00-07:00",
        "id" : "https://kau.sh/blog/the-audio-latency-problem-on-android/",
        "file_path" : "blog/2015-04-16-the-audio-latency-problem-on-android.md",
        "url" : "https://kau.sh/blog/the-audio-latency-problem-on-android/",
        "content_html" : "\u003cp\u003ewhen \u003ca href=\"https://www.youtube.com/watch?v=cU-eAzNp5Hw\"\u003eBilly Joel was on the Jimmy Falon show\u003c/a\u003e and they used the \u003ca href=\"http://loopyapp.com/\"\u003eiPad app \u0026ldquo;Looper\u0026rdquo;\u003c/a\u003e, i immediately looked for the android equivalent. there wasn\u0026rsquo;t one. i\u0026rsquo;m an android developer and a sound engineer (enthusiast) so obviously the right thing to do, was build one\u0026hellip;\u003c/p\u003e\n\u003cp\u003ei spent about two weeks and then gave up on the project cause it demanded far more time than i initially anticipated. the linked article is a \u003ca href=\"https://superpowered.com/androidaudiopathlatency\"\u003efantastic read and summary\u003c/a\u003e on the problems with audio latency in android (and why i eventually just gave up on that project).\u003c/p\u003e\n"
    },
    {
        "title" : "Fragmented Podcast - Episode #2 : Android Studio",
        "date_published" : "2015-03-03T00:00:00-07:00",
        "id" : "https://kau.sh/blog/fragmented-episode-2-is-out/",
        "file_path" : "blog/2015-03-03-fragmented-episode-2-is-out.md",
        "url" : "https://kau.sh/blog/fragmented-episode-2-is-out/",
        "content_html" : "\u003cp\u003ehear ye, hear ye! the 2nd episode of the \u003ca href=\"http://fragmentedpodcast.com/\"\u003eFragmented Podcast\u003c/a\u003e is out. \u003ca href=\"http://www.donnfelker.com/\"\u003eDonn\u003c/a\u003e and i start by discussing Lamas, blue dresses and IDEs for Android development!\u003c/p\u003e\n"
    },
    {
        "title" : "Rx Is Coming",
        "date_published" : "2015-03-02T00:00:00-07:00",
        "id" : "https://kau.sh/blog/rx-is-coming/",
        "file_path" : "blog/2015-03-02-rx-is-coming.md",
        "url" : "https://kau.sh/blog/rx-is-coming/",
        "content_html" : "\u003cp\u003ei spent a huge part of my 2014 on \u0026ldquo;\u003ca href=\"https://github.com/mono/rx\"\u003eRx\u003c/a\u003e\u0026rdquo; (or reactive extensions) which is essentially a library that helps with a development pattern called \u0026ldquo;reactive programming\u0026rdquo;. i think Rx is going to be huge in the app development world. it\u0026rsquo;s already picked up a lot of steam, but i think it\u0026rsquo;s going to become a \u003cstrong\u003estaple\u003c/strong\u003e for professional app developers.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003econsider this extremely common scenario\u003c/em\u003e:\u003c/p\u003e\n\u003cp\u003eyou\u0026rsquo;re in \u003ca href=\"http://en.wikipedia.org/wiki/Burundi\"\u003eBurundi\u003c/a\u003e surfing facebook. you want to get the latest updates from facebook, so  your smart phone (from a network in Burundi) shoots a request to the facebook servers in Menlo Park. that server reconciles your request and sends back 5 epic selfies from your dearest friends. in our universe, this takes time. maybe not a whole lot according to you (a second perhaps) but for that mini super-computer you hold in your hand, that\u0026rsquo;s 1000000 microseconds. that\u0026rsquo;s a long time that you\u0026rsquo;re asking it to twiddle its thumbs (given that it usually processes stuff in a couple of microseconds). what\u0026rsquo;s it supposed to do until it hears back from the facebook servers? after it\u0026rsquo;s done showing you the updates for your first screen, when would it know to trigger another update? what if the data that came back from the servers indicated that you need some more information? what if the third request in that chain failed for some reason? welcome to the world of asynchronous programming. Rx (or FRP as it is mistakingly assumed to be synonymous with) was built to deal with a lot of this pain.\u003c/p\u003e\n\u003cp\u003ea natural question is: don\u0026rsquo;t app developers do this anyway today? yes we do. but it\u0026rsquo;s painful and error prone. it also results in bad UX (spinners, progress indicators, alert dialogs for failed network issues and other technical problems that users really  shouldn\u0026rsquo;t have to deal with).\u003c/p\u003e\n\u003cp\u003eyou can get by very far without having to deal with many of the aforementioned problems (like keeping all your information saved on your device instead of say a big server machine located elsewhere that would require a network connection) but as more services move to storing data online, streaming data from servers, sharing data across multiple platforms and devices, dealing with the complexity of asynchronous programming has become common place.\u003c/p\u003e\n\u003cp\u003ehow is it then, that every developer you know, isn\u0026rsquo;t already talking about this Rx stuff? the reception to Rx (\u003ca href=\"http://en.wikipedia.org/wiki/Rx\"\u003esee what i did there?\u003c/a\u003e) in the developer community has been \u0026hellip;warm. the few serious developers who have started to use it, swear by it and say it\u0026rsquo;s the most amazing thing ever. the ones that are yet to go through this feat, currently see it as another fancy hipster developer pattern. it also has a very steep learning curve. this doesn\u0026rsquo;t help its cause (did i mention it happens to be a pattern \u003ca href=\"https://msdn.microsoft.com/en-us/data/gg577609.aspx\"\u003epioneered by Microsoft\u003c/a\u003e?).\u003c/p\u003e\n\u003cp\u003ebut make no mistake, Rx is coming. eventually everyone is going to suck it up and use it in its current form, or the dev community will fashion a variant that\u0026rsquo;s easier for newer developers to pick up.\u003c/p\u003e\n"
    },
    {
        "title" : "RxJava Tip for the Day - Share, Publish, Refcount and All That Jazz",
        "date_published" : "2015-01-21T00:00:00-07:00",
        "id" : "https://kau.sh/blog/rxjava-tip-for-the-day-share-publish-refcount-and-all-that-jazz/",
        "file_path" : "blog/2015-01-21-rxjava-tip-for-the-day-share-publish-refcount-and-all-that-jazz.md",
        "url" : "https://kau.sh/blog/rxjava-tip-for-the-day-share-publish-refcount-and-all-that-jazz/",
        "content_html" : "\u003cdiv class='callout center'\u003e\n    Originally posted this article on the Wedding Party tech blog\n\u003c/div\u003e\n\u003cp\u003eOk, so in \u003ca href=\"../debouncedbuffer-with-rxjava/\"\u003emy previous post\u003c/a\u003e I innocuously introduced the \u003ccode\u003e.share()\u003c/code\u003e operator.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eObservable\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eObject\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e tapEventEmitter \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e _rxBus\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003etoObserverable\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e().\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eshare\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"what-is-this-share-operator\"\u003eWhat is this share operator?\u003c/h2\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eThe \u003ccode\u003e.share()\u003c/code\u003e operator is basically just \u003ca href=\"https://github.com/ReactiveX/RxJava/wiki/Connectable-Observable-Operators\"\u003ea wrapper to the chained call \u003ccode\u003e.publish().refcount()\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eYou\u0026rsquo;ll find the chained combo \u003ccode\u003e.publish().refcount()\u003c/code\u003e used in quite a few Rx examples on the web. It allows you to \u0026ldquo;share\u0026rdquo; the emission of the stream. Considering how powerpacked and frequently used this combo is, RxJava basically introduced the friendlier more useful operator \u003ccode\u003eshare()\u003c/code\u003e. This mechanism is sometimes referred to as  \u0026ldquo;multicasting\u0026rdquo;.\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s dig into some of the basics first:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026ldquo;\u003ca href=\"https://github.com/ReactiveX/RxJava/wiki/Connectable-Observable-Operators\"\u003eConnectedObservable\u003c/a\u003e\u0026rdquo; - This is a kind of observable which doesn\u0026rsquo;t emit items even if subscribed to. It only starts emitting items after its \u003ccode\u003e.connect()\u003c/code\u003e method is called.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cem\u003eIt is for this reason that a connected obesrvable is also considered \u0026ldquo;cold\u0026rdquo; or \u0026ldquo;inactive\u0026rdquo; before the connect method is invoked.\u003c/em\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003e.publish()\u003c/code\u003e- This method allows us to change an ordinary observable into a \u0026ldquo;ConnectedObservable\u0026rdquo;. Simply call this method on an ordinary observable and it becomes a connected one.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eWe now know what 1/2 of the operator \u003ccode\u003eshare\u003c/code\u003e does. Now why would you ever use a Connected Observable? \u003ca href=\"https://github.com/ReactiveX/RxJava/wiki/Connectable-Observable-Operators\"\u003eThe docs say\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn this way you can wait for all intended Subscribers to subscribe to the Observable before the Observable begins emitting items.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis essentially means that a regular usecase for \u003ccode\u003epublish\u003c/code\u003e would involve more than one subscriber. When you have more than one subscriber, it can get tricky to handle each of the subscriptions and dispose them off correctly. To make this process easier, Rx introduced this magical operator called \u003ccode\u003erefcount()\u003c/code\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003erefcount()\u003c/code\u003e - This operator keeps track of how many subscribers are subscribed to the resulting Observable and refrains from disconnecting from the source ConnectedObservable until all such Observables are unsubscribed.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIt essentially maintains a reference counter in the background and accordingly takes the correct action when a subscription needs to be unsubscribed or disposed off. This is the second 1/2 of the operator \u003ccode\u003eshare\u003c/code\u003e. You are now armed with knowledge of what each of those terms mean.\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s look at the example from debouncedBuffer again and see how \u003ccode\u003eshare\u003c/code\u003e was used there:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eObservable\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eObject\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e tapEventEmitter \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e _rxBus\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003etoObserverable\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e().\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eshare\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// which is really the same as:\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003eObservable\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eObject\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e tapEventEmitter \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e _rxBus\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003etoObserverable\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e().\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003epublish\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e().\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003erefcount\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe now have a \u0026ldquo;shareable\u0026rdquo; observable called \u0026ldquo;tapEventEmitter\u0026rdquo; and because it\u0026rsquo;s sharable and still not yet \u0026rsquo;live\u0026rsquo; (\u003ccode\u003epublish\u003c/code\u003e from the \u003ccode\u003eshare\u003c/code\u003e call changes it to a ConnectedObservable), we can use it to compose our niftier Observables and rest assured that we always have a reference to the original observable (the original observable being \u003ccode\u003e_rxBus.toObserverable()\u003c/code\u003e in this case).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eObservable\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eObject\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e tapEventEmitter \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e _rxBus\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003etoObserverable\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e().\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eshare\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eObservable\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eObject\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e debouncedEventEmitter \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e tapEventEmitter\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003edebounce\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e TimeUnit\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eSECONDS\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etapEventEmitter\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ebuffer\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003edebouncedEventEmitter\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAll this sounds good. There is however a possible race condition with this implementation (which \u003ca href=\"https://gist.github.com/benjchristensen/e4524a308456f3c21c0b#comment-1367814\"\u003eBen pointed out through a comment on this gist\u003c/a\u003e). The race condition occurs because there are two subscribers here (debounce and buffer) and they may come and go at different points. Remember that the RxBus is backed by a hot/live Subject which is constantly emitting items. By using the \u003ccode\u003eshare\u003c/code\u003e operator we guarantee a reference to the same source, but NOT that they\u0026rsquo;ll receive the exact same items if the subscribers enter at different points of time. Ben explains this well:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe race condition is when the two consumers subscribe. Often on a hot stream it doesn\u0026rsquo;t matter when subscribers come and go, and refCount is perfect for that. The race condition refCount protects against is having only 1 active subscription upstream. However, if 2 Subscribers subscribe to a refcounted stream that emits 1, 2, 3, 4, 5, the first may get 1, 2, 3, 4, 5 and the second may get 2, 3, 4, 5.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eTo ensure all subscribers start at exactly the same time and get the exact same values, refCount can not be used. Either ConnectableObservable with a manual, imperative invocation of connect needs to be done, or the variant of publish(function) which connects everything within the function before connecting the upstream.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIn our usage it\u0026rsquo;s almost immediate so it probably wouldn\u0026rsquo;t matter a whole lot but considering the use case, it\u0026rsquo;s ideal to have the exact same events emitted for the debouncedBuffer usecase. \u003ca href=\"https://github.com/kaushikgopal/Android-RxJava/blob/master/app/src/main/java/com/morihacky/android/rxjava/rxbus/RxBusDemo_Bottom3Fragment.java\"\u003eI added a third improved implementation to handle this race condition\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// don\u0026#39;t start emitting items just yet by turning the observable to a connected one\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003eConnectableObservable\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eObject\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e tapEventEmitter \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e _rxBus\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003etoObserverable\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e().\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003epublish\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etapEventEmitter\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003epublish\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e((\u003c/span\u003eFunc1\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003estream\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// inside `publish`, \u0026#34;stream\u0026#34; is truly multicasted\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// applying the same technique for getting a debounced buffer sequence\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e stream\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ebuffer\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003estream\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003edebounce\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e TimeUnit\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eSECONDS\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}).\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e((\u003c/span\u003eAction1\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003etaps\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    _showTapCount\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003etaps\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003esize\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e());\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// start listening to events now\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003etapEventEmitter\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003econnect\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e"
    },
    {
        "title" : "Interested in an Android Developer Podcast?",
        "date_published" : "2015-01-11T00:00:00-07:00",
        "id" : "https://kau.sh/blog/interested-in-an-android-developer-focused-podcast/",
        "file_path" : "blog/2015-01-11-interested-in-an-android-developer-focused-podcast.md",
        "url" : "https://kau.sh/blog/interested-in-an-android-developer-focused-podcast/",
        "content_html" : "\u003cp\u003ei listen to a tonne of podcasts. i find activities such as doing my laundry, driving back home from work, doing the dishes \u0026hellip; all delightful because it gives me a chance to strap on some headphones and listen to a bunch of podcasts. in the time that i run those dreadfully boring chores i\u0026rsquo;ve found myself learning so much about technology and good software development.\u003c/p\u003e\n\u003cp\u003eas i was driving back home today i was listening to an \u003ca href=\"https://www.youtube.com/watch?v=T5e9h4poAvY\"\u003eepisode of Ruby Rogues\u003c/a\u003e and thought to myself:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003ewhy aren\u0026rsquo;t there more podcasts like this for Android?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003ethe iOS folks have \u003ca href=\"http://www.coreint.org\"\u003esome\u003c/a\u003e amazing \u003ca href=\"http://developingperspective.com\"\u003epodcasts\u003c/a\u003e focused for the developer audience. heck, i listen to two \u003ca href=\"http://www.imore.com/debug\"\u003eof\u003c/a\u003e \u003ca href=\"http://atp.fm\"\u003ethem\u003c/a\u003e and i\u0026rsquo;m not an iOS developer (granted they\u0026rsquo;re slightly more generic).\u003c/p\u003e\n\u003cp\u003eas an android developer there is exactly one show today that is focused on android development called \u0026ldquo;\u003ca href=\"http://androidbackstage.blogspot.com\"\u003eAndroid Developers Backstage\u003c/a\u003e\u0026rdquo;. it\u0026rsquo;s hosted by google engineers Chet Hasse and Tor Norbye (both of them work directly with Android). they\u0026rsquo;re funny and the podcast is amazing! if you\u0026rsquo;re an android developer you should absolutely be listening to it.\u003c/p\u003e\n\u003cp\u003emy only gripe with the show is that they live in their \u003cem\u003ebeautiful google bubble\u003c/em\u003e. on a recent show they \u003ca href=\"http://androidbackstage.blogspot.com/2014/08/android-developers-backstage-episode-11.html\"\u003einterviewed Jake Wharton\u003c/a\u003e (a.k.a superman android dev) and i found it really interesting that they had genuinely not heard of some of the libraries that Jake works on (like \u003ca href=\"http://square.github.io/picasso/\"\u003ePicasso\u003c/a\u003e, \u003ca href=\"http://square.github.io/retrofit/\"\u003eRetrofit\u003c/a\u003e and \u003ca href=\"http://jakewharton.github.io/butterknife/\"\u003eButterKnife\u003c/a\u003e). i guess it makes sense though: they\u0026rsquo;re google engineers working on android directly. if they really needed something, they would have had it baked in.\u003c/p\u003e\n\u003cp\u003ebut i don\u0026rsquo;t think i\u0026rsquo;m alone when i say that for some of us android developers, those libraries are \u003cstrong\u003eindispensable\u003c/strong\u003e for pushing out quality android apps quickly.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ei want to hear more about such libraries.\u003c/li\u003e\n\u003cli\u003ewhat are some of your learnings as an android developer that you would love to share?\u003c/li\u003e\n\u003cli\u003ewhat are some tricks and techniques you have in your utility belt?\u003c/li\u003e\n\u003cli\u003ecan you tell me about some android apps that are top notch and push the boundary in terms of quality and design?\n\u003cul\u003e\n\u003cli\u003ewhat are some interesting things they do?\u003c/li\u003e\n\u003cli\u003ehow do they do it?\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ei\u0026rsquo;ve been toying with the idea of starting an android podcast with a developer audience in mind. i\u0026rsquo;ve done a decent amount of sound-engineering in my day so the audio editing part isn\u0026rsquo;t daunting. it\u0026rsquo;s the whole planning around the actual podcast that sort of worries me. i\u0026rsquo;ll have to find developers to interview, do my homework before interviewing them, setup the environment and whole stack for the podcast, find a place to host the podcast and a whole bunch of other things that i can\u0026rsquo;t think of right now; all in addition to my regular job (which i also absolutely love).\u003c/p\u003e\n\u003cp\u003eit\u0026rsquo;s clearly a lot of work and will require a solid chunk of my free time. i don\u0026rsquo;t intend to make any money out of it so i\u0026rsquo;ll probably have to bear the costs myself intially (i really don\u0026rsquo;t mind that part at all though cause i\u0026rsquo;ll definitely be learning along the way). the effort only makes sense though if a larger group of people can benefit from this.\u003c/p\u003e\n\u003cp\u003ei\u0026rsquo;m trying to gauge interest and will explore the specifics only if people seem interested. so i ask you: \u003ca href=\"https://polldaddy.com/poll/8574924/\"\u003ewould you genuinely be interested in a developer-focused android podcast? (let me know by answering this poll)\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e[update:  many people were interseted, so i \u003ca href=\"http://www.donnfelker.com/announcing-fragmented-podcast-android-developers/\"\u003eteamed up with the amazing Donn Felker\u003c/a\u003e to start \u0026ldquo;\u003ca href=\"http://fragmentedpodcast.com/\"\u003eFragmented - An Android developer podcast\u003c/a\u003e\u0026rdquo;. \u003ca href=\"http://twitter.com/kaushikgopal\"\u003eLet us know what you think\u003c/a\u003e.]\u003c/p\u003e\n"
    },
    {
        "title" : "DebouncedBuffer With RxJava",
        "date_published" : "2015-01-05T00:00:00-07:00",
        "id" : "https://kau.sh/blog/debouncedbuffer-with-rxjava/",
        "file_path" : "blog/2015-01-05-debouncedbuffer-with-rxjava.md",
        "url" : "https://kau.sh/blog/debouncedbuffer-with-rxjava/",
        "content_html" : "\u003cdiv class='callout center'\u003e\n    Originally posted this article on the Wedding Party tech blog\n\u003c/div\u003e\n\u003cp\u003eThis is a bonus RxJava post that I landed up writing along with my \u003ca href=\"../implementing-an-event-bus-with-rxjava-rxbus\"\u003eprevious post on creating an event bus with RxJava\u003c/a\u003e. If you went through the \u003ca href=\"https://github.com/kaushikgopal/Android-RxJava/tree/master/app/src/main/java/com/morihacky/android/rxjava/rxbus\"\u003ecode in the actual repo\u003c/a\u003e you would have noticed more than one version of the bottom fragment in the RxBus demo.\u003c/p\u003e\n\u003cp\u003eOriginally I envisioned the RxBus example being a tad bit fanicer however as I coded up the example, I realized that too many concepts were getting conflated. The ridiculous simplicity of the RxBus implementation was lost. So I dumbed down the original example but left in the original code for the Rx padawans.\u003c/p\u003e\n\u003cp\u003eOriginal example:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/rxbus_simple.gif\" alt=\"Simple RxBus example\"\u003e\u003c/p\u003e\n\u003cp\u003eFancier one:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/rxbus_fancy.gif\" alt=\"Fancy RxBus example\"\u003e\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eThe fanciness is basically in the numbers being accumulated and shown in \u0026ldquo;chunks\u0026rdquo;. In my head I thought I could simply use the \u003ccode\u003edebounce\u003c/code\u003e operator (like the \u003ca href=\"https://github.com/kaushikgopal/RxJava-Android-Samples/blob/master/app/src/main/java/com/morihacky/android/rxjava/fragments/DebounceSearchEmitterFragment.java\"\u003edebounce search example\u003c/a\u003e) and be on my jolly way, but this was not to be\u0026hellip;  From the always helpful \u003ca href=\"https://github.com/ReactiveX/RxJava/wiki/Alphabetical-List-of-Observable-Operators\"\u003eRxJava wiki\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003edebounce\u003c/code\u003e - only emit an item from the source Observable after a particular timespan has passed without the Observable emitting any other items\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI wanted the \u0026ldquo;\u003cem\u003eafter a particular timespan has passed without the Observable emitting any other items\u003c/em\u003e\u0026rdquo; part of debounce, but I needed the whole \u003cem\u003elist of emitted items\u003c/em\u003e (not just a single item). The\u003ccode\u003ebuffer\u003c/code\u003eoperator also seemed promising:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003ebuffer\u003c/code\u003e - periodically gather items from an Observable into bundles and emit these bundles rather than emitting the items one at a time\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u0026ldquo;emit as bundles\u0026rdquo;, perfect! uh\u0026hellip; not exactly, it says \u0026ldquo;periodically\u0026rdquo; and that literally means periodically. So EVERY X seconds/minutes it will emit a list of objects regardless of whether there were any taps/events. This would mean a bunch of empty lists would periodically be emitted when no taps were registered. I could get the example working if I tweaked the time component for \u003ccode\u003ebuffer\u003c/code\u003e just enough and \u003ccode\u003efilter\u003c/code\u003e out the empty results, but it was a hack and not the way of the Rx.\u003c/p\u003e\n\u003cp\u003eWhat I really needed was a selective combination of debounce and buffer - a \u0026ldquo;debouncedBuffer\u0026rdquo; operator. Such an operator doesn\u0026rsquo;t exist but you could achieve something similar by calling \u003ccode\u003e.buffer()\u003c/code\u003e with a special \u0026ldquo;boundry observable\u0026rdquo; parameter, as Jedi master Ben Christensen points out in this \u003ca href=\"http://stackoverflow.com/questions/24828897/how-to-group-events-by-idle-periods-using-reactive-extensions\"\u003eStack Overflow post\u003c/a\u003e (the Rx is strong with this one).\u003c/p\u003e\n\u003cp\u003eEssentially, if you pass an observable as a parameter to \u003ccode\u003ebuffer\u003c/code\u003e, every time this observable emits an item, \u003ccode\u003ebuffer\u003c/code\u003e will take the source observable and emit a \u003cem\u003elist\u003c/em\u003e of items from the \u003cem\u003esource\u003c/em\u003e observable (instead of the items emitted by the boundary observable).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eSource Observable For Actual Events\u003cspan style=\"color:#f92672\"\u003e\u0026gt;.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ebuffer\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u0026lt;\u003c/span\u003eBoundary Observable that only tells \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;when\u0026#34;\u003c/span\u003e to take items from the Source\u003cspan style=\"color:#f92672\"\u003e\u0026gt;)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo what we\u0026rsquo;re going to do is use a \u0026ldquo;debouncedEventEmitter\u0026rdquo; as our boundary observable. The \u0026ldquo;debouncedEventEmitter\u0026rdquo; will basically emit a single item-which we really don\u0026rsquo;t care about-only after a certain time has elapsed from the emission of the first item.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eObservable\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eObject\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e debouncedEventEmitter \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e tapEventEmitter\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003edebounce\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e TimeUnit\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eSECONDS\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe now buffer our source observable again to give us a list of items (vs a single item) everytime the debouncedEventEmitter emits a single item.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eObservable\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eObject\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e debouncedBufferEmitter \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e tapEventEmitter\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ebuffer\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003edebouncedEventEmitter\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAltogether now:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eObservable\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eObject\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e tapEventEmitter \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e _rxBus\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003etoObserverable\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e().\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eshare\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eObservable\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eObject\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e debouncedEventEmitter \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e tapEventEmitter\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003edebounce\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e TimeUnit\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eSECONDS\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eObservable\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eObject\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e debouncedBufferEmitter \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e tapEventEmitter\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ebuffer\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003edebouncedEventEmitter\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edebouncedBufferEmitter\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ebuffer\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003edebouncedEventEmitter\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eobserveOn\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eAndroidSchedulers\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003emainThread\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Action1\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eObject\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u0026gt;()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ecall\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eObject\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e taps\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        _showTapCount\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003etaps\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003esize\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e());\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNotice the \u003ccode\u003e.share()\u003c/code\u003e operator? In \u003ca href=\"../rxjava-tip-for-the-day-share-publish-refcount-and-all-that-jazz/\"\u003emy next post\u003c/a\u003e, I\u0026rsquo;ll go into the details of that operator along with \u003ccode\u003e.publish()\u003c/code\u003e and \u003ccode\u003erefcount()\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e[UPDATE: \u003ca href=\"https://twitter.com/benjchristensen/status/552709457856049152\"\u003eBen pointed\u003c/a\u003e me to a \u003ca href=\"https://gist.github.com/benjchristensen/e4524a308456f3c21c0b\"\u003eniftier implementation of debounced buffer\u003c/a\u003e. I\u0026rsquo;ve added a \u003ca href=\"https://github.com/kaushikgopal/Android-RxJava/blob/master/app/src/main/java/com/morihacky/android/rxjava/rxbus/RxBusDemo_Bottom3Fragment.java\"\u003ethird variant of the Bottom fragment\u003c/a\u003e that uses this approach. A \u003ca href=\"../rxjava-tip-for-the-day-share-publish-refcount-and-all-that-jazz/\"\u003esubsequent post\u003c/a\u003e will go into the details.]\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eFollow discussion on \u003ca href=\"http://www.reddit.com/r/androiddev/comments/2rffd2/debouncedbuffer_with_rxjava/\"\u003eReddit\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n"
    },
    {
        "title" : "New Year - 2015",
        "date_published" : "2014-12-31T00:00:00-07:00",
        "id" : "https://kau.sh/blog/new-year-2015/",
        "file_path" : "blog/2014-12-31-new-year-2015.md",
        "url" : "https://kau.sh/blog/new-year-2015/",
        "content_html" : "\u003cp\u003ei love the holidays. i \u003cem\u003eespecially\u003c/em\u003e love the new year\u0026rsquo;s though cause it\u0026rsquo;s an acceptable time to hit that big-nice-red reset button.\u003c/p\u003e\n\u003ch2 id=\"stuff-i-wanted-to-get-done-in-201320132014\"\u003estuff I wanted to \u003ca href=\"../2013/\"\u003eget done in 2013\u003c/a\u003e/2014\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eget back in shape (significant progress on this front)\u003c/li\u003e\n\u003cli\u003eget more sleep (been getting atleast 6 hours, which is good, now to bump it to 7)\u003c/li\u003e\n\u003cli\u003eget really good at Rails (switched gears and became an android developer. i like to think i\u0026rsquo;m a pretty decent one too)\u003c/li\u003e\n\u003cli\u003eget a job after my masters\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"stuff-done-in-20132014\"\u003estuff done in 2013/2014:\u003c/h2\u003e\n\u003ch3 id=\"joined-wedding-partyhttpstechcrunchcom20130221wedding-party-the-mobile-app-that-lets-guests-contribute-photos-to-gorgeous-shared-albums-scores-a-million-dollar-seed-round\"\u003ejoined \u003ca href=\"https://techcrunch.com/2013/02/21/wedding-party-the-mobile-app-that-lets-guests-contribute-photos-to-gorgeous-shared-albums-scores-a-million-dollar-seed-round/\"\u003ewedding party\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003ei joined as a full-time rails dev but landed up becoming a full-time android dev for them. we have some of the craziest, smartest and fun loving peeps in the industry. i\u0026rsquo;m absolutely loving my time here.\u003c/p\u003e\n\u003ch3 id=\"released-a-lot-of-new-android-stuff\"\u003ereleased a lot of new android stuff\u003c/h3\u003e\n\u003cp\u003ebesides releasing a tonne of cool features for wedding party, i managed to ship two big android projects: \u003ca href=\"https://github.com/weddingparty/AndroidFloatLabel\"\u003eAndroid-floatlabel\u003c/a\u003e and \u003ca href=\"https://github.com/kaushikgopal/Android-RxJava\"\u003elearning Android-RxJava\u003c/a\u003e, both of which have been received pretty well by the open source community\u003c/p\u003e\n\u003ch3 id=\"new-blog-design\"\u003enew blog design\u003c/h3\u003e\n\u003cp\u003ei changed this blog\u0026rsquo;s design (again) to match my \u003ca href=\"http://kau.sh\"\u003ehomepage\u003c/a\u003e. i\u0026rsquo;m really happy with this iteration of the design. i think it has just the right balance of minimalism, simplicity and style\u003c/p\u003e\n\u003ch3 id=\"getting-fitter\"\u003egetting fit(ter)\u003c/h3\u003e\n\u003cp\u003ei\u0026rsquo;m a regular again at the gym. i was probably at my fittest around 2007 and i\u0026rsquo;ve still got a long way to go, before i get to that shape again. but i\u0026rsquo;m getting there.\u003c/p\u003e\n\u003cp\u003eoverall, 2013/2014 went by in a jiffy and was a total win!\u003c/p\u003e\n\u003ch2 id=\"stuff-i-want-to-do-in-2015\"\u003estuff I want to do in 2015:\u003c/h2\u003e\n\u003ch3 id=\"start-playing-the-piano\"\u003estart playing the piano\u003c/h3\u003e\n\u003cp\u003ethis is an area i\u0026rsquo;ve totally fallen off the bandwagon. i don\u0026rsquo;t do enough sound-engineering or music anymore. i\u0026rsquo;m thinking of getting a piano/synthesizer and just start jamming again.\u003c/p\u003e\n\u003ch3 id=\"travel-to-atleast-two-new-places-that-ive-never-been\"\u003etravel to atleast two new places that i\u0026rsquo;ve never been\u003c/h3\u003e\n\u003cp\u003ea bunch of my close friends and i love traveling and we hit a high in 2013 (just after graduation). it was amazing until 2014, where i\u0026rsquo;ve hit a complete travel slump.\u003c/p\u003e\n\u003ch3 id=\"release-an-independent-android-app\"\u003erelease an independent (android) app\u003c/h3\u003e\n\u003cp\u003ei\u0026rsquo;ve always wanted to build the \u003ca href=\"http://dayoneapp.com/\"\u003eDay One\u003c/a\u003e app for android (given that they are probably never going to\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e). there are very few high-quality journaling apps on android. i think this is a personal itch that i\u0026rsquo;m going to try to scratch.\u003c/p\u003e\n\u003cp\u003ehere\u0026rsquo;s to a happy adventurous and exciting 2015!\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003e3 years later, Day One released an Android app \u003ca href=\"https://play.google.com/store/apps/details?id=com.dayoneapp.dayone\"\u003ehttps://play.google.com/store/apps/details?id=com.dayoneapp.dayone\u003c/a\u003e\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n"
    },
    {
        "title" : "Implementing an Event Bus With RxJava - RxBus",
        "date_published" : "2014-12-24T00:00:00-07:00",
        "id" : "https://kau.sh/blog/implementing-an-event-bus-with-rxjava-rxbus/",
        "file_path" : "blog/2014-12-24-implementing-an-event-bus-with-rxjava-rxbus.md",
        "url" : "https://kau.sh/blog/implementing-an-event-bus-with-rxjava-rxbus/",
        "content_html" : "\u003cdiv class='callout center'\u003e\n    Originally posted this article on the Wedding Party tech blog\n\u003c/div\u003e\n\u003cp\u003eThis post has three parts:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003equick primer on what an event bus is\u003c/li\u003e\n\u003cli\u003eimplementing the event bus with RxJava\u003c/li\u003e\n\u003cli\u003eparting thoughts on this approach\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u0026ldquo;RxBus\u0026rdquo; is not going to be a library. Implementing an event bus with RxJava is so ridiculously easy that it doesn\u0026rsquo;t warrant the bloat of an independent library.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ch1 id=\"part-1-what-is-an-event-bus\"\u003ePart 1: What is an event bus?\u003c/h1\u003e\n\u003cp\u003eLet\u0026rsquo;s talk about two concepts that seem similar: the Observer pattern and the Pub-sub pattern.\u003c/p\u003e\n\u003ch2 id=\"observer-pattern\"\u003eObserver pattern\u003c/h2\u003e\n\u003cp\u003eThis is a pattern of development in which your class or primary object (known as the Observable) notifies other interested classes or objects (known as Observers) with relevant information (events).\u003c/p\u003e\n\u003ch2 id=\"pub-sub-pattern\"\u003ePub-sub pattern\u003c/h2\u003e\n\u003cp\u003eThe objective of the pub-sub pattern is exactly the same as the Observer pattern viz. you want some other class to know of certain events taking place.\u003c/p\u003e\n\u003cp\u003eThere\u0026rsquo;s an important semantic difference between the Observer and Pub-sub patterns though: in the pub-sub pattern the focus is on \u0026ldquo;broadcasting\u0026rdquo; messages outside. The Observable here doesn\u0026rsquo;t want to know who the events are going out to, just that they\u0026rsquo;ve gone out. In other words the Observable (a.k.a Publisher) doesn\u0026rsquo;t want to know who the Observers (a.k.a Subscribers) are.\u003c/p\u003e\n\u003ch2 id=\"why-the-anonymity\"\u003eWhy the anonymity?\u003c/h2\u003e\n\u003cp\u003eIt allows for this thing called \u0026ldquo;decoupling\u0026rdquo;, which is a good word in computer programming. You want to keep coupling as low as possible in your design.\u003c/p\u003e\n\u003cp\u003eTypically, you would expect the publisher to have direct knowledge of each of the many subscribers that it needs to notify, so it can go about notifying each of them, once the \u0026ldquo;event\u0026rdquo; or message is ready. But with an event bus, the publisher is relieved of such duties and this independence helps, because the publisher and subscriber need not have logic coded in them that establish the dependencies between the two.\u003c/p\u003e\n\u003cp\u003eIn other words \u0026ldquo;consciously decouple\u0026rdquo; your code whenever you can*.\u003c/p\u003e\n\u003ch2 id=\"how-the-anonymity\"\u003eHow the anonymity?\u003c/h2\u003e\n\u003cp\u003eOk, so a natural question with the pub-sub pattern is: how do you actually achieve that anonymity between publisher and subscriber? An easy way is to just get hold of a middleman and let that middleman take care of all the communication. An event bus is one such middleman.\u003c/p\u003e\n\u003cp\u003eThat\u0026rsquo;s it. An event bus is as simple as that.\u003c/p\u003e\n\u003cp\u003eTwo event bus libraries that are commonly used in Android are \u003ca href=\"http://square.github.io/otto/\"\u003eOtto\u003c/a\u003e and Green Robot\u0026rsquo;s \u003ca href=\"https://github.com/greenrobot/EventBus\"\u003eEventBus\u003c/a\u003e. There are plenty of posts online that explain how to implement them in your app.\u003c/p\u003e\n\u003ch1 id=\"part-2-implementing-the-event-bus-with-rxjava\"\u003ePart 2: Implementing the event bus with RxJava\u003c/h1\u003e\n\u003cp\u003eI\u0026rsquo;ve been posting real world examples of using \u003ca href=\"https://github.com/kaushikgopal/Android-RxJava\"\u003eRxJava for Android in this github repo\u003c/a\u003e, so i\u0026rsquo;ll stick to posting the complete implementation in that repo. Here are the interesting parts of the implementation:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// this is the middleman object\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eRxBus\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efinal\u003c/span\u003e Subject\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eObject\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e Object\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e _bus \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e SerializedSubject\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026gt;(\u003c/span\u003ePublishSubject\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ecreate\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e());\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esend\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eObject o\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    _bus\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eonNext\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eo\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e Observable\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eObject\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etoObserverable\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e _bus\u003cspan style=\"color:#f92672\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThat\u0026rsquo;s it. You now have an event bus ready to use.\u003c/p\u003e\n\u003cp\u003eHere\u0026rsquo;s how you post an event to the bus:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@OnClick\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eR\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eid\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ebtn_demo_rxbus_tap\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonTapButtonClicked\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    _rxBus\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003esend\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e TapEvent\u003cspan style=\"color:#f92672\"\u003e());\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eand here\u0026rsquo;s how you listen to those events from other fragments/services etc.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// note that it is important to subscribe to the exact same _rxBus instance that was used to post the events\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e_rxBus\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003etoObserverable\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003esubscribe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Action1\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eObject\u003cspan style=\"color:#f92672\"\u003e\u0026gt;()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ecall\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eObject event\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eevent \u003cspan style=\"color:#66d9ef\"\u003einstanceof\u003c/span\u003e TapEvent\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          _showTapText\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eevent \u003cspan style=\"color:#66d9ef\"\u003einstanceof\u003c/span\u003e SomeOtherEvent\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          _doSomethingElse\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn the example we post events from the top fragment (green part) and listen in (through the bus) from the bottom fragment (blue part).\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/rxbus_simple.gif\" alt=\"Simple RxBus example\"\u003e\u003c/p\u003e\n\u003ch1 id=\"part-3----parting-thoughts\"\u003ePart 3  - parting thoughts\u003c/h1\u003e\n\u003ch2 id=\"dead-events\"\u003eDead events\u003c/h2\u003e\n\u003cp\u003eThere are some cases where it\u0026rsquo;s useful to know if there are any observers currently listening to the bus. For e.g. \u003ca href=\"http://markhudnall.com/2013/11/13/gcm-foreground-and-background/\"\u003eif you use an event bus to handle your GCM push notifications\u003c/a\u003e) and don\u0026rsquo;t want to send a push notification if the app is in the foreground, then it\u0026rsquo;s important to listen to \u0026ldquo;\u003ca href=\"https://github.com/square/otto/blob/master/otto/src/main/java/com/squareup/otto/DeadEvent.java\"\u003edead events\u003c/a\u003e\u0026rdquo;.\u003c/p\u003e\n\u003cp\u003eFor e.g in a recent release for Wedding Party, we added \u0026ldquo;Messaging\u0026rdquo; to our app. If the user has the app open (thus having atleast 1 or more listeners to the bus) we don\u0026rsquo;t send push notifications but if they have the app in the background, then we send a push notification to let them know of chat messages. After an event is posted to the event bus, if no subscriber is listening, a dead event is returned. If we get back a dead event a push notification is shot out.\u003c/p\u003e\n\u003cp\u003eHow would you do this with the RxBus implementation?\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s pretty easy actually. \u003ccode\u003eSubject\u003c/code\u003es  have this helpful method on them \u003ccode\u003ehasObservers()\u003c/code\u003e that would tell us exactly just that. This was added in the \u003ca href=\"https://github.com/ReactiveX/RxJava/pull/1802\"\u003e1.x release for RxJava\u003c/a\u003e, so you have to be on the latest version of RxAndroid (0.23.0 as of this writing) in order to see this method.\u003c/p\u003e\n\u003ch2 id=\"so-should-i-use-rxbus-instead-of-ottoeventbus\"\u003eSo should I use RxBus instead of Otto/EventBus?\u003c/h2\u003e\n\u003cp\u003eIf you simply want to use an event bus with your Android app, you\u0026rsquo;re probably better off with a library like \u003ca href=\"http://square.github.io/otto/\"\u003eOtto\u003c/a\u003e (which i highly recommend) or \u003ca href=\"https://github.com/greenrobot/EventBus\"\u003eEventBus\u003c/a\u003e. Otto has a clean api driven by annotations and is probably far more simpler to use.\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re familiar with Rx, already use RxJava in your app and want to get rid of an additional library, definitely try out the RxBus approach!\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eDid i miss anything? Do you have more suggestions on improving the RxBus implementation? Follow the discussion on \u003ca href=\"http://www.reddit.com/r/androiddev/comments/2qebdo/rxbus_implementing_an_event_bus_with_rxjava/\"\u003eReddit\u003c/a\u003e, \u003ca href=\"https://plus.google.com/105979641354189463768/posts/Au1xZ8RGLdG\"\u003eGoogle Plus\u003c/a\u003e, feel free to tweet your comments @\u003ca href=\"http://twitter.com/kaushikgopal\"\u003ekaushikgopal\u003c/a\u003e or just raise an issue in \u003ca href=\"https://github.com/kaushikgopal/Android-RxJava/issues\"\u003ethe repo\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003ePssst. there are two bonus posts that delve a little more into the RxJava trickery I used to make the RxBus example a tad bit fancier. Stay tuned.\u003c/em\u003e\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/uncopule-decouple.gif\" alt=\"conscious decoupling\"\u003e\u003c/p\u003e\n"
    },
    {
        "title" : "Learning RxJava With Android by Example",
        "date_published" : "2014-09-15T00:00:00-07:00",
        "id" : "https://kau.sh/blog/learning-rxjava-with-android-by-example/",
        "file_path" : "blog/2014-09-15-learning-rxjava-with-android-by-example.md",
        "url" : "https://kau.sh/blog/learning-rxjava-with-android-by-example/",
        "content_html" : "\u003cdiv class='callout center'\u003e\n    Originally posted this article on the Wedding Party tech blog\n\u003c/div\u003e\n\u003cp\u003eI\u0026rsquo;ve read and watched a lot on Rx. Most examples either use the J8 lambda notations/Scala/Groovy or some other awesome language that us Android developers are constantly envious of.\u003c/p\u003e\n\u003cp\u003eUnfortunately I could never find real-world simple examples in Android that could show me how to use RxJava. To scratch that itch, I \u003ca href=\"https://github.com/kaushikgopal/Android-RxJava\"\u003ecreated a github repo\u003c/a\u003e with a couple of nifty examples using RxJava. You can build the apk and run the app to see different working examples.\u003c/p\u003e\n\u003cp\u003eIf you don\u0026rsquo;t know anything about RxJava, I would strongly recommend you first get acquainted with RxJava and understand the terminology really well. It has a pretty steep learning curve, so just throw yourself at it, until you start to understand the motivation behind its usage. Here are some resources to get you started:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"http://channel9.msdn.com/Blogs/Charles/Erik-Meijer-Rx-in-15-Minutes\"\u003eRx in 15 minutes - by Erik Meijer\u003c/a\u003e creator of the Reactive extensions. RxJava is essentially a Java port of Reactive extensions.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://channel9.msdn.com/Series/Rx-Workshop\"\u003eRx Workshop - Channel9\u003c/a\u003e Microsoft\u0026rsquo;s video channel on RX. Just peruse through the first few videos. You\u0026rsquo;ll pick a lot of useful info.\u003c/li\u003e\n\u003cli\u003eWatch this excellent \u003ca href=\"http://www.infoq.com/presentations/Netflix-API-rxjava-hystrix/\"\u003etalk by Ben Christensen - one of the creators of RxJava\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eAn interesting writeup I found \u003ca href=\"https://gist.github.com/staltz/868e7e9bc2a7b8c1f754\"\u003esomewhere in the interwebs\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eDan Lew started a nice primer series today, on RxJava for Android. Definitely follow his \u003ca href=\"http://blog.danlew.net/2014/09/15/grokking-rxjava-part-1/\"\u003e3 part series\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ReactiveX/RxJava/wiki\"\u003eSnoop around the RxJava wiki\u003c/a\u003e. Look at those marble diagrams specifically. You will have to come back to them repeatedly to get a good understanding of the operators.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eOnce you have a decent understanding of when to use RxJava and the different terms used, come back to the \u003ca href=\"https://github.com/kaushikgopal/Android-RxJava\"\u003elearning RxJava by example repo\u003c/a\u003e and you\u0026rsquo;ll find the examples a godsend. If not, \u003ca href=\"https://github.com/kaushikgopal/Android-RxJava#contributing\"\u003econtribute\u003c/a\u003e with the examples you think that will be.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eFollow the discussion on \u003ca href=\"http://www.reddit.com/r/androiddev/comments/2gi7ik/learning_rxjava_with_android_by_example/\"\u003eReddit\u003c/a\u003e or \u003ca href=\"https://plus.google.com/106712246601366256750/posts/7bMbnsit91A\"\u003eGoogle Plus\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e\n"
    },
    {
        "title" : "Primer on Threading and Handlers in Android",
        "date_published" : "2014-06-20T00:00:00-07:00",
        "id" : "https://kau.sh/blog/primer-on-threading-and-handlers-in-android/",
        "file_path" : "blog/2014-06-20-primer-on-threading-and-handlers-in-android.md",
        "url" : "https://kau.sh/blog/primer-on-threading-and-handlers-in-android/",
        "content_html" : "\u003cdiv class='callout center'\u003e\n    Originally posted this article on the Wedding Party tech blog\n\u003c/div\u003e\n\u003cp\u003eMobile devices are getting pretty fast, but they aren\u0026rsquo;t infinitely fast yet. If you want your app to be able to do any serious work without affecting the user experience by locking up the interface, you\u0026rsquo;ll have to resort to running things in parallel. On Android, this is done with \u0026ldquo;threads\u0026rdquo;.\u003c/p\u003e\n\u003cp\u003eGrab yourself a cup of coffee and read this post line by line. I\u0026rsquo;ll introduce you to the concept of threads, talk about how Java uses threads and explain how \u0026ldquo;Handlers\u0026rdquo; in Android help with threading.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eWhenever you want to do \u003cem\u003easynchronous/parallel processing\u003c/em\u003e, you do it with \u003cstrong\u003ethreads\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"threads-you-say-\"\u003eThreads you say ?\u003c/h2\u003e\n\u003cp\u003eA thread or \u0026ldquo;thread of execution\u0026rdquo; is basically a sequence of instructions (of program code), that you send to your operating system.\u003c/p\u003e\n\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"http://upload.wikimedia.org/wikipedia/commons/a/a5/Multithreaded_process.svg\"\n                \n                \n                    alt=\"Multi-threaded process\"\n                \n                \n                \n            /\u003e\n\n            \n            \u003cfigcaption\u003e\n                \n\n                \n                        \n\n                        \n\n                                Image Courtesy: Wikipedia.\n\n                            \n                \n\n            \u003c/figcaption\u003e\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cp\u003e\u0026ldquo;Typically\u0026rdquo; your CPU can process one thread, per core, at any time. So a multi-core processor (most Android devices today) by definition can handle multiple-threads of execution (which is to say, they can do multiple things at once).\u003c/p\u003e\n\u003ch2 id=\"truth-to-multi-core-processing-and-single-core-multitasking\"\u003eTruth to multi-core processing and single-core multitasking\u003c/h2\u003e\n\u003cp\u003eI say \u0026ldquo;typically\u0026rdquo; because the corollary to the above statement is not necessarily true. Single-core devices can \u0026ldquo;simulate\u0026rdquo; multithreading using multitasking.\u003c/p\u003e\n\u003cp\u003eEvery \u0026ldquo;task\u0026rdquo; that\u0026rsquo;s run on a thread can be broken down into multiple instructions. These instructions don\u0026rsquo;t have to happen all at once. So a single-core device can switch to a thread \u0026ldquo;1\u0026rdquo; finish an instruction 1A, then switch to thread \u0026ldquo;2\u0026rdquo; finish an instruction 2A, switch back to 1 finish 1B, 1C, 1D, switch to 2, finish 2B, 2C and so on\u0026hellip;\u003c/p\u003e\n\u003cp\u003eThis switching between threads happens \u003cem\u003eso fast\u003c/em\u003e that it \u003cem\u003eappears\u003c/em\u003e, even on a single-core device, that all the threads are making progress at exactly the same time.  It\u0026rsquo;s an illusion caused by speed, much like Agent Brown appearing to have multiple heads and arms.\u003c/p\u003e\n\u003cfigure \u003e\n\n    \n        \n            \u003cimg src=\"/images/content/agent_brown_dodging_bullets.gif\"\n                \n                \n                    alt=\"dogde bullets like your agent brown\"\n                \n                \n                \n            /\u003e\n\n            \n\n    \n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eNow on to some code.\u003c/p\u003e\n\u003ch2 id=\"threads-in-core-java\"\u003eThreads in core Java\u003c/h2\u003e\n\u003cp\u003eIn Java, when you want to do parallel processing, you execute your code in a \u003ccode\u003eRunnable\u003c/code\u003e either by extending the \u003ccode\u003eThread\u003c/code\u003e class or implementing the Runnable interface\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Version 1\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eIAmAThread\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eextends\u003c/span\u003e Thread \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eIAmAThread\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003esuper\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;IAmAThread\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erun\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// your code (sequence of instructions)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// to execute this sequence of instructions in a separate thread.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e IAmAThread\u003cspan style=\"color:#f92672\"\u003e().\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003estart\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Version 2\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eIAmARunnable\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eimplements\u003c/span\u003e Runnable \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erun\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// your code (sequence of instructions)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// to execute this sequence of instructions in a separate thread.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003eIAmARunnable myRunnable \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e IAmARunnable\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Thread\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003emyRunnable\u003cspan style=\"color:#f92672\"\u003e).\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003estart\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBoth of these approaches are fundamentally very similar. Version 1 involves creating an actual thread while Version 2 involves creating a runnable, which in-turn has to be called by a Thread.\u003c/p\u003e\n\u003cp\u003eVersion 2, is generally the preferred approach (and is a much \u003ca href=\"http://en.wikipedia.org/wiki/Composition_over_inheritance\"\u003elarger subject\u003c/a\u003e \u003ca href=\"http://stackoverflow.com/questions/541487/implements-runnable-vs-extends-thread\"\u003eof discussion\u003c/a\u003e, beyond the scope of this post).\u003c/p\u003e\n\u003ch2 id=\"threads-in-android\"\u003eThreads in Android\u003c/h2\u003e\n\u003cp\u003eWhenever your app starts up in Android, all components are run on a single primary thread (by default) called the \u0026ldquo;main\u0026rdquo; thread. The primary role of this thread though, is to handle the user interface and dispatch events to the appropriate widgets/views. For this reason, the main thread is also referred to as the \u0026ldquo;UI\u0026rdquo; thread.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://android-developers.blogspot.com/2009/05/painless-threading.html\"\u003eIf you have a long running operation on your UI thread\u003c/a\u003e, the user interface is going to get locked up until this operation is complete. This is bad for your users! That\u0026rsquo;s why it\u0026rsquo;s important to understand how threads work in Android specifically, so you can offload some of the work to parallel threads. Android is pretty merciless about keeping things off the UI thread. If you have a long running operation on the UI thread you\u0026rsquo;re probably going to run into the infamous \u003ca href=\"http://developer.android.com/training/articles/perf-anr.html\"\u003eANR\u003c/a\u003e that will conveniently allow your users to kill your app!\u003c/p\u003e\n\u003cp\u003eNow Android is all Java, so it supports the usage of the core Java \u003ccode\u003eThread\u003c/code\u003e class to perform asynchronous processing. So you could use code very similar to the one shown in the \u0026ldquo;Threads in Java\u0026rdquo; section above, and start using threads in Android right away. But that can be a tad bit difficult.\u003c/p\u003e\n\u003ch3 id=\"why-is-using-core-java-threads-in-android-difficult\"\u003eWhy is using core Java threads in Android difficult?\u003c/h3\u003e\n\u003cp\u003eWell, parallel processing is not as easy as it sounds because you have to maintain \u0026ldquo;concurrency\u0026rdquo; across the multiple threads. In the words of the \u003ca href=\"https://www.tbray.org/ongoing/When/201x/2014/01/01/Software-in-2014#p-2\"\u003every wise Tim Bray\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eordinary humans can\u0026rsquo;t do concurrency at scale (or really at all) \u0026hellip;\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSpecifically for Android, the following is additionally cumbersome:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSynchronization with the UI thread is a major PITA (you typically want to do this, when you want to send progress updates to the UI, for your background operation)\u003c/li\u003e\n\u003cli\u003eThings change even more weirdly with orientation/configuration changes because an orientation change causes an activity to be recreated (so background threads may be trying to change the state of a destroyed activity, and if the background thread isn\u0026rsquo;t on the UI thread, well that complicates things even more because of point 1).\u003c/li\u003e\n\u003cli\u003eThere\u0026rsquo;s also no default handling for thread pooling\u003c/li\u003e\n\u003cli\u003eCanceling thread actions requires custom code\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"arrok-so-how-do-we-do-parallel-processing-in-android\"\u003eArr\u0026hellip;ok, so how DO we do parallel processing in Android?\u003c/h3\u003e\n\u003cp\u003eSome (in)famous Android constructs you\u0026rsquo;ve probably come across:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://developer.android.com/reference/android/os/Handler.html\"\u003e\u003ccode\u003eHandler\u003c/code\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThis is the subject of our detailed discussion today\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://developer.android.com/reference/android/os/AsyncTask.html\"\u003e\u003ccode\u003eAsyncTask\u003c/code\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eUsing AsyncTasks are truly the simplest way to handle threads in Android. That being said, they are also the \u003ca href=\"http://blog.danlew.net/2014/06/21/the-hidden-pitfalls-of-asynctask/\"\u003emost\u003c/a\u003e error \u003ca href=\"http://bon-app-etit.blogspot.com/2013/04/the-dark-side-of-asynctask.html\"\u003eprone\u003c/a\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://developer.android.com/reference/android/app/IntentService.html\"\u003e\u003ccode\u003eIntentService\u003c/code\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eIt requires more boiler plate code, but this is generally my preferred mechanism for off-loading long-running operations to the background. Armed with an EventBus like \u003ca href=\"http://square.github.io/otto/\"\u003eOtto\u003c/a\u003e, IntentServices become amazingly easy to implement.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://developer.android.com/guide/components/loaders.html#summary\"\u003e\u003ccode\u003eLoader\u003c/code\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThese are geared more towards performing asynchronous tasks, that have to deal with data from databases or content providers.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://developer.android.com/guide/components/services.html\"\u003e\u003ccode\u003eService\u003c/code\u003e\u003c/a\u003e (honorable mention)\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;ve worked with Services closely, you should know that this is actually a little misleading. A common misconception is that Services run on the background thread. Nope! they \u0026ldquo;appear\u0026rdquo; to run in the background because they don\u0026rsquo;t have a UI component associated with them. They actually run on the UI thread (by default)\u0026hellip;. So they run on the UI thread by default, even though they don\u0026rsquo;t have a UI component?\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"http://www.topito.com/wp-content/uploads/2013/01/code-24.gif\"\n                \n                \n                    alt=\"programmer life gif\"\n                \n                \n                \n            /\u003e\n\n            \n            \u003cfigcaption\u003e\n                \n\n                \n                        \n\n                        \n\n                                Naming has never been Google\u0026#39;s strong suit. ActivityInstrumentationTestCase ... wait for it .... 2! Spinner anyone?\n\n                            \n                \n\n            \u003c/figcaption\u003e\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cp\u003eIf you want your service to run on a background thread, you\u0026rsquo;ll have to manually spawn another thread and execute your operations in that thread (similar to an approach discussed above). Really you should just use IntentServices but that is a subject for another post.\u003c/p\u003e\n\u003ch1 id=\"android-handlers\"\u003eAndroid Handlers:\u003c/h1\u003e\n\u003cp\u003eFrom the not-so-dummy-friendly \u003ca href=\"http://developer.android.com/reference/android/os/Handler.html\"\u003eAndroid developer documentation for Handlers\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA Handler allows you to send and process Message and Runnable objects associated with a thread\u0026rsquo;s MessageQueue. Each Handler instance is associated with a single thread and that thread\u0026rsquo;s message queue. When you create a new Handler, it is bound to the thread/message queue of the thread that is creating it \u0026ndash; from that point on, it will deliver messages and runnables to that message queue and execute them as they come out of the message queue.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \u003ca href=\"http://martinvalasek.com/blog/pictures-from-a-developers-life\"\u003e\n            \u003cimg src=\"http://www.topito.com/wp-content/uploads/2013/01/code-02.gif\"\n                \n                \n                    alt=\"picture from a dev\"\n                \n                \n                \n            /\u003e\n\n            \n\n    \u003c/div\u003e\n    \u003c/a\u003e\n\n\u003c/figure\u003e\n\n\u003cp\u003eTo understand that better, you probably need to know what \u003cstrong\u003eMessage Queues\u003c/strong\u003e are.\u003c/p\u003e\n\u003ch2 id=\"message-queues\"\u003eMessage Queues:\u003c/h2\u003e\n\u003cp\u003eThreads basically have something called a \u0026ldquo;Message Queue\u0026rdquo;. These message queues allow communication between threads and is a sort of pattern, where control (or content) is passed between the threads.\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s actually a wonderful name, because it\u0026rsquo;s exactly just that: a queue of messages or sequence of instructions, for the thread, to perform one by one. This additionally allows us to do two more cool things:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u0026ldquo;schedule\u0026rdquo; Messages and Runnables to be executed at some point in the future\u003c/li\u003e\n\u003cli\u003eenqueue an action to be performed on a different thread other than your own\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cem\u003eNote: when I mention \u0026lsquo;message\u0026rsquo; from here onwards, it\u0026rsquo;s the same as a runnable object or a sequence of instructions.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eSo going back to Handlers in Android\u0026hellip;. if you read and pause at every single line, the docs make much more sense now:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA Handler allows you to send and process Message and Runnable objects associated with a thread\u0026rsquo;s MessageQueue.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSo, a handler allows you to send messages to a thread\u0026rsquo;s message queue. check ✔ !\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEach Handler instance is associated with a single thread and that thread\u0026rsquo;s message queue.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eA handler can only be associated with a single thread. ✔\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWhen you create a new Handler, it is bound to the thread / message queue of the thread that is creating it\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSo, which thread is a handler associated with? The thread that creates it. ✔\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026ndash; from that point on, it will deliver messages and runnables to that message queue and execute them as they come out of the message queue.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eYeah yeah we already know that. Moving on\u0026hellip;\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eTip: Here\u0026rsquo;s something you probably didn\u0026rsquo;t know : in Android, every thread is associated with an instance of a Handler class, and it allows the thread to run along with other threads and communicate with them through messages.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eAnother Tip (if you\u0026rsquo;ve dealt with the more common AsyncTasks): AsyncTasks use Handlers but don\u0026rsquo;t run in the UI thread. They provide a channel to talk back to the UI, using the postExecute method.\u003c/em\u003e\u003c/p\u003e\n\u003ch2 id=\"this-is-all-cool-yo-so-how-do-i-create-them-handlers\"\u003eThis is all cool yo, so how do I create them Handlers?\u003c/h2\u003e\n\u003cp\u003eTwo ways:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eusing the default constructor: new Handler()\u003c/li\u003e\n\u003cli\u003eusing a parameterized constructor that takes a runnable object or callback object\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"what-useful-methods-does-the-handler-api-give-me\"\u003eWhat useful methods does the Handler API give me?\u003c/h2\u003e\n\u003cp\u003eRemember:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eHandlers simply send messages or \u0026ldquo;posts\u0026rdquo; to the message queues.\u003c/li\u003e\n\u003cli\u003eThey are convenience methods that help syncing back with the UI thread.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIf you look at the \u003ca href=\"http://developer.android.com/reference/android/os/Handler.html\"\u003eAPI for Handlers\u003c/a\u003e now, the main methods provided make sense:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003epost\u003c/li\u003e\n\u003cli\u003epostDelayed\u003c/li\u003e\n\u003cli\u003epostAtTime\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"code-samples\"\u003eCode samples:\u003c/h2\u003e\n\u003cp\u003eThe examples below are rudimentary, what you actually want to be closely following are the comments.\u003c/p\u003e\n\u003ch3 id=\"example-1-using-post-method-of-the-handler\"\u003eExample 1: using \u0026ldquo;post\u0026rdquo; method of the Handler\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eTestActivity\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eextends\u003c/span\u003e Activity \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#75715e\"\u003e// all standard stuff\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonCreate\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eBundle savedInstanceState\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#75715e\"\u003e// all standard stuff\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// we\u0026#39;re creating a new handler here\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#75715e\"\u003e// and we\u0026#39;re in the UI Thread (default)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#75715e\"\u003e// so this Handler is associated with the UI thread\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        Handler mHandler \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Handler\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// I want to start doing something really long\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#75715e\"\u003e// which means I should run the fella in another thread.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#75715e\"\u003e// I do that by sending a message - in the form of another runnable object\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// But first, I\u0026#39;m going to create a Runnable object or a message for this\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        Runnable mRunnableOnSeparateThread \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Runnable\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erun\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#75715e\"\u003e// do some long operation\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e                longOperation\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#75715e\"\u003e// After mRunnableOnSeparateThread is done with it\u0026#39;s job,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e                \u003cspan style=\"color:#75715e\"\u003e// I need to tell the user that i\u0026#39;m done\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e                \u003cspan style=\"color:#75715e\"\u003e// which means I need to send a message back to the UI thread\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#75715e\"\u003e// who do we know that\u0026#39;s associated with the UI thread?\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e                mHandler\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003epost\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Runnable\u003cspan style=\"color:#f92672\"\u003e(){\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erun\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(){\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                        \u003cspan style=\"color:#75715e\"\u003e// do some UI related thing\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e                        \u003cspan style=\"color:#75715e\"\u003e// like update a progress bar or TextView\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e                        \u003cspan style=\"color:#75715e\"\u003e// ....\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e                    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#f92672\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// Cool but I\u0026#39;ve not executed the mRunnableOnSeparateThread yet\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#75715e\"\u003e// I\u0026#39;ve only defined the message to be sent\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#75715e\"\u003e// When I execute it though, I want it to be in a different thread\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#75715e\"\u003e// that was the whole point.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Thread\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003emRunnableOnSeparateThread\u003cspan style=\"color:#f92672\"\u003e).\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003estart\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf I didn\u0026rsquo;t have a handler object, posting back to the UI thread would have been pretty tricky.\u003c/p\u003e\n\u003ch3 id=\"example-2-using-postdelayed\"\u003eExample 2: using postDelayed\u003c/h3\u003e\n\u003cp\u003eIn a recent feature for Wedding Party, I had to emulate the auto-complete functionality with an EditText. Every change in text triggered an API call to retrieve some data from our servers.\u003c/p\u003e\n\u003cp\u003eI wanted to reduce the number of API calls shot out by the app, so I used the Handler\u0026rsquo;s postDelayed method to achieve this.\u003c/p\u003e\n\u003cp\u003eThis example doesn\u0026rsquo;t focus on parallel processing, but rather the ability for the Handler to function as a Message Queue and schedule messages to be executed at some later point in the future\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// the below code is inside a TextWatcher\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// which implements the onTextChanged method\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// I\u0026#39;ve simplified it to only highlight the parts we\u0026#39;re\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// interested in\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003elong\u003c/span\u003e lastChange \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonTextChanged\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003efinal\u003c/span\u003e CharSequence chars\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                          \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e start\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e before\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e count\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// The handler is spawned from the UI thread\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Handler\u003cspan style=\"color:#f92672\"\u003e().\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003epostDelayed\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#75715e\"\u003e// argument 1 for postDelated = message to be sent\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e            \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e Runnable\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#a6e22e\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erun\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003enoChangeInText_InTheLastFewSeconds\u003cspan style=\"color:#f92672\"\u003e())\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                        searchAndPopulateListView\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003echars\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003etoString\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e());\u003c/span\u003e  \u003cspan style=\"color:#75715e\"\u003e// logic\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e                    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#75715e\"\u003e// argument 2 for postDelated = delay before execution\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e            \u003cspan style=\"color:#ae81ff\"\u003e300\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        lastChange \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e System\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ecurrentTimeMillis\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eboolean\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003enoChangeInText_InTheLastFewSeconds\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e System\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ecurrentTimeMillis\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e lastChange \u003cspan style=\"color:#f92672\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e300\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eI leave the \u0026ldquo;postAtTime\u0026rdquo; as an exercise for the reader. Got a grip on Handlers? Happy threading!\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eFollow the discussion on \u003ca href=\"https://news.ycombinator.com/item?id=7921979\"\u003eHacker News\u003c/a\u003e or \u003ca href=\"http://www.reddit.com/r/androiddev/comments/28nsty/primer_on_threading_and_handlers_in_android/\"\u003eReddit\u003c/a\u003e or \u003ca href=\"https://plus.google.com/106712246601366256750/posts/KMU37xoYGuY\"\u003eGoogle Plus\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e\n"
    },
    {
        "title" : "How I remembered Roshambo 2.0 (Rock Paper Scissors Lizard Spock)",
        "date_published" : "2013-06-07T00:00:00-07:00",
        "id" : "https://kau.sh/blog/presentations-are-easy-just-tell-stories/",
        "file_path" : "blog/2013-06-07-presentations-are-easy-just-tell-stories.md",
        "url" : "https://kau.sh/blog/presentations-are-easy-just-tell-stories/",
        "content_html" : "\u003cp\u003eThe title was just to grab your attention. The tl;dr version of this post is: get good at story telling. It\u0026rsquo;ll help you with two things:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003col\u003e\n\u003cli\u003eBecoming a better presenter.\u003c/li\u003e\n\u003cli\u003eImproving your memory.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI urge you though, to read this post in it\u0026rsquo;s entirety. You might some of the stories interesting:\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003ePresentations are generally looked at with much anxiety and trepidation (within the tech community at least). There are two ways to combat this:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003ePractice like crazy (joining a group like Toastmasters helps)\u003c/li\u003e\n\u003cli\u003eHave something interesting to say.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eObviously, you have to do both to become a good presenter, but I want to focus more on the latter point. You know what most human beings find interesting? Stories! Even crappy ones. We\u0026rsquo;re wired from birth to like stories. If i heard two presentations, both of mediocre quality, i would definitely prefer the one that had a story to tell. I think stories make your presentations more personal and relatable. Heck, it doesn\u0026rsquo;t even have to be your own. People relate more easily to stories because they feel they can associate themselves with your pain/experience. A \u003ca href=\"http://ninjasandrobots.com/lead-with-pain\"\u003epost on ninjasandrobots\u003c/a\u003e (how cool is that domain name!) talks about leading with pain. It boils down to telling a story.\u003c/p\u003e\n\u003ch2 id=\"using-stories-to-captivate\"\u003eUsing stories to captivate\u003c/h2\u003e\n\u003cp\u003eIf you tell a great story, then it sticks. I have a professor here in CMU, that uses this tactic and boy is it mesmorizing. It totally helps that he\u0026rsquo;s got the experience (MIT, previous CTO of the research dev labs of a tech giant that makes phones etc. Hint: if you\u0026rsquo;ve used a mobile phone in the past 5-8 years, you have definitely used his ex-company\u0026rsquo;s phones). We were working on a project with him on collecting sensor data. He gave us an example of how data is always valuable. The only problem, is that the value of that data is realized at a different time.\u003c/p\u003e\n\u003cp\u003eHe gave us this example: the fire department had a service where people could call in emergencies, along with pictures of the site. You can\u0026rsquo;t really control the inflow of data with the public, so you had people sending in pictures of dead cats around the city. Yes this was tragic, but there isn\u0026rsquo;t really much a fire department can do now with this info right? Yes and No. A few weeks later, there was an anthrax scare in the city and it was extremely important for the HAZMAT department to find the source of the outbreak. You know which creatures are most sensitive to anthrax? cats. Suddenly those dead cat pictures  became tremendously useful, in tackling a major disease outbreak. That story was one of the many, that our professor told and mesmorized us into working on his project (note to self: write more posts about those stories).\u003c/p\u003e\n\u003ch2 id=\"improving-your-memory\"\u003eImproving your memory\u003c/h2\u003e\n\u003cp\u003eI gave this goofy presentation on \u003ca href=\"http://en.wikipedia.org/wiki/Rock-paper-scissors-lizard-Spock\"\u003eRoshambo 2.0\u003c/a\u003e (the lizard-spock variant popularized by The Big Bang theory) once and obviously the presentation required that I get the sequence right. It\u0026rsquo;s pretty tricky, even Sheldon \u003ca href=\"http://www.youtube.com/watch?v=tCNxvsP-Ce8\"\u003egot it wrong\u0026hellip;\u003c/a\u003e \u003ca href=\"http://www.youtube.com/watch?v=Z2z-AbYMk5Q\"\u003emultiple times\u003c/a\u003e. This was sort of a lightening talk I had to give at school and it was a casual setting, which meant the audience were my friends and they would totally rip me apart if I got it wrong. I thankfully got it right in one shot :D and it didn\u0026rsquo;t really matter if my delivery style, poise, body language etc. was great. My presentation was a success mostly because I got it right in one swoop. People came up to me and asked if i had a photographic memory? It\u0026rsquo;s actually quite the opposite. I have a horrible memory. Close friends know that I have the admirable feat of genuinely forgetting my own birthday one year (if my dear folks and brother hadn\u0026rsquo;t reminded me at 12:00am, I would have probably gone through the whole day not realizing I clocked another year). Digression aside, the way I managed to get Roshambo 2.0 right was that I weaved a crazy story in my head to follow the sequence. If you \u003cem\u003earen\u0026rsquo;t\u003c/em\u003e interested in the story that I came up with, skip the next paragraph (why did you start reading this post though?).\u003c/p\u003e\n\u003cp\u003eI imagined myself starting with a pair of scissors cutting paper.I look at the paper and then realized i had used that to cover a rock once, the same rock that I used to chuck at a lizard. That pesky lizard was a blue necked one, similar to the one that poisons Spock in a fictional Star Trek episode. In that fictional episode, Spock was so mad with Kirk\u0026rsquo;s tomfoolery, that he chucks a scissor at Kirk, but misses and lands up breaking it. Kirk to make up for his actions, decides to kill/decaptiate the same blue necked Lizard(that poisoned Spock), with a scissor. During the battle, the Lizard needed nutrition, so it decides to eat paper. In a crazy twist of serendipitous circumstances, the paper consumed was the same one that Kirk initially wrote to disprove Spock, in an experiment Spock was doing, to vaporize Rock. Oh and Rock beats Scissors. The key here is to make your own story cause this might make no sense at all, but in my head I can see the whole story playing out crystal clear.\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s magical how stories can greatly help improve memory. I\u0026rsquo;m pretty sure there are scientific studies conducted by people far more experienced and knowledgeable than me, proving this point but Roshambo 2.0 was proof enough for me.\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re not as excited as you were led to believe reading this post, I leave you with links to presentations given by the masters. You cannot not be impressed after this.\u003c/p\u003e\n\u003ch3 id=\"sir-ken-robinson\"\u003eSir Ken Robinson\u003c/h3\u003e\n\u003cp\u003eDoesn\u0026rsquo;t use slides, has a great sense of humor, comes up on stage and just tells his story (with an impressive British accent):\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=iG9CE55wbtY\"\u003eSchools kill creativity - 2006\u003c/a\u003e : His legendary TED talk.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.youtube.com/watch?v=r9LelXa3U_I\"\u003eBring on the learning revolution - 2010\u003c/a\u003e : His follow up talk on TED.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=wX78iKhInsc\"\u003eHow to escape education\u0026rsquo;s death valley - 2012\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"steve-jobs\"\u003eSteve Jobs\u003c/h3\u003e\n\u003cp\u003eYou know he was going to be mentioned somehwere in the post\u0026hellip;\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.youtube.com/watch?v=UF8uR6Z6KLc\"\u003eStanford Commencement Address - 2005\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.youtube.com/watch?v=vZYlhShD2oQ\"\u003eFirst iPhone keynote - 2007\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"randy-pausch\"\u003eRandy Pausch\u003c/h3\u003e\n\u003cp\u003eBesides the amazing stories he tells, his story alone is impressive and moving enough to captivate the audience.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.youtube.com/watch?v=ji5_MqicxSo\"\u003eThe Last Lecture\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.youtube.com/watch?v=blaK_tB_KQA\"\u003eTime Management\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"for-the-techies\"\u003eFor the techies:\u003c/h3\u003e\n\u003cp\u003eTech presentations can also be made interesting. Here are some random examples that are favorites of mine:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=l9JXH7JPjR4\"\u003eHow to talk to developers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.youtube.com/watch?v=lyZQPjUT5B4\"\u003eBubble Sort demonstrated by Hungarian dance\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eRock on!\u003c/p\u003e\n"
    },
    {
        "title" : "A developer's life",
        "date_published" : "2013-04-06T00:00:00-07:00",
        "id" : "https://kau.sh/blog/a-developers-life/",
        "file_path" : "blog/2013-04-06-a-developers-life.md",
        "url" : "https://kau.sh/blog/a-developers-life/",
        "content_html" : "\u003cp\u003eThis is by far the funniest stuff I\u0026rsquo;ve read this year. Never fails to crack me up\u0026hellip;\u003c/p\u003e\n"
    },
    {
        "title" : "We humans are capable of greatness",
        "date_published" : "2013-04-06T00:00:00-07:00",
        "id" : "https://kau.sh/blog/we-humans-are-capable-of-greatness-carl-sagan/",
        "file_path" : "blog/2013-04-06-we-humans-are-capable-of-greatness-carl-sagan.md",
        "url" : "https://kau.sh/blog/we-humans-are-capable-of-greatness-carl-sagan/",
        "content_html" : "\u003cblockquote\u003e\n\u003cp\u003eFor All Our Failings, Despite Our Limitations and Fallibilities, We Humans Are Capable of Greatness\u0026hellip;\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003ca href=\"http://en.wikipedia.org/wiki/Carl_Sagan\"\u003eCarl Sagan\u003c/a\u003e\u003c/p\u003e\n"
    },
    {
        "title" : "Comfort in Coding",
        "date_published" : "2013-01-19T00:00:00-07:00",
        "id" : "https://kau.sh/blog/comfort-in-coding/",
        "file_path" : "blog/2013-01-19-comfort-in-coding.md",
        "url" : "https://kau.sh/blog/comfort-in-coding/",
        "content_html" : "\u003cp\u003eThere\u0026rsquo;s something innately comforting about coding. The solution is not known but the variables are fixed. The ambiguities are minimal and the choices are simple. The rule book is adhered to. You mess up and you get bugs, you get it right and a solution is reached. If the solution is good, it becomes poetry.\u003c/p\u003e\n\u003cp\u003eI realize why management have it tough now. The jargon, documentation, definitions, ambiguity and interpretations that they have to deal with are such a mess.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eI write this as I power through a course where in order to take a break from it all, I resort to coding.\u003c/em\u003e\u003c/p\u003e\n"
    },
    {
        "title" : "New Year - 2013",
        "date_published" : "2013-01-01T00:00:00-07:00",
        "id" : "https://kau.sh/blog/new-year-2013/",
        "file_path" : "blog/2013-01-01-new-year-2013.md",
        "url" : "https://kau.sh/blog/new-year-2013/",
        "content_html" : "\u003cp\u003eMy last post didn\u0026rsquo;t exactly end in an optimistic note. Let\u0026rsquo;s correct that:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eWishing you all a happy, joyous and peaceful 2013 folks!\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThe Mayans predicted that the world-as we know it-would end but we\u0026rsquo;re still here standing (cheers to that).\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eThe new year is a time to reflect and wipe the slate clean. People \u003ca href=\"http://ryaneshea.com/dont-make-a-new-years-resolution\"\u003eadvice against making new year resolutions\u003c/a\u003e but I do them anyway. I like taking a look back at my \u003ca href=\"/categories/#new-year\"\u003eprevious resolutions\u003c/a\u003e. Helps me get a better understanding of my achievement or lack thereof.\u003c/p\u003e\n\u003ch2 id=\"stuff-done-in-2012\"\u003eStuff done in 2012:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eGot in to the \u003ca href=\"http://www.cmu.edu/silicon-valley/academics/software-engineering/index.html\"\u003emasters program at Carnegie Mellon\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eLearned Ruby(\u0026amp; Rails) and built a couple of sites with it. Long way to go but loving it.\u003c/li\u003e\n\u003cli\u003eScrewed around with some \u003ca href=\"https://github.com/kaushikgopal/\"\u003esmall github projects\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eMoved this blog along with all my old wordpress posts to Octopress.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNot too bad.\u003c/p\u003e\n\u003ch2 id=\"stuff-i-couldnt-get-done-in-2012\"\u003eStuff I couldn\u0026rsquo;t get done in 2012:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eGet back in shape (This one\u0026rsquo;s been there since my 2009 new year resolution list. But I have a good feeling 2013 will see this task done).\u003c/li\u003e\n\u003cli\u003eSound engineering (I did do a bunch of editing here and there for some folks, but this was stuff I had down and didn\u0026rsquo;t particularly learn anything new in the process).\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"stuff-i-want-to-do-in-2013\"\u003eStuff I want to do in 2013\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eGet back in shape (In addition to hitting the gym planning to \u003ca href=\"http://www.fourhourworkweek.com/blog/2012/07/12/how-to-lose-100-pounds/\"\u003eeat better\u003c/a\u003e).\u003c/li\u003e\n\u003cli\u003eGet more sleep (I have this bad feeling 2012 \u003ca href=\"http://news.bbc.co.uk/2/hi/health/6347043.stm\"\u003ezapped some of my brain cells\u003c/a\u003e).\u003c/li\u003e\n\u003cli\u003eGet really good at Rails (looking at running through the \u003ca href=\"https://www.destroyallsoftware.com/screencasts\"\u003eDestroy all Software\u003c/a\u003e and \u003ca href=\"http://railscasts.com/\"\u003eRailcast\u003c/a\u003e screencasts).\u003c/li\u003e\n\u003cli\u003eGet a job after my masters, \u003ca href=\"http://www.paulgraham.com/love.html\"\u003epreferably doing something I love\u003c/a\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n"
    },
    {
        "title" : "Music used on the new \"All on iPad\" commercial",
        "date_published" : "2012-08-09T00:00:00-07:00",
        "id" : "https://kau.sh/blog/music-used-all-on-ipad-commercial/",
        "file_path" : "blog/2012-08-09-music-used-all-on-ipad-commercial.md",
        "url" : "https://kau.sh/blog/music-used-all-on-ipad-commercial/",
        "content_html" : "\u003cp\u003eApple released \u003ca href=\"http://www.youtube.com/watch?v=rDvweiW5ZKQ\"\u003ea new iPad ad\u003c/a\u003e during the Olympics. If you\u0026rsquo;re curious to know which song they used, it\u0026rsquo;s the song \u003ca href=\"http://www.youtube.com/watch?v=AoCljFnXVGE\"\u003e\u0026ldquo;Driving\u0026rdquo; by Stolen Jars\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eTwo other songs i picked from their previous ads:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://www.youtube.com/watch?v=HAzPYXEMLUM\"\u003eGoldengrove\u003c/a\u003e \u0026amp;  \u003ca href=\"http://www.youtube.com/watch?v=Cqz3SBQfVBM\"\u003eThe Kiss\u003c/a\u003e.\u003c/p\u003e\n"
    },
    {
        "title" : "if Pixar did Justice League",
        "date_published" : "2012-07-29T00:00:00-07:00",
        "id" : "https://kau.sh/blog/if-pixar-did-justice-league/",
        "file_path" : "blog/2012-07-29-if-pixar-did-justice-league.md",
        "url" : "https://kau.sh/blog/if-pixar-did-justice-league/",
        "content_html" : "\u003cp\u003ei would give my savings away for something like this.\u003c/p\u003e\n\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"/images/content/uploads/2012/07/jla-cg-concept-batman.jpg\"\n                \n                \n                    alt=\"Pixar Batman\"\n                \n                \n                \n            /\u003e\n\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"/images/content/uploads/2012/07/jla-cg-concept-bruce-clark.jpg\"\n                \n                \n                    alt=\"Pixar Clark \u0026amp; Bruce\"\n                \n                \n                \n            /\u003e\n\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n\u003cfigure \u003e\n\n    \u003cdiv align=\"center\"\u003e\n        \n            \u003cimg src=\"/images/content/uploads/2012/07/jla-cg-concept-superman.jpg\"\n                \n                \n                    alt=\"Pixar Superman\"\n                \n                \n                \n            /\u003e\n\n            \n            \u003cfigcaption\u003e\n                \n\n                \n                        \n\n                        \n                            \n                            \n                            \u003ca class=\"center\" href=\"https://www.deviantart.com/danielaraya/gallery/39918973/justice-league-project\"\u003e\n                            \n                        \n\n                                Daniel Araya\n\n                            \u003c/a\u003e\n                \n\n            \u003c/figcaption\u003e\n            \n\n    \u003c/div\u003e\n    \n\n\u003c/figure\u003e\n\n"
    },
    {
        "title" : "Learning and Looking Foolish",
        "date_published" : "2012-06-17T00:00:00-07:00",
        "id" : "https://kau.sh/blog/learning-and-looking-foolish/",
        "file_path" : "blog/2012-06-17-learning-and-looking-foolish.md",
        "url" : "https://kau.sh/blog/learning-and-looking-foolish/",
        "content_html" : "\u003cblockquote\u003e\n\u003cp\u003eI\u0026rsquo;m willing to look foolish, if it means I\u0026rsquo;ll learn something.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis is the best piece of advice I\u0026rsquo;ve ever received, courtesy a chemistry professor back in my days of IIT. I did miserably in that course but I picked up this piece of advice that\u0026rsquo;s been a guiding beacon ever since.\u003c/p\u003e\n"
    },
    {
        "title" : "on the new Twitter logo",
        "date_published" : "2012-06-08T00:00:00-07:00",
        "id" : "https://kau.sh/blog/on-the-new-twitter-logo/",
        "file_path" : "blog/2012-06-08-on-the-new-twitter-logo.md",
        "url" : "https://kau.sh/blog/on-the-new-twitter-logo/",
        "content_html" : "\u003cp\u003eTwitter\u0026rsquo;s got a \u003ca href=\"http://blog.twitter.com/2012/06/taking-flight-twitterbird.html\"\u003enew logo\u003c/a\u003e. It\u0026rsquo;s \u003ca href=\"http://labs.upperdog.se/twitter-logo-in-css/\"\u003eclean and simple\u003c/a\u003e. But here\u0026rsquo;s a more astute observation from \u003ca href=\"http://www.underconsideration.com/brandnew/archives/twitter_gives_you_the_bird.php\"\u003eunderconsideration.com\u003c/a\u003e :\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eFor the most part, all the news sources reporting on the revised bird have focused on its visual update, which I will get to soon, but the real story here is that Twitter has dropped its name from the logo. If you look at the opening image of this post, the change is quite drastic. And ballsy. Twitter has achieved in less than six years what Nike, Apple, and Target took decades to do: To be recognizable without a name, just an icon.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eby way of the \u003ca href=\"http://daringfireball.net/linked/2012/06/07/twitter-bird\"\u003echairman\u003c/a\u003e\u003c/p\u003e\n"
    },
    {
        "title" : "Stephen Fry - language",
        "date_published" : "2012-05-20T00:00:00-07:00",
        "id" : "https://kau.sh/blog/stephen-fry-language/",
        "file_path" : "blog/2012-05-20-stephen-fry-language.md",
        "url" : "https://kau.sh/blog/stephen-fry-language/",
        "content_html" : "\u003cp\u003eHear this recitation by Stephen Fry ((this man could read the instruction manual of a tape recorder and i would still link to it and love it)), then think about what he says.\u003c/p\u003e\n\u003cp\u003eHear it again, then meditate on what he says.\u003c/p\u003e\n"
    },
    {
        "title" : "Earth - the pale blue dot",
        "date_published" : "2012-05-19T00:00:00-07:00",
        "id" : "https://kau.sh/blog/earth-the-pale-blue-dot/",
        "file_path" : "blog/2012-05-19-earth-the-pale-blue-dot.md",
        "url" : "https://kau.sh/blog/earth-the-pale-blue-dot/",
        "content_html" : "\u003cblockquote\u003e\n\u003cp\u003efor all our failings, despite our limitations and fallibilities , we humans are capable of greatness\u0026hellip;\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003efrom the book \u003ca href=\"http://www.amazon.com/gp/product/0345376595/ref=as_li_ss_tl?ie=UTF8\u0026amp;tag=httpkaushco-20\u0026amp;linkCode=as2\u0026amp;camp=1789\u0026amp;creative=390957\u0026amp;creativeASIN=0345376595\"\u003ePale Blue Dot: A Vision of the Human Future in Space\u003c/a\u003e\nby astronomer Carl Sagan\u003c/p\u003e\n"
    },
    {
        "title" : "The Janitor from Columbia",
        "date_published" : "2012-05-14T00:00:00-07:00",
        "id" : "https://kau.sh/blog/the-janitor-from-columbia/",
        "file_path" : "blog/2012-05-14-the-janitor-from-columbia.md",
        "url" : "https://kau.sh/blog/the-janitor-from-columbia/",
        "content_html" : "\u003cp\u003eTruly inspirational stuff. I see a Tom Hanks movie script already in the making.\u003c/p\u003e\n"
    },
    {
        "title" : "Use paper towels more efficiently - shake and fold",
        "date_published" : "2012-05-04T00:00:00-07:00",
        "id" : "https://kau.sh/blog/use-paper-towels-more-efficiently-shake-and-fold/",
        "file_path" : "blog/2012-05-04-use-paper-towels-more-efficiently-shake-and-fold.md",
        "url" : "https://kau.sh/blog/use-paper-towels-more-efficiently-shake-and-fold/",
        "content_html" : "\u003cp\u003eI\u0026rsquo;m a little troubled that I love these kind of lifehack videos.\u003c/p\u003e\n"
    },
    {
        "title" : "the first rule of Markdown",
        "date_published" : "2012-04-24T00:00:00-07:00",
        "id" : "https://kau.sh/blog/the-first-rule-of-markdown/",
        "file_path" : "blog/2012-04-24-the-first-rule-of-markdown.md",
        "url" : "https://kau.sh/blog/the-first-rule-of-markdown/",
        "content_html" : "\u003cblockquote\u003e\n\u003cp\u003eFrankly, I was surprised that Gruber mentioned Markdown previewing at all. If you’ve been around the Markdown community for any length of time, you know that the first rule of Markdown is: Gruber never talks about Markdown\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003ca href=\"http://www.leancrew.com/all-this/2012/04/that-markdown-and-web-look/\"\u003efootnote from the awesome drdrang\u003c/a\u003e\u003c/p\u003e\n"
    },
    {
        "title" : "Learning is more important that Knowing",
        "date_published" : "2012-04-18T00:00:00-07:00",
        "id" : "https://kau.sh/blog/learning-is-more-important-that-knowing/",
        "file_path" : "blog/2012-04-18-learning-is-more-important-that-knowing.md",
        "url" : "https://kau.sh/blog/learning-is-more-important-that-knowing/",
        "content_html" : "\u003cblockquote\u003e\n\u003cp\u003e\u0026hellip; You should mention what technologies you are using (because listing WCF or Java will save me the hassle of applying, and you the hassle of rejecting me), but don\u0026rsquo;t list specific tools, languages and frameworks as requirements.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGood developers who know Rails can learn Django or Node.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGoing between Oracle, SQL Server, MySQL and Postgres is all pretty trivial.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026hellip; I remember being asked quite eagerly, during a pre-interview, if I knew a specific view engine (like erb, or haml\u0026hellip;). Seriously, a view engine!?!? A shitty programmer can learn a new view engine in 10 minutes. Or a more common one that always gets to me is listing some specific version control software. Or a specific library that solves a trivial problem (I see this all the time from the .NET world with DI and mocking frameworks)\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGood programmers not only learn, but they want to learn. They often know enough about a technology so that they have a good feel for what problems it might solve; and only invest time truly learning it when it\u0026rsquo;s needed.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003edo read the article in its entirety. it\u0026rsquo;s pretty short and pure gold.\u003c/p\u003e\n"
    },
    {
        "title" : "Your Android phone is 15s incorrect ...",
        "date_published" : "2012-03-29T00:00:00-07:00",
        "id" : "https://kau.sh/blog/your-android-phone-is-15s-late/",
        "file_path" : "blog/2012-03-29-your-android-phone-is-15s-late.md",
        "url" : "https://kau.sh/blog/your-android-phone-is-15s-late/",
        "content_html" : "\u003cp\u003eDr.Neil Degrasse Tyson on the Verge:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e.. the bulk of the Androids get their time from GPS satellites.. The time keeping bases for the GPS satellites was defined upto 1982 and since 1982, 15 seconds have been added to civil time and that 15s is not included in the Andorid time keeping settings (because their getting their time directly from GPS), whereas the iPhone compensates for this and puts the 15s backs in\u0026hellip;\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eYou should watch the whole episode, Dr Neil is one of the most entertaining astro physicists on the planet.\u003c/p\u003e\n"
    },
    {
        "title" : "Good insight on interviewing programmers",
        "date_published" : "2012-03-08T00:00:00-07:00",
        "id" : "https://kau.sh/blog/good-insight-on-interviewing-programmers/",
        "file_path" : "blog/2012-03-08-good-insight-on-interviewing-programmers.md",
        "url" : "https://kau.sh/blog/good-insight-on-interviewing-programmers/",
        "content_html" : "\u003cp\u003eIf you\u0026rsquo;re in the business of hiring programmers, the article linked is a must read. It\u0026rsquo;s concise and a gold read. No excuse for not reading it.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAvoid nano-questions\u003c/li\u003e\n\u003cli\u003eA good engineer thinks abstractly in terms of designing and building systems, they think in terms of algorithms, components, and engineering design. They do not necessarily know all of the details of syntax of a given language, especially if they are used to a good IDE\u0026hellip;\u003c/li\u003e\n\u003cli\u003e\u0026hellip; it is more important that I be able to tell you \u003cstrong\u003ewhen and where\u003c/strong\u003e I should use inheritance, and \u003cstrong\u003ewhen and where\u003c/strong\u003e I should use polymorphism, than to be able to \u003cstrong\u003espit off the definition\u003c/strong\u003e. ((bolded text my own))\u003c/li\u003e\n\u003cli\u003eBasically: Any question that takes 5 seconds to answer with Google is not a good question. My favorite phone interview question? \u0026ldquo;What’s your favorite language?\u0026rdquo; followed by \u0026ldquo;What are it’s weaknesses?\u0026rdquo;\u003c/li\u003e\n\u003c/ul\u003e\n"
    },
    {
        "title" : "Will it improve upon on the silence? - Sri Sathya Sai Baba",
        "date_published" : "2012-01-10T00:00:00-07:00",
        "id" : "https://kau.sh/blog/will-it-improve-upon-on-the-silence/",
        "file_path" : "blog/2012-01-10-will-it-improve-upon-on-the-silence.md",
        "url" : "https://kau.sh/blog/will-it-improve-upon-on-the-silence/",
        "content_html" : "\u003cblockquote\u003e\n\u003cp\u003eBefore you speak, think:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIs it necessary?\u003c/li\u003e\n\u003cli\u003eIs it true?\u003c/li\u003e\n\u003cli\u003eIs it kind?\u003c/li\u003e\n\u003cli\u003eWill it hurt anyone?\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eWill it improve on the silence\u003c/strong\u003e?\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003ca href=\"http://www.saibabaofindia.com/sai_baba_quotes_on_silence.html\"\u003eSri Sathya Sai Baba\u003c/a\u003e\u003c/p\u003e\n"
    },
    {
        "title" : "how Tommy Emmanuel mics his acoustic guitar",
        "date_published" : "2012-01-07T00:00:00-07:00",
        "id" : "https://kau.sh/blog/how-tommy-emmanuel-mics-his-acoustic-guitar/",
        "file_path" : "blog/2012-01-07-how-tommy-emmanuel-mics-his-acoustic-guitar.md",
        "url" : "https://kau.sh/blog/how-tommy-emmanuel-mics-his-acoustic-guitar/",
        "content_html" : "\u003cp\u003efor his professional albums, he uses a combination of 4 mics as explained in \u003ca href=\"http://www.youtube.com/watch?v=r1KI8JQEzz4\"\u003ethis youtube video\u003c/a\u003e. the song he plays in the end is Mombasa, easily one of his best compositions.\u003c/p\u003e\n\u003cp\u003eon the move he records with an Apogee ONE as seen in \u003ca href=\"http://www.youtube.com/watch?v=tEHnMuq8F-0\"\u003ethis youtube video\u003c/a\u003e. for an on-the-move mic and sound capture device, the Apogee ONE is simply mind blowing.\u003c/p\u003e\n"
    },
    {
        "title" : "Programmer Competency Matrix",
        "date_published" : "2012-01-06T00:00:00-07:00",
        "id" : "https://kau.sh/blog/programmer-competency-matrix/",
        "file_path" : "blog/2012-01-06-programmer-competency-matrix.md",
        "url" : "https://kau.sh/blog/programmer-competency-matrix/",
        "content_html" : "\u003cp\u003edefinitely dated, but interesting yardsticks.\u003c/p\u003e\n\u003cp\u003evia \u003ca href=\"http://news.ycombinator.com/item?id=3433311\"\u003eHacker News\u003c/a\u003e\u003c/p\u003e\n"
    },
    {
        "title" : "Why it's important to know how to write for CS Majors",
        "date_published" : "2012-01-03T00:00:00-07:00",
        "id" : "https://kau.sh/blog/why-its-important-to-know-how-to-write-for-cs-majors/",
        "file_path" : "blog/2012-01-03-why-its-important-to-know-how-to-write-for-cs-majors.md",
        "url" : "https://kau.sh/blog/why-its-important-to-know-how-to-write-for-cs-majors/",
        "content_html" : "\u003cp\u003eYou\u0026rsquo;d be surprised how valuable the skill of eloquent communication is even in the field of IT. Keeping users apprised with your progress is perhaps the most important thing to do when working with clients. But keeping them apprised is tricky business and the ability to clearly put down in words,what to expect, is a basic necessity today.\u003c/p\u003e\n\u003cp\u003eEven if you have nothing to do with CS or computers, you should read the linked article. Fantastic advice.\u003c/p\u003e\n"
    },
    {
        "title" : "Songs from TV",
        "date_published" : "2011-12-31T00:00:00-07:00",
        "id" : "https://kau.sh/blog/songs-from-tv/",
        "file_path" : "blog/2011-12-31-songs-from-tv.md",
        "url" : "https://kau.sh/blog/songs-from-tv/",
        "content_html" : "\u003cp\u003eProof that my TV watching addiction has not been in vain:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIn the Waiting Line by Zero 7 (\u003ca href=\"http://en.wikipedia.org/wiki/Needle_in_a_Haystack_(House)\"\u003eHouse S03e13\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.youtube.com/watch?v=AZZSMXuGw-I\u0026amp;feature=related\"\u003eHome by Zero 7\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGrounds for Divorce by Elbow (House Season 6 premier)\u003c/li\u003e\n\u003cli\u003eI\u0026rsquo;m not Drowning by Steve Winwood  (House s05e18)\u003c/li\u003e\n\u003cli\u003eCompany by Philip Glass (House s05e23)\u003c/li\u003e\n\u003cli\u003eHigh School Composition (House s03e15 : the one with Dave Mathew) \u003cem\u003epossibly originally by \u003ca href=\"http://www.jonehrlich.com/\"\u003eJon Ehrlich\u003c/a\u003e\u003c/em\u003e\u003c/li\u003e\n\u003cli\u003ePride by Syntax (Bones s01e16)\u003c/li\u003e\n\u003cli\u003eBabylon by David Carbonora (Mad Men s01e06)\u003c/li\u003e\n\u003cli\u003eBelieve by The Bravery (Prison Break s04e07)\u003c/li\u003e\n\u003cli\u003ePerfect Day by The Constellations (Chuck s04e08)\u003c/li\u003e\n\u003cli\u003eCobrastyle by Teddybears (Chuck s01e01)\u003c/li\u003e\n\u003c/ul\u003e\n"
    },
    {
        "title" : "What you need to know about memory and CPU",
        "date_published" : "2011-12-20T00:00:00-07:00",
        "id" : "https://kau.sh/blog/ram-memory-cpu-processing-performance/",
        "file_path" : "blog/2011-12-20-ram-memory-cpu-processing-performance.md",
        "url" : "https://kau.sh/blog/ram-memory-cpu-processing-performance/",
        "content_html" : "\u003cp\u003eWhat you need to know about RAM, memory, CPU Processing and other important stuff that could tell you why your computer is slow.\u003c/p\u003e\n\u003ch3 id=\"physical-rammemory\"\u003ePhysical RAM/Memory\u003c/h3\u003e\n\u003cp\u003eRAM chips funcion quite literally like your Computer\u0026rsquo;s Memory. All the information that needs to be remembered when operating between different tasks (or even the same task) gets stored here. You know how people who have great memories can be awesome, that translates to the computer world as well, more memory = more awesome. So 8GB \u0026raquo; 4GB \u0026raquo; 2GB \u0026raquo; 1GB  \u0026raquo; (this is 2011, don\u0026rsquo;t even consider anything less than 1GB).\u003c/p\u003e\n\u003ch3 id=\"virtual-ram-or-virtual-memory\"\u003eVirtual RAM or Virtual Memory\u003c/h3\u003e\n\u003cp\u003eJust like how humans can\u0026rsquo;t store everything in their head, there are times when some of the stuff has to be written down or stored as reminders. When your computer\u0026rsquo;s physical RAM or memory is full, it begins to offload some of the information onto a special space carved out of your hard disk (your hard disk is like a big notebook, you\u0026rsquo;ve generally got plenty of space here). This carved out area is called a swapfile or Virtual Memory or VM. VM, is hard disk space that can be used as memory and VM size indicates the amount of disk space currently being used as memory.\u003c/p\u003e\n\u003ch3 id=\"paging-outthrashing\"\u003ePaging out/Thrashing:\u003c/h3\u003e\n\u003cp\u003eWhen you need to start writing everything onto your notebook, you\u0026rsquo;ve got a problem. You\u0026rsquo;re either not organized or you\u0026rsquo;re doing things too complex for your IQ to handle. In the computer world the process of writing stuff onto your virtual RAM is called Paging out or Thrashing. When you see too many page outs or thrasing cycles, you\u0026rsquo;ve got a problem because HDDs are much slower than RAM modules when calling back information (If you use solid state drives or SSDs, you\u0026rsquo;re going to see a marked performance difference. Even still, nothing like physical RAM). The number of gigabytes of information your operating system has moved between RAM and disk space is generally indicated by Page in/outs.\u003c/p\u003e\n\u003ch3 id=\"page-outpage-ins\"\u003ePage Out/Page Ins\u003c/h3\u003e\n\u003cp\u003ePage out is the movement of data from RAM to hard disk and Page in is the movement of data from hard disk to RAM. Ideally you shouldn\u0026rsquo;t have any page outs.\u003c/p\u003e\n\u003ch3 id=\"cpu-processing\"\u003eCPU Processing\u003c/h3\u003e\n\u003cp\u003ePhysical RAM is the \u003cem\u003edestination\u003c/em\u003e to store the temporary data, but the part instructing everyone around on which data to store and where, is the CPU. You can think of it as the actual brain. More GHz = bigger brain = more awesome. So a 2 GHz processor is  generally more awesome than a 1.5 GHz processor.\u003c/p\u003e\n\u003ch3 id=\"cpu-processor-usage\"\u003eCPU Processor usage\u003c/h3\u003e\n\u003cp\u003eYou won\u0026rsquo;t generally find your CPU processor usage peaked (if you do, you\u0026rsquo;ve got a problem). It\u0026rsquo;s ok to have spikes in your processor usage. These are the times when your computer\u0026rsquo;s  brain is doing some heavy lifting, telling eveyone where to go and what to do. But if you find your usage constantly high, 100% most of the time, there\u0026rsquo;s some ugly memory leak going on that needs to be taken care of.\u003c/p\u003e\n\u003ch3 id=\"gpu-video-card-memory\"\u003eGPU Video card memory\u003c/h3\u003e\n\u003cp\u003eFor demanding games and other video graphics intensive processes, people generally have independent video cards that function like little CPUs themselves and have their own memory. The CPU part of a video card is called a GPU and the memory part is called -wait for it-memory. When doing heavy duty video editing, 3D graphics or games, you want a dedicated graphics card.\u003c/p\u003e\n\u003ch3 id=\"real-memory\"\u003eReal Memory\u003c/h3\u003e\n\u003cp\u003eThe amount of real memory a program is using at that instant. This is real memory used from your memory chips on the RAM module.\u003c/p\u003e\n\u003ch3 id=\"free-memory\"\u003eFree Memory\u003c/h3\u003e\n\u003cp\u003eGood glorious free memory that is completely unused.\u003c/p\u003e\n\u003ch3 id=\"wired-memory\"\u003eWired Memory\u003c/h3\u003e\n\u003cp\u003eAlso knows as Resident Memory, the memory is locked or reserved and cannot be shared with other processes. OS/System processes, drivers, kernel code etc. tend to use this memory.\u003c/p\u003e\n\u003ch3 id=\"active-memory\"\u003eActive Memory\u003c/h3\u003e\n\u003cp\u003eMemory actively being used. The Real Memory values mentioned earlier should sum up to this value.\u003c/p\u003e\n\u003ch3 id=\"inactive-memory\"\u003eInactive Memory\u003c/h3\u003e\n\u003cp\u003eMemory that has been used to cache disk I/O. You can think of inactive memory like free memory that\u0026rsquo;s been reserved for a recently closed application, but will be used when \u0026rsquo;true\u0026rsquo; free memory has been exhausted. If you have 1 GB of memory (for the sake of making this discussion easier) on a freshly booted system, imagine the OS uses 300 MB and you open an app that uses 200 MB. You now have a total of 500 MB used, and 500 free. If you close that app that was using 200 MB, the memory is marked inactive and you\u0026rsquo;ll now have 300 used (OS), 200 inactive, and 500 free. If you open an app that requires 600 MB, it\u0026rsquo;ll use the free memory then pull from the inactive pool.\u003c/p\u003e\n\u003ch3 id=\"used-memory\"\u003eUsed Memory\u003c/h3\u003e\n\u003cp\u003eWired + Active + Inactive. Nothing useful here, move on.\u003c/p\u003e\n"
    },
    {
        "title" : "Fonts used in new BBC TV series Sherlock",
        "date_published" : "2011-12-19T00:00:00-07:00",
        "id" : "https://kau.sh/blog/fonts-used-in-new-bbc-tv-series-sherlock/",
        "file_path" : "blog/2011-12-19-fonts-used-in-new-bbc-tv-series-sherlock.md",
        "url" : "https://kau.sh/blog/fonts-used-in-new-bbc-tv-series-sherlock/",
        "content_html" : "\u003cp\u003eSo \u003ca href=\"https://web.archive.org/web/20120423232419/http://www.karthickgopal.net/incredible-depth-in-the-mundane/\"\u003emy brother\u003c/a\u003e introduced me to this really awesome BBC TV Series: \u003ca href=\"http://en.wikipedia.org/wiki/Sherlock_(TV_series)\"\u003eSherlock\u003c/a\u003e. If you\u0026rsquo;re a \u003ca href=\"http://ask.metafilter.com/162092/The-Case-of-the-Unknown-Font\"\u003etype nerd\u003c/a\u003e or design enthusiast, the very first thing you would notice is the brilliant typography used throughout the show.\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re losing sleep finding out which fonts were used:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://new.myfonts.com/fonts/fw-acme/af-generation-z/\"\u003eAF Generation Z\u003c/a\u003e (in the text messages)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://new.myfonts.com/fonts/p22/underground/\"\u003eP22 London Underground\u003c/a\u003e (when deducing the clues)\u003c/li\u003e\n\u003c/ul\u003e\n"
    },
    {
        "title" : "Steve Jobs",
        "date_published" : "2011-10-06T00:00:00-07:00",
        "id" : "https://kau.sh/blog/steve/",
        "file_path" : "blog/2011-10-06-steve-jobs-february-24-1955-october-5-2011.md",
        "url" : "https://kau.sh/blog/steve/",
        "content_html" : "\u003cp\u003eFebruary 24, 1955 – October 5, 2011\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://www.nytimes.com/2011/10/30/opinion/mona-simpsons-eulogy-for-steve-jobs.html?_r=2\u0026amp;pagewanted=all\"\u003e\u003cimg src=\"https://commons.wikimedia.org/wiki/File:Steve_Jobs_Headshot_2010-CROP.jpg\" alt=\"Steve Jobs February 24, 1955 – October 5, 2011\"\u003e\u003c/a\u003e\u003c/p\u003e\n"
    },
    {
        "title" : "parkour wizardry @ Tempest Freerunning Academy",
        "date_published" : "2011-04-29T00:00:00-07:00",
        "id" : "https://kau.sh/blog/parkour-wizardry-tempest-freerunning-academy/",
        "file_path" : "blog/2011-04-29-parkour-wizardry-tempest-freerunning-academy.md",
        "url" : "https://kau.sh/blog/parkour-wizardry-tempest-freerunning-academy/",
        "content_html" : "\u003cp\u003efantastic video, great stunts and carefully edited. must watch!\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.youtube.com/watch?v=1fouvwilGWc\"\u003eTempest Freerunning Academy\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003ei just love the super smooth background score in the video. it\u0026rsquo;s a remix of the song Lights by Ellie Goulding and has become my favorite running tune. you can \u003ca href=\"http://www.bassnectar.net/2011/02/ellie-goulding-lights-bassnectar-remix/\"\u003edownload it for free here\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003evia: \u003ca href=\"http://kottke.org/11/04/parkour-school\"\u003ekottke.org\u003c/a\u003e\u003c/p\u003e\n"
    },
    {
        "title" : "great photography doesn't have to come only from DSLRs",
        "date_published" : "2010-12-17T00:00:00-07:00",
        "id" : "https://kau.sh/blog/great-photography-doesnt-have-to-come-only-from-dslrs/",
        "file_path" : "blog/2010-12-17-great-photography-doesnt-have-to-come-only-from-dslrs.md",
        "url" : "https://kau.sh/blog/great-photography-doesnt-have-to-come-only-from-dslrs/",
        "content_html" : "\u003cp\u003eThese stunning shots were taken with an iPhone camera:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://farm5.static.flickr.com/4078/4761002695_4dd17bd69e_z.jpg\"\u003eiPhone Fashion Shoot\u003c/a\u003e \u003ca href=\"http://fstoppers.com/iphone/\"\u003e- Fstoppers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://fstoppers.com/iphone/\"\u003eiPhone 3g model shoot\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.photoble.com/wp-content/uploads/2010/02/iphonephotosms4jah.jpg\"\u003eAmazing pics taken with an iPhone\u003c/a\u003e \u003ca href=\"http://www.photoble.com/photo-inspiration/amazing-pictures-taken-with-an-apple-iphone/\"\u003e- photoble.com\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.photoble.com/photo-inspiration/amazing-pictures-taken-with-an-apple-iphone/\"\u003ephotoble.com - Amazing pics with iPhone\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
    },
    {
        "title" : "New Year - 2010",
        "date_published" : "2009-12-31T00:00:00-07:00",
        "id" : "https://kau.sh/blog/new-year-2010/",
        "file_path" : "blog/2009-12-31-new-year-2010.md",
        "url" : "https://kau.sh/blog/new-year-2010/",
        "content_html" : "\u003cp\u003e2009 was good. I didn\u0026rsquo;t do to well in terms of fulfilling \u003ca href=\"/blog/2009\"\u003emy resolutions last year\u003c/a\u003e, but I\u0026rsquo;ve got a great feeling about 2010. Here\u0026rsquo;s 2010\u0026rsquo;s resolutions:\u003c/p\u003e\n\u003ch2 id=\"get-my-websiteblog-back-up\"\u003eGet my website/blog back up\u003c/h2\u003e\n\u003cp\u003eI\u0026rsquo;ve been saying this for too long now. 2010 WILL see this task done. Period..\u003c/p\u003e\n\u003ch2 id=\"read-one-book-a-month\"\u003eRead one book a month\u003c/h2\u003e\n\u003cp\u003eI sought to do something similar in 2009, instead I tweaked my rss feeds and lived like an information junkie. No regrets though. i\u0026rsquo;ve learned and gathered much more information than I would have reading just books. The problem though is that my attention span has dwindled to an alarming low. Going to take care of that.\u003c/p\u003e\n\u003ch2 id=\"get-fit-get-a-tattoo\"\u003eGet fit, get a Tattoo!\u003c/h2\u003e\n\u003cp\u003eI recently watched the movie Avatar with my folks. Both my bro and I were fascinated with the movie and in particular, \u003ca href=\"http://news.bme.com/wp-content/uploads/2009/12/screen-shot-2009-12-20-at-125942-am.png\"\u003eSam Worthington\u0026rsquo;s tattoo\u003c/a\u003e. My mom remarked, if you can get as fit as him, then i\u0026rsquo;ll pick the tattoo for you. This was mind-blowing for me. You see my family is an extremely pious one, and the fact that my mom would even hint at the possibility of me getting a tattoo made me giddy with joy.. This isn\u0026rsquo;t going to be done in a year. But I want that tattoo so bad :)\u003c/p\u003e\n\u003cp\u003e(Tried googling around for a pic of the tattoo, \u003ca href=\"http://news.bme.com/2009/12/20/avatar-the-movie/\"\u003ethis link\u003c/a\u003e is the best I could come up with. )\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eHappy New Year folks ! Here\u0026rsquo;s wishing your 2010 is ten times more snappier and jolly than you hope it to be. What are you planning for this 2010?\u003c/strong\u003e\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n"
    },
    {
        "title" : "New Year - 2009",
        "date_published" : "2008-12-31T00:00:00-07:00",
        "id" : "https://kau.sh/blog/new-year-2009/",
        "file_path" : "blog/2008-12-31-new-year-2009.md",
        "url" : "https://kau.sh/blog/new-year-2009/",
        "content_html" : "\u003cp\u003eIt\u0026rsquo;s New Year\u0026rsquo;s Eve and I\u0026rsquo;m all set with my resolutions. Until I started seriously blogging (which-if you believe-would be around mid 2008), I never really saw the point in drawing up these lists. It felt lame, pointless and a waste of time. But with the advent of my blogging ways, I realize that maintaining a resolution-list would help keep check and achieve my goals/ambitions much faster. Besides, 365 days from now it will be nice to see how my priorities and views might have changed.\u003c/p\u003e\n\u003cp\u003eBrace yourself:\u003c/p\u003e\n\u003ch2 id=\"start-regularly-gymming-again\"\u003eStart Regularly Gymming again\u003c/h2\u003e\n\u003cp\u003eIn 2006-2007 I morphed from a whooping 100kg couch potato to a 70kg cardio-freak. From the start-mid 2008, I was diligent with my gymming and en-route to my distant dream 6-pack. Time to start putting up Arnold posters again.\u003c/p\u003e\n\u003ch2 id=\"read-the-gazillion-books-just-bought\"\u003eRead the gazillion books just bought\u003c/h2\u003e\n\u003cp\u003eOne of the many good habits my brother passed on to me, is a love for reading books. What the bugger also passed on was an insatiable need to purchase all the awesomest books around. 2008 gave us Reality Check, Outliers, Tribes, Presentation Zenâ€¦ all of which I already posses a copy of. This is apart from the many books I purchased in 2007 but never got the time to fully read.\u003c/p\u003e\n\u003ch2 id=\"get-sketching\"\u003eGet Sketching\u003c/h2\u003e\n\u003cp\u003eI was at one point of time(sometime between the 7th and 9th grades) quite a decent artist. After my 10th (board exams), I completely left this and continued only to pursue my musical inclinations. I want to revive that lost interest and talent. Vector Graphics is also something I\u0026rsquo;m seriously looking at.\u003c/p\u003e\n\u003ch2 id=\"learn-arabic\"\u003eLearn Arabic\u003c/h2\u003e\n\u003cp\u003eI love learning languages. I\u0026rsquo;ve spent a major part of my life in the middle-east and it\u0026rsquo;s a shame I haven\u0026rsquo;t picked the language up yet. The fascinating thing about Arabic is that the script is really easy. I can in fact read and write Arabic pretty well. Each time I try to speak though, my \u003cem\u003ebakala\u003c/em\u003e owner thinks I\u0026rsquo;m a retard.\u003c/p\u003e\n\u003cp\u003eThere is no later, only now! It is my ardent belief that the number one productivity-killer is procrastination. I\u0026rsquo;ve fallen short of quite a few of my goals this year primarily for this reason. No more!\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a modest list, one that currently seems doable. Time will tell\u0026hellip;\u003c/p\u003e\n"
    }
    ]
}

